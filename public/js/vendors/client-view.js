"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk"] = self["webpackChunk"] || []).push([["client-view"],{

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=script&lang=js":
/*!****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=script&lang=js ***!
  \****************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var Util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! Util */ \"./resources/js/Utility/Util.js\");\n/* harmony import */ var _vendors_vuedraggable_src_vuedraggable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vendors/vuedraggable/src/vuedraggable */ \"./resources/js/app/vendors/vuedraggable/src/vuedraggable.js\");\n/* harmony import */ var _vuelidate_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @vuelidate/core */ \"./node_modules/@vuelidate/core/dist/index.mjs\");\n/* harmony import */ var vue_upload_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! vue-upload-component */ \"./node_modules/vue-upload-component/dist/vue-upload-component.js\");\n/* harmony import */ var vue_upload_component__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(vue_upload_component__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm-bundler.js\");\n/* harmony import */ var _components_UploadComponent_vue__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../components/UploadComponent.vue */ \"./resources/js/app/components/UploadComponent.vue\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return r; }; var t, r = {}, e = Object.prototype, n = e.hasOwnProperty, o = \"function\" == typeof Symbol ? Symbol : {}, i = o.iterator || \"@@iterator\", a = o.asyncIterator || \"@@asyncIterator\", u = o.toStringTag || \"@@toStringTag\"; function c(t, r, e, n) { return Object.defineProperty(t, r, { value: e, enumerable: !n, configurable: !n, writable: !n }); } try { c({}, \"\"); } catch (t) { c = function c(t, r, e) { return t[r] = e; }; } function h(r, e, n, o) { var i = e && e.prototype instanceof Generator ? e : Generator, a = Object.create(i.prototype); return c(a, \"_invoke\", function (r, e, n) { var o = 1; return function (i, a) { if (3 === o) throw Error(\"Generator is already running\"); if (4 === o) { if (\"throw\" === i) throw a; return { value: t, done: !0 }; } for (n.method = i, n.arg = a;;) { var u = n.delegate; if (u) { var c = d(u, n); if (c) { if (c === f) continue; return c; } } if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) { if (1 === o) throw o = 4, n.arg; n.dispatchException(n.arg); } else \"return\" === n.method && n.abrupt(\"return\", n.arg); o = 3; var h = s(r, e, n); if (\"normal\" === h.type) { if (o = n.done ? 4 : 2, h.arg === f) continue; return { value: h.arg, done: n.done }; } \"throw\" === h.type && (o = 4, n.method = \"throw\", n.arg = h.arg); } }; }(r, n, new Context(o || [])), !0), a; } function s(t, r, e) { try { return { type: \"normal\", arg: t.call(r, e) }; } catch (t) { return { type: \"throw\", arg: t }; } } r.wrap = h; var f = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var l = {}; c(l, i, function () { return this; }); var p = Object.getPrototypeOf, y = p && p(p(x([]))); y && y !== e && n.call(y, i) && (l = y); var v = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(l); function g(t) { [\"next\", \"throw\", \"return\"].forEach(function (r) { c(t, r, function (t) { return this._invoke(r, t); }); }); } function AsyncIterator(t, r) { function e(o, i, a, u) { var c = s(t[o], t, i); if (\"throw\" !== c.type) { var h = c.arg, f = h.value; return f && \"object\" == _typeof(f) && n.call(f, \"__await\") ? r.resolve(f.__await).then(function (t) { e(\"next\", t, a, u); }, function (t) { e(\"throw\", t, a, u); }) : r.resolve(f).then(function (t) { h.value = t, a(h); }, function (t) { return e(\"throw\", t, a, u); }); } u(c.arg); } var o; c(this, \"_invoke\", function (t, n) { function i() { return new r(function (r, o) { e(t, n, r, o); }); } return o = o ? o.then(i, i) : i(); }, !0); } function d(r, e) { var n = e.method, o = r.i[n]; if (o === t) return e.delegate = null, \"throw\" === n && r.i[\"return\"] && (e.method = \"return\", e.arg = t, d(r, e), \"throw\" === e.method) || \"return\" !== n && (e.method = \"throw\", e.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), f; var i = s(o, r.i, e.arg); if (\"throw\" === i.type) return e.method = \"throw\", e.arg = i.arg, e.delegate = null, f; var a = i.arg; return a ? a.done ? (e[r.r] = a.value, e.next = r.n, \"return\" !== e.method && (e.method = \"next\", e.arg = t), e.delegate = null, f) : a : (e.method = \"throw\", e.arg = new TypeError(\"iterator result is not an object\"), e.delegate = null, f); } function w(t) { this.tryEntries.push(t); } function m(r) { var e = r[4] || {}; e.type = \"normal\", e.arg = t, r[4] = e; } function Context(t) { this.tryEntries = [[-1]], t.forEach(w, this), this.reset(!0); } function x(r) { if (null != r) { var e = r[i]; if (e) return e.call(r); if (\"function\" == typeof r.next) return r; if (!isNaN(r.length)) { var o = -1, a = function e() { for (; ++o < r.length;) if (n.call(r, o)) return e.value = r[o], e.done = !1, e; return e.value = t, e.done = !0, e; }; return a.next = a; } } throw new TypeError(_typeof(r) + \" is not iterable\"); } return GeneratorFunction.prototype = GeneratorFunctionPrototype, c(v, \"constructor\", GeneratorFunctionPrototype), c(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = c(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), r.isGeneratorFunction = function (t) { var r = \"function\" == typeof t && t.constructor; return !!r && (r === GeneratorFunction || \"GeneratorFunction\" === (r.displayName || r.name)); }, r.mark = function (t) { return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, c(t, u, \"GeneratorFunction\")), t.prototype = Object.create(v), t; }, r.awrap = function (t) { return { __await: t }; }, g(AsyncIterator.prototype), c(AsyncIterator.prototype, a, function () { return this; }), r.AsyncIterator = AsyncIterator, r.async = function (t, e, n, o, i) { void 0 === i && (i = Promise); var a = new AsyncIterator(h(t, e, n, o), i); return r.isGeneratorFunction(e) ? a : a.next().then(function (t) { return t.done ? t.value : a.next(); }); }, g(v), c(v, u, \"Generator\"), c(v, i, function () { return this; }), c(v, \"toString\", function () { return \"[object Generator]\"; }), r.keys = function (t) { var r = Object(t), e = []; for (var n in r) e.unshift(n); return function t() { for (; e.length;) if ((n = e.pop()) in r) return t.value = n, t.done = !1, t; return t.done = !0, t; }; }, r.values = x, Context.prototype = { constructor: Context, reset: function reset(r) { if (this.prev = this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(m), !r) for (var e in this) \"t\" === e.charAt(0) && n.call(this, e) && !isNaN(+e.slice(1)) && (this[e] = t); }, stop: function stop() { this.done = !0; var t = this.tryEntries[0][4]; if (\"throw\" === t.type) throw t.arg; return this.rval; }, dispatchException: function dispatchException(r) { if (this.done) throw r; var e = this; function n(t) { a.type = \"throw\", a.arg = r, e.next = t; } for (var o = e.tryEntries.length - 1; o >= 0; --o) { var i = this.tryEntries[o], a = i[4], u = this.prev, c = i[1], h = i[2]; if (-1 === i[0]) return n(\"end\"), !1; if (!c && !h) throw Error(\"try statement without catch or finally\"); if (null != i[0] && i[0] <= u) { if (u < c) return this.method = \"next\", this.arg = t, n(c), !0; if (u < h) return n(h), !1; } } }, abrupt: function abrupt(t, r) { for (var e = this.tryEntries.length - 1; e >= 0; --e) { var n = this.tryEntries[e]; if (n[0] > -1 && n[0] <= this.prev && this.prev < n[2]) { var o = n; break; } } o && (\"break\" === t || \"continue\" === t) && o[0] <= r && r <= o[2] && (o = null); var i = o ? o[4] : {}; return i.type = t, i.arg = r, o ? (this.method = \"next\", this.next = o[2], f) : this.complete(i); }, complete: function complete(t, r) { if (\"throw\" === t.type) throw t.arg; return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && r && (this.next = r), f; }, finish: function finish(t) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var e = this.tryEntries[r]; if (e[2] === t) return this.complete(e[4], e[3]), m(e), f; } }, \"catch\": function _catch(t) { for (var r = this.tryEntries.length - 1; r >= 0; --r) { var e = this.tryEntries[r]; if (e[0] === t) { var n = e[4]; if (\"throw\" === n.type) { var o = n.arg; m(e); } return o; } } throw Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(r, e, n) { return this.delegate = { i: x(r), r: e, n: n }, \"next\" === this.method && (this.arg = t), f; } }, r; }\nfunction asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }\nfunction _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n); } _next(void 0); }); }; }\n\n\n\n\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({\n  props: [\"user\", \"model\", \"setting\", \"additional\"],\n  components: {\n    FileUpload: (vue_upload_component__WEBPACK_IMPORTED_MODULE_3___default()),\n    UploadComponent: _components_UploadComponent_vue__WEBPACK_IMPORTED_MODULE_5__[\"default\"],\n    draggable: _vendors_vuedraggable_src_vuedraggable__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n  },\n  setup: function setup(props, context) {\n    return {\n      v$: (0,_vuelidate_core__WEBPACK_IMPORTED_MODULE_2__[\"default\"])()\n    };\n  },\n  created: function created() {\n    this.m = this.attributeInit;\n  },\n  mounted: function mounted() {\n    this.model.expenses.length ? [] : this.expenses;\n    this.v$.model.$touch();\n  },\n  data: function data() {\n    return {\n      showModal: false,\n      expenses: this.model.expenses,\n      selector: \"\",\n      step: false,\n      keys: [],\n      selectBuilder: []\n    };\n  },\n  watch: {},\n  validations: function validations() {\n    return {\n      model: {}\n    };\n  },\n  computed: {\n    attributeInit: function attributeInit() {\n      return this.model;\n    },\n    contractPeriod: function contractPeriod() {\n      var date1 = new Date(this.model.contract_start_date);\n      var date2 = new Date(this.model.contract_end_date);\n      var oneDay = 1000 * 60 * 60 * 24;\n      var diffInTime = date2.getTime() - date1.getTime();\n      var diffInDays = Math.round(diffInTime / oneDay);\n      return diffInDays ? diffInDays : 0;\n    },\n    guaranteePeriod: function guaranteePeriod() {\n      var date1 = new Date(this.model.guarantee_start_date);\n      var date2 = new Date(this.model.guarantee_end_date);\n      var oneDay = 1000 * 60 * 60 * 24;\n      var diffInTime = date2.getTime() - date1.getTime();\n      var diffInDays = Math.round(diffInTime / oneDay);\n      return diffInDays ? diffInDays : 0;\n    },\n    contractStatus: function contractStatus() {\n      var date1 = new Date();\n      var date2 = new Date(this.model.contract_end_date);\n      if (date1 > date2) {\n        return \"დასრულებული\";\n      }\n      return \"მიმდინარე\";\n    },\n    guaranteeStatus: function guaranteeStatus() {\n      var date1 = new Date();\n      var date2 = new Date(this.model.guarantee_end_date);\n      if (date1 > date2) {\n        return \"დასრულებული\";\n      }\n      return \"მიმდინარე\";\n    },\n    daysLeft: function daysLeft() {\n      var date1 = new Date();\n      var date2 = new Date(this.model.contract_end_date);\n      var oneDay = 1000 * 60 * 60 * 24;\n      var diffInTime = date2.getTime() - date1.getTime();\n      var diffInDays = Math.round(diffInTime / oneDay);\n      return diffInDays ? diffInDays : 0;\n    },\n    daysLeftGuarantee: function daysLeftGuarantee() {\n      var date1 = new Date();\n      var date2 = new Date(this.model.guarantee_end_date);\n      var oneDay = 1000 * 60 * 60 * 24;\n      var diffInTime = date2.getTime() - date1.getTime();\n      var diffInDays = Math.round(diffInTime / oneDay);\n      return diffInDays ? diffInDays : 0;\n    },\n    totalQty: function totalQty() {\n      var _this$expenses;\n      return this.model.total - ((_this$expenses = this.expenses) === null || _this$expenses === void 0 ? void 0 : _this$expenses.reduce(function (total, item) {\n        return total + Number(item.amount);\n      }, 0));\n    }\n  },\n  methods: {\n    findSpecialAtribute: function findSpecialAtribute(res) {\n      var _this = this;\n      if (res == \"new\") {\n        var action = document.querySelector(\"form#render\").getAttribute(\"action\");\n        var token = document.querySelector('meta[name=\"csrf-token\"').getAttribute(\"content\");\n        var item = {\n          amount: 0,\n          uuid: Util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].uuid(),\n          media: []\n        };\n        this.$http.post(\"/api/addClientExpense/\" + this.model.id, item, {\n          \"Content-Type\": \"multipart/form-data\",\n          \"X-CSRF-TOKEN\": token\n        }).then(/*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(response) {\n            return _regeneratorRuntime().wrap(function _callee$(_context) {\n              while (1) switch (_context.prev = _context.next) {\n                case 0:\n                  item.id = response.data.expense.id;\n                  _this.expenses.push(item);\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }, _callee);\n          }));\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }())[\"catch\"](function (e) {\n          _this.$toast.error(e.response.statusText, {\n            position: \"top-right\",\n            duration: 7000\n          });\n        });\n        return;\n      }\n    },\n    removeRequest: function removeRequest(model, setting, callback) {\n      var _this2 = this;\n      var isReserve = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n      var isNew = isReserve ? model.id : model.id;\n      if (!isNew) {\n        return callback();\n      }\n      var token = document.querySelector('meta[name=\"csrf-token\"').getAttribute(\"content\");\n      return this.$http[\"delete\"](\"/api/deleteClientExpense/\" + model.id, {\n        \"Content-Type\": \"application/json\",\n        \"X-CSRF-TOKEN\": token\n      }).then(/*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(response) {\n          return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n            while (1) switch (_context2.prev = _context2.next) {\n              case 0:\n                if (response.data.success == true) {\n                  callback();\n                } else {\n                  response.data.errs.map(function (item) {\n                    return _this2.$toast.error(item, {\n                      position: \"top-right\",\n                      duration: 7000\n                    });\n                  });\n                }\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }, _callee2);\n        }));\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }())[\"catch\"](function (e) {\n        if (e.response) _this2.$toast.error(e.response.statusText, {\n          position: \"top-right\",\n          duration: 7000\n        });\n      });\n    },\n    remove: function remove(e, model, isReserve) {\n      var _this3 = this;\n      e.preventDefault();\n      return Util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].useSwall2(model).then(function (result) {\n        if (result.isConfirmed) {\n          _this3.removeRequest(model || null, _this3.setting, function () {\n            if (!isReserve) {\n              var index = _this3.model.expenses.findIndex(function (i) {\n                return i.uuid == model.uuid;\n              });\n              _this3.model.expenses.splice(index, 1);\n            }\n            Swal.fire(\"წაშლა!\", \"წაშლა შესრრულდა წარმატებით.\", \"success\").then(function () {\n              if (isReserve) {\n                window.location.replace(_this3.setting.url.request.index.replace(\"api/\", \"\"));\n              }\n            });\n          }, isReserve);\n        }\n      });\n    },\n    try_exit: function try_exit(res, selector) {\n      this.showModal = false;\n    },\n    setter: function setter(name) {\n      this.selectBuilder = [{\n        selected: \"\",\n        res: this.additional[name]\n      }];\n      this.selector = name;\n      this.showModal = true;\n    },\n    inputFilter: function inputFilter(newFile, oldFile, prevent) {\n      if (newFile && !oldFile) {\n        if (/(\\/|^)(Thumbs\\.db|desktop\\.ini|\\..+)$/.test(newFile.name)) {\n          return prevent();\n        }\n        if (/\\.(php5?|html?|jsx?)$/i.test(newFile.name)) {\n          return prevent();\n        }\n      }\n    },\n    send: function send(e) {\n      var _this4 = this;\n      e.preventDefault();\n      var action = document.querySelector(\"form#render\").getAttribute(\"action\");\n      var token = document.querySelector('meta[name=\"csrf-token\"').getAttribute(\"content\");\n      this.$http.post(action, this.model, {\n        \"Content-Type\": \"multipart/form-data\",\n        \"X-CSRF-TOKEN\": token\n      }).then(/*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(response) {\n          return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n            while (1) switch (_context3.prev = _context3.next) {\n              case 0:\n                Util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].useSwall(response).then(function (result) {\n                  if (result.value) {\n                    window.location.replace(_this4.setting.url.request.index.replace(\"api/\", \"\"));\n                  } else if (_this4.model.id == null && response.data.success == true) {\n                    window.location.replace(window.location.href.replace(\"new\", response.data.result.id));\n                  }\n                  if (!response.data.success) {\n                    if (response.data.errs) response.data.errs.map(function (item) {\n                      return _this4.$toast.error(item, {\n                        position: \"top-right\",\n                        duration: 7000\n                      });\n                    });\n                  }\n                });\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }, _callee3);\n        }));\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }())[\"catch\"](function (e) {\n        _this4.$toast.error(e.response.statusText, {\n          position: \"top-right\",\n          duration: 7000\n        });\n      });\n      return false;\n    },\n    try_focus: function try_focus() {\n      this.step = true;\n    },\n    try_blur: function try_blur() {\n      this.step = false;\n    },\n    exit: function exit() {\n      return window.location.href = this.setting.url.request.index.replace(\"api/\", \"\");\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=template&id=6406f2a0":
/*!********************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=template&id=6406f2a0 ***!
  \********************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   render: () => (/* binding */ render)\n/* harmony export */ });\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm-bundler.js\");\n\nvar _hoisted_1 = {\n  \"class\": \"container-fluid\"\n};\nvar _hoisted_2 = {\n  \"class\": \"row\"\n};\nvar _hoisted_3 = {\n  \"class\": \"col-12\"\n};\nvar _hoisted_4 = {\n  \"class\": \"invoice p-3 mb-3\"\n};\nvar _hoisted_5 = {\n  style: {}\n};\nvar _hoisted_6 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_7 = {\n  \"class\": \"col-sm-3 col-form-label\"\n};\nvar _hoisted_8 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_9 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_10 = {\n  \"class\": \"col-sm-3 col-form-label\"\n};\nvar _hoisted_11 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_12 = {\n  \"class\": \"col-sm-3 col-form-label\"\n};\nvar _hoisted_13 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_14 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_15 = {\n  \"class\": \"col-sm-3 col-form-label\"\n};\nvar _hoisted_16 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_17 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_18 = {\n  \"class\": \"col-sm-3 col-form-label\"\n};\nvar _hoisted_19 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_20 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_21 = {\n  \"class\": \"col-sm-3 col-form-label\"\n};\nvar _hoisted_22 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_23 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_24 = {\n  \"class\": \"col-sm-3 col-form-label\"\n};\nvar _hoisted_25 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_26 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_27 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_28 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_29 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_30 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_31 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_32 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_33 = {\n  \"class\": \"col-sm-3 col-form-label\"\n};\nvar _hoisted_34 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_35 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_36 = {\n  \"class\": \"col-sm-3 col-form-label\"\n};\nvar _hoisted_37 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_38 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_39 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_40 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_41 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_42 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_43 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_44 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_45 = {\n  \"class\": \"col-sm-3 col-form-label\"\n};\nvar _hoisted_46 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_47 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_48 = {\n  \"class\": \"col-sm-3 col-form-label\"\n};\nvar _hoisted_49 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_50 = {\n  \"class\": \"col-sm-9\"\n};\nvar _hoisted_51 = {\n  \"class\": \"col-sm-3 col-form-label\"\n};\nvar _hoisted_52 = {\n  key: 0\n};\nvar _hoisted_53 = {\n  key: 0,\n  \"class\": \"step2\"\n};\nvar _hoisted_54 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_55 = {\n  \"class\": \"col-sm-3\"\n};\nvar _hoisted_56 = {\n  \"class\": \"col-sm-3 col-form-label\"\n};\nvar _hoisted_57 = {\n  key: 0,\n  \"class\": \"upload\"\n};\nvar _hoisted_58 = {\n  key: 1\n};\nvar _hoisted_59 = {\n  \"class\": \"row\"\n};\nvar _hoisted_60 = {\n  \"class\": \"col-12 table-responsive\"\n};\nvar _hoisted_61 = {\n  \"class\": \"table table-striped\",\n  style: {\n    \"background\": \"#edebe4\",\n    \"color\": \"#fff\"\n  }\n};\nvar _hoisted_62 = {\n  key: 0,\n  rowspan: \"2\"\n};\nvar _hoisted_63 = {\n  \"class\": \"form-group row\"\n};\nvar _hoisted_64 = {\n  id: \"result\"\n};\nvar _hoisted_65 = {\n  \"class\": \"text-dark col-form-label\"\n};\nvar _hoisted_66 = {\n  key: 2,\n  \"class\": \"upload\"\n};\nvar _hoisted_67 = {\n  key: 1,\n  \"class\": \"row no-print\"\n};\nvar _hoisted_68 = {\n  \"class\": \"col-12\"\n};\nvar _hoisted_69 = [\"disabled\"];\nfunction render(_ctx, _cache, $props, $setup, $data, $options) {\n  var _component_upload_component = (0,vue__WEBPACK_IMPORTED_MODULE_0__.resolveComponent)(\"upload-component\");\n  var _component_request_single_expense = (0,vue__WEBPACK_IMPORTED_MODULE_0__.resolveComponent)(\"request-single-expense\");\n  var _component_draggable = (0,vue__WEBPACK_IMPORTED_MODULE_0__.resolveComponent)(\"draggable\");\n  return (0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", _hoisted_1, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_2, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_3, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" Main content \"), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_4, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_5, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_6, [_cache[3] || (_cache[3] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"for\": \"staticEmail\",\n    \"class\": \"col-sm-3 col-form-label\"\n  }, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"b\", null, \"დასახელება :\")], -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_7, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.model.client_name), 1 /* TEXT */)]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_8, [_cache[4] || (_cache[4] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput2\"\n  }, \"საიდენტიფიკაციო კოდი :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_9, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_10, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.model.identification_code), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_11, [_cache[5] || (_cache[5] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"იურიდიული მისამართი :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_12, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.model.legal_address), 1 /* TEXT */)]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_13, [_cache[6] || (_cache[6] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"მომსახურების შიდა სახელი :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_14, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_15, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.model.service_name), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_16, [_cache[7] || (_cache[7] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"კონტრაქტის მომსახურების ტიპი :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_17, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_18, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.model.contract_service_type), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_19, [_cache[8] || (_cache[8] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"კონტრაქტის დაწყების თარიღი :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_20, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_21, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.model.contract_start_date), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_22, [_cache[9] || (_cache[9] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"კონტრაქტის დასრულების თარიღი :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_23, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_24, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.model.contract_end_date), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_25, [_cache[10] || (_cache[10] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"კონტრაქტის პერიოდი / დღე :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_26, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", null, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($options.contractPeriod), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_27, [_cache[11] || (_cache[11] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"კონტრაქტის ნარჩენი დღეები :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_28, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", null, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($options.daysLeft), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_29, [_cache[12] || (_cache[12] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"კონტრაქტის სტატუსი :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_30, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($options.contractStatus), 1 /* TEXT */)]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_31, [_cache[13] || (_cache[13] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"გარანტიის დაწყების თარიღი :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_32, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_33, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.model.guarantee_start_date), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_34, [_cache[14] || (_cache[14] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"გარანტიის დასრულების თარიღი :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_35, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_36, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.model.guarantee_end_date), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_37, [_cache[15] || (_cache[15] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"გარანტიის პერიოდი / დღე :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_38, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", null, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($options.guaranteePeriod), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_39, [_cache[16] || (_cache[16] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"გარანტიის ნარჩენი დღეები :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_40, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", null, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($options.daysLeftGuarantee), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_41, [_cache[17] || (_cache[17] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"გარანტიის სტატუსი :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_42, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($options.guaranteeStatus), 1 /* TEXT */)]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_43, [_cache[18] || (_cache[18] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"კლიენტის მაიდენთიფიცირებელი კოდი :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_44, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_45, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.model.client_identification_code), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_46, [_cache[19] || (_cache[19] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"საკონტაქტო პირი :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_47, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_48, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.model.contact_name), 1 /* TEXT */)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_49, [_cache[20] || (_cache[20] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-3 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"საკონტაქტო პირის ნომერი :\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_50, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_51, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.model.contact_number), 1 /* TEXT */)])]), _ctx.can('კლიენტის სრულად ნახვა') ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", _hoisted_52, [this.model.id ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", _hoisted_53, [_cache[26] || (_cache[26] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"hr\", null, null, -1 /* HOISTED */)), _cache[27] || (_cache[27] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", {\n    \"class\": \"row\"\n  }, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", {\n    \"class\": \"col-12\"\n  }, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"p\", {\n    \"class\": \"lead\"\n  }, \"ანგარიში\")])], -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_54, [_cache[21] || (_cache[21] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-4 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"კონტრაქტის ჯამური ღირებულება:\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_55, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_56, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($props.model.total), 1 /* TEXT */)])]), $props.model.id ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", _hoisted_57, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_upload_component, {\n    input_id: \"totalFiles\".concat(this.model.id),\n    upload_type: \"client_total_files\",\n    model: this.model,\n    viewonly: true,\n    files: this.model.total_files\n  }, null, 8 /* PROPS */, [\"input_id\", \"model\", \"files\"])])) : ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", _hoisted_58, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"input\", {\n    type: \"file\",\n    onChange: _cache[0] || (_cache[0] = function () {\n      return _ctx.onChange && _ctx.onChange.apply(_ctx, arguments);\n    }),\n    multiple: \"\"\n  }, null, 32 /* NEED_HYDRATION */)])), _cache[28] || (_cache[28] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"hr\", null, null, -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_59, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_60, [_cache[24] || (_cache[24] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"p\", {\n    \"class\": \"lead\"\n  }, \" შეთანხმებული დოკუმენტების თანხა \", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"table\", _hoisted_61, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"thead\", null, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"tr\", null, [_cache[22] || (_cache[22] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"th\", {\n    rowspan: \"2\"\n  }, \"თანხა\", -1 /* HOISTED */)), this.model.id ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"th\", _hoisted_62, \" ფაილები \")) : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true)])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"tbody\", null, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_draggable, {\n    modelValue: $data.expenses,\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = function ($event) {\n      return $data.expenses = $event;\n    }),\n    tag: \"tbody\",\n    \"item-key\": \"id\",\n    disabled: $data.step\n  }, {\n    item: (0,vue__WEBPACK_IMPORTED_MODULE_0__.withCtx)(function (_ref) {\n      var element = _ref.element;\n      return [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_request_single_expense, {\n        onAction_focus: $options.try_focus,\n        onAction_blur: $options.try_blur,\n        onAction_remove: $options.remove,\n        keys: $data.keys,\n        viewonly: true,\n        item: element\n      }, null, 8 /* PROPS */, [\"onAction_focus\", \"onAction_blur\", \"onAction_remove\", \"keys\", \"item\"])];\n    }),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"modelValue\", \"disabled\"]), _cache[23] || (_cache[23] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"tr\", {\n    \"class\": \"calculator\"\n  }, null, -1 /* HOISTED */))])])]), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\" /.col \")]), _cache[29] || (_cache[29] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"hr\", null, null, -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_63, [_cache[25] || (_cache[25] = (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", {\n    \"class\": \"col-sm-4 col-form-label\",\n    \"for\": \"formGroupExampleInput\"\n  }, \"ნარჩენი ასათვისებელი თანხა:\", -1 /* HOISTED */)), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"span\", _hoisted_64, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"label\", _hoisted_65, (0,vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString)($options.totalQty), 1 /* TEXT */)])]), $props.model.id ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", _hoisted_66, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createVNode)(_component_upload_component, {\n    input_id: \"additionalFiles\".concat(this.model.id),\n    upload_type: \"client_additional_files\",\n    model: this.model,\n    viewonly: true,\n    files: this.model.additional_files\n  }, null, 8 /* PROPS */, [\"input_id\", \"model\", \"files\"])])) : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true)])) : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true)])) : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true), _ctx.can('კლიენტის რედაქტირება') ? ((0,vue__WEBPACK_IMPORTED_MODULE_0__.openBlock)(), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock)(\"div\", _hoisted_67, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"div\", _hoisted_68, [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"button\", {\n    disabled: $setup.v$.model.$invalid,\n    onClick: _cache[2] || (_cache[2] = function () {\n      return $options.send && $options.send.apply($options, arguments);\n    }),\n    type: \"button\",\n    \"class\": \"btn btn-success float-right\"\n  }, _cache[30] || (_cache[30] = [(0,vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode)(\"i\", {\n    \"class\": \"far fa-credit-card\"\n  }, null, -1 /* HOISTED */), (0,vue__WEBPACK_IMPORTED_MODULE_0__.createTextVNode)(\" შენახვა \")]), 8 /* PROPS */, _hoisted_69)])])) : (0,vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode)(\"v-if\", true)])])])])]);\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/Y2xvbmVkUnVsZVNldC01LnVzZVswXSEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvdGVtcGxhdGVMb2FkZXIuanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L2luZGV4LmpzPz9ydWxlU2V0WzBdLnVzZVswXSEuL3Jlc291cmNlcy9qcy9hcHAvcGFnZXMvQ2xpZW50LVZpZXcudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTY0MDZmMmEwIiwibWFwcGluZ3MiOiI7Ozs7Ozs7RUFDUyxTQUFNO0FBQWlCOztFQUNuQixTQUFNO0FBQUs7O0VBQ1AsU0FBTTtBQUFROztFQUdWLFNBQU07QUFBa0I7O0VBQ3BCQSxLQUFRLEVBQVI7QUFBUTs7RUFDSixTQUFNO0FBQWdCOztFQU1oQixTQUFNO0FBQXlCOztFQUtyQyxTQUFNO0FBQWdCOztFQU1sQixTQUFNO0FBQVU7O0VBQ1YsU0FBTTtBQUF5Qjs7RUFNekMsU0FBTTtBQUFnQjs7RUFNaEIsU0FBTTtBQUF5Qjs7RUFJckMsU0FBTTtBQUFnQjs7RUFPbEIsU0FBTTtBQUFVOztFQUNWLFNBQU07QUFBeUI7O0VBTXpDLFNBQU07QUFBZ0I7O0VBT2xCLFNBQU07QUFBVTs7RUFDVixTQUFNO0FBQXlCOztFQU16QyxTQUFNO0FBQWdCOztFQU9sQixTQUFNO0FBQVU7O0VBQ1YsU0FBTTtBQUF5Qjs7RUFNekMsU0FBTTtBQUFnQjs7RUFNbEIsU0FBTTtBQUFVOztFQUNWLFNBQU07QUFBeUI7O0VBTXpDLFNBQU07QUFBZ0I7O0VBT2xCLFNBQU07QUFBVTs7RUFLcEIsU0FBTTtBQUFnQjs7RUFPbEIsU0FBTTtBQUFVOztFQUtwQixTQUFNO0FBQWdCOztFQU9sQixTQUFNO0FBQVU7O0VBS3BCLFNBQU07QUFBZ0I7O0VBTWxCLFNBQU07QUFBVTs7RUFDVixTQUFNO0FBQXlCOztFQU16QyxTQUFNO0FBQWdCOztFQU9sQixTQUFNO0FBQVU7O0VBQ1YsU0FBTTtBQUF5Qjs7RUFNekMsU0FBTTtBQUFnQjs7RUFPbEIsU0FBTTtBQUFVOztFQUtwQixTQUFNO0FBQWdCOztFQU9sQixTQUFNO0FBQVU7O0VBS3BCLFNBQU07QUFBZ0I7O0VBT2xCLFNBQU07QUFBVTs7RUFLcEIsU0FBTTtBQUFnQjs7RUFPbEIsU0FBTTtBQUFVOztFQUNWLFNBQU07QUFBeUI7O0VBTXpDLFNBQU07QUFBZ0I7O0VBTWxCLFNBQU07QUFBVTs7RUFDVixTQUFNO0FBQXlCOztFQU16QyxTQUFNO0FBQWdCOztFQU9sQixTQUFNO0FBQVU7O0VBQ1YsU0FBTTtBQUF5Qjs7RUF2T3RFQyxHQUFBO0FBQUE7O0VBQUFBLEdBQUE7RUE4T3NELFNBQU07OztFQVF2QixTQUFNO0FBQWdCOztFQU9sQixTQUFNO0FBQVU7O0VBRWIsU0FBTTtBQUF5Qjs7RUEvUDNFQSxHQUFBO0VBcVFxRCxTQUFNOzs7RUFyUTNEQSxHQUFBO0FBQUE7O0VBc1JxQyxTQUFNO0FBQUs7O0VBQ1AsU0FBTTtBQUF5Qjs7RUFNNUIsU0FBTSxxQkFBcUI7RUFDM0JELEtBR0MsRUFIRDtJQUFBO0lBQUE7RUFBQTs7O0VBOVI1Q0MsR0FBQTtFQXdTd0RDLE9BQU8sRUFBQzs7O0VBb0MzQixTQUFNO0FBQWdCOztFQU9qQkMsRUFBRSxFQUFDO0FBQVE7O0VBRVQsU0FBTTtBQUEwQjs7RUFyVjVFRixHQUFBO0VBMlZxRCxTQUFNOzs7RUEzVjNEQSxHQUFBO0VBeVc0QixTQUFNOzs7RUFFRCxTQUFNO0FBQVE7a0JBM1cvQzs7Ozs7MkRBQ0lHLHVEQUFBLENBeVhNLE9BelhOQyxVQXlYTSxHQXhYRkMsdURBQUEsQ0F1WE0sT0F2WE5DLFVBdVhNLEdBdFhGRCx1REFBQSxDQXFYTSxPQXJYTkUsVUFxWE0sR0FwWEZDLHVEQUFBLGtCQUFxQixFQUVyQkgsdURBQUEsQ0FpWE0sT0FqWE5JLFVBaVhNLEdBaFhGSix1REFBQSxDQStXTSxPQS9XTkssVUErV00sR0E5V0ZMLHVEQUFBLENBU00sT0FUTk0sVUFTTSw2QkFSRk4sdURBQUEsQ0FJQztJQUhHLE9BQUksYUFBYTtJQUNqQixTQUFNO01BQ0xBLHVEQUFBLENBQW1CLFdBQWhCLGNBQVksd0JBRXBCQSx1REFBQSxDQUVVLFNBRlZPLFVBRVUsRUFBQUMsb0RBQUEsQ0FETkMsTUFBQSxDQUFBQyxLQUFLLENBQUNDLFdBQVcsb0JBSXpCWCx1REFBQSxDQVdNLE9BWE5ZLFVBV00sNkJBVkZaLHVEQUFBLENBSUM7SUFIRyxTQUFNLHlCQUF5QjtJQUMvQixPQUFJO0tBQ0gsd0JBQXNCLHNCQUUzQkEsdURBQUEsQ0FJTSxPQUpOYSxVQUlNLEdBSEZiLHVEQUFBLENBRVUsU0FGVmMsV0FFVSxFQUFBTixvREFBQSxDQUROQyxNQUFBLENBQUFDLEtBQUssQ0FBQ0ssbUJBQW1CLHNCQUtyQ2YsdURBQUEsQ0FTTSxPQVROZ0IsV0FTTSw2QkFSRmhCLHVEQUFBLENBSUM7SUFIRyxTQUFNLHlCQUF5QjtJQUMvQixPQUFJO0tBQ0gsdUJBQXFCLHNCQUUxQkEsdURBQUEsQ0FFVSxTQUZWaUIsV0FFVSxFQUFBVCxvREFBQSxDQUROQyxNQUFBLENBQUFDLEtBQUssQ0FBQ1EsYUFBYSxvQkFHM0JsQix1REFBQSxDQVlNLE9BWk5tQixXQVlNLDZCQVhGbkIsdURBQUEsQ0FJQztJQUhHLFNBQU0seUJBQXlCO0lBQy9CLE9BQUk7S0FDSCw0QkFBMEIsc0JBRy9CQSx1REFBQSxDQUlNLE9BSk5vQixXQUlNLEdBSEZwQix1REFBQSxDQUVVLFNBRlZxQixXQUVVLEVBQUFiLG9EQUFBLENBRE5DLE1BQUEsQ0FBQUMsS0FBSyxDQUFDWSxZQUFZLHNCQUs5QnRCLHVEQUFBLENBWU0sT0FaTnVCLFdBWU0sNkJBWEZ2Qix1REFBQSxDQUlDO0lBSEcsU0FBTSx5QkFBeUI7SUFDL0IsT0FBSTtLQUNILGdDQUE4QixzQkFHbkNBLHVEQUFBLENBSU0sT0FKTndCLFdBSU0sR0FIRnhCLHVEQUFBLENBRVUsU0FGVnlCLFdBRVUsRUFBQWpCLG9EQUFBLENBRE5DLE1BQUEsQ0FBQUMsS0FBSyxDQUFDZ0IscUJBQXFCLHNCQUt2QzFCLHVEQUFBLENBWU0sT0FaTjJCLFdBWU0sNkJBWEYzQix1REFBQSxDQUlDO0lBSEcsU0FBTSx5QkFBeUI7SUFDL0IsT0FBSTtLQUNILDhCQUE0QixzQkFHakNBLHVEQUFBLENBSU0sT0FKTjRCLFdBSU0sR0FIRjVCLHVEQUFBLENBRVUsU0FGVjZCLFdBRVUsRUFBQXJCLG9EQUFBLENBRE5DLE1BQUEsQ0FBQUMsS0FBSyxDQUFDb0IsbUJBQW1CLHNCQUtyQzlCLHVEQUFBLENBV00sT0FYTitCLFdBV00sNkJBVkYvQix1REFBQSxDQUlDO0lBSEcsU0FBTSx5QkFBeUI7SUFDL0IsT0FBSTtLQUNILGdDQUE4QixzQkFFbkNBLHVEQUFBLENBSU0sT0FKTmdDLFdBSU0sR0FIRmhDLHVEQUFBLENBRVUsU0FGVmlDLFdBRVUsRUFBQXpCLG9EQUFBLENBRE5DLE1BQUEsQ0FBQUMsS0FBSyxDQUFDd0IsaUJBQWlCLHNCQUtuQ2xDLHVEQUFBLENBVU0sT0FWTm1DLFdBVU0sK0JBVEZuQyx1REFBQSxDQUlDO0lBSEcsU0FBTSx5QkFBeUI7SUFDL0IsT0FBSTtLQUNILDRCQUEwQixzQkFHL0JBLHVEQUFBLENBRU0sT0FGTm9DLFdBRU0sR0FERnBDLHVEQUFBLENBQWlDLGNBQUFRLG9EQUFBLENBQXhCNkIsUUFBQSxDQUFBQyxjQUFjLHNCQUkvQnRDLHVEQUFBLENBVU0sT0FWTnVDLFdBVU0sK0JBVEZ2Qyx1REFBQSxDQUlDO0lBSEcsU0FBTSx5QkFBeUI7SUFDL0IsT0FBSTtLQUNILDZCQUEyQixzQkFHaENBLHVEQUFBLENBRU0sT0FGTndDLFdBRU0sR0FERnhDLHVEQUFBLENBQTJCLGNBQUFRLG9EQUFBLENBQWxCNkIsUUFBQSxDQUFBSSxRQUFRLHNCQUl6QnpDLHVEQUFBLENBVU0sT0FWTjBDLFdBVU0sK0JBVEYxQyx1REFBQSxDQUlDO0lBSEcsU0FBTSx5QkFBeUI7SUFDL0IsT0FBSTtLQUNILHNCQUFvQixzQkFHekJBLHVEQUFBLENBRU0sT0FGTjJDLFdBRU0sRUFBQW5DLG9EQUFBLENBREM2QixRQUFBLENBQUFPLGNBQWMsb0JBSXpCNUMsdURBQUEsQ0FXTSxPQVhONkMsV0FXTSwrQkFWRjdDLHVEQUFBLENBSUM7SUFIRyxTQUFNLHlCQUF5QjtJQUMvQixPQUFJO0tBQ0gsNkJBQTJCLHNCQUVoQ0EsdURBQUEsQ0FJTSxPQUpOOEMsV0FJTSxHQUhGOUMsdURBQUEsQ0FFVSxTQUZWK0MsV0FFVSxFQUFBdkMsb0RBQUEsQ0FETkMsTUFBQSxDQUFBQyxLQUFLLENBQUNzQyxvQkFBb0Isc0JBS3RDaEQsdURBQUEsQ0FZTSxPQVpOaUQsV0FZTSwrQkFYRmpELHVEQUFBLENBSUM7SUFIRyxTQUFNLHlCQUF5QjtJQUMvQixPQUFJO0tBQ0gsK0JBQTZCLHNCQUdsQ0EsdURBQUEsQ0FJTSxPQUpOa0QsV0FJTSxHQUhGbEQsdURBQUEsQ0FFVSxTQUZWbUQsV0FFVSxFQUFBM0Msb0RBQUEsQ0FETkMsTUFBQSxDQUFBQyxLQUFLLENBQUMwQyxrQkFBa0Isc0JBS3BDcEQsdURBQUEsQ0FVTSxPQVZOcUQsV0FVTSwrQkFURnJELHVEQUFBLENBSUM7SUFIRyxTQUFNLHlCQUF5QjtJQUMvQixPQUFJO0tBQ0gsMkJBQXlCLHNCQUc5QkEsdURBQUEsQ0FFTSxPQUZOc0QsV0FFTSxHQURGdEQsdURBQUEsQ0FBa0MsY0FBQVEsb0RBQUEsQ0FBekI2QixRQUFBLENBQUFrQixlQUFlLHNCQUloQ3ZELHVEQUFBLENBVU0sT0FWTndELFdBVU0sK0JBVEZ4RCx1REFBQSxDQUlDO0lBSEcsU0FBTSx5QkFBeUI7SUFDL0IsT0FBSTtLQUNILDRCQUEwQixzQkFHL0JBLHVEQUFBLENBRU0sT0FGTnlELFdBRU0sR0FERnpELHVEQUFBLENBQW9DLGNBQUFRLG9EQUFBLENBQTNCNkIsUUFBQSxDQUFBcUIsaUJBQWlCLHNCQUlsQzFELHVEQUFBLENBVU0sT0FWTjJELFdBVU0sK0JBVEYzRCx1REFBQSxDQUlDO0lBSEcsU0FBTSx5QkFBeUI7SUFDL0IsT0FBSTtLQUNILHFCQUFtQixzQkFHeEJBLHVEQUFBLENBRU0sT0FGTjRELFdBRU0sRUFBQXBELG9EQUFBLENBREM2QixRQUFBLENBQUF3QixlQUFlLG9CQUkxQjdELHVEQUFBLENBWU0sT0FaTjhELFdBWU0sK0JBWEY5RCx1REFBQSxDQUlDO0lBSEcsU0FBTSx5QkFBeUI7SUFDL0IsT0FBSTtLQUNILG9DQUFrQyxzQkFHdkNBLHVEQUFBLENBSU0sT0FKTitELFdBSU0sR0FIRi9ELHVEQUFBLENBRVUsU0FGVmdFLFdBRVUsRUFBQXhELG9EQUFBLENBRE5DLE1BQUEsQ0FBQUMsS0FBSyxDQUFDdUQsMEJBQTBCLHNCQUs1Q2pFLHVEQUFBLENBV00sT0FYTmtFLFdBV00sK0JBVkZsRSx1REFBQSxDQUlDO0lBSEcsU0FBTSx5QkFBeUI7SUFDL0IsT0FBSTtLQUNILG1CQUFpQixzQkFFdEJBLHVEQUFBLENBSU0sT0FKTm1FLFdBSU0sR0FIRm5FLHVEQUFBLENBRVUsU0FGVm9FLFdBRVUsRUFBQTVELG9EQUFBLENBRE5DLE1BQUEsQ0FBQUMsS0FBSyxDQUFDMkQsWUFBWSxzQkFLOUJyRSx1REFBQSxDQVlNLE9BWk5zRSxXQVlNLCtCQVhGdEUsdURBQUEsQ0FJQztJQUhHLFNBQU0seUJBQXlCO0lBQy9CLE9BQUk7S0FDSCwyQkFBeUIsc0JBRzlCQSx1REFBQSxDQUlNLE9BSk51RSxXQUlNLEdBSEZ2RSx1REFBQSxDQUVVLFNBRlZ3RSxXQUVVLEVBQUFoRSxvREFBQSxDQUROQyxNQUFBLENBQUFDLEtBQUssQ0FBQytELGNBQWMsc0JBS3JCQyxJQUFBLENBQUFDLEdBQUcsK0VBQWQ3RSx1REFBQSxDQXdITSxPQXJXOUI4RSxXQUFBLFFBOE80Q2xFLEtBQUssQ0FBQ2IsRUFBRSxzREFBeEJDLHVEQUFBLENBc0hNLE9BdEhOK0UsV0FzSE0sK0JBckhGN0UsdURBQUEsQ0FBTSxrRUFDTkEsdURBQUEsQ0FJTTtJQUpELFNBQU07RUFBSyxJQUNaQSx1REFBQSxDQUVNO0lBRkQsU0FBTTtFQUFRLElBQ2ZBLHVEQUFBLENBQTRCO0lBQXpCLFNBQU07RUFBTSxHQUFDLFVBQVEsMEJBSWhDQSx1REFBQSxDQWFNLE9BYk44RSxXQWFNLCtCQVpGOUUsdURBQUEsQ0FJQztJQUhHLFNBQU0seUJBQXlCO0lBQy9CLE9BQUk7S0FDSCwrQkFBNkIsc0JBR2xDQSx1REFBQSxDQUtNLE9BTE4rRSxXQUtNLEdBSkYvRSx1REFBQSxDQUdDLFNBSERnRixXQUdDLEVBQUF4RSxvREFBQSxDQURPQyxNQUFBLENBQUFDLEtBQUssQ0FBQ3VFLEtBQUssc0JBS2hCeEUsTUFBQSxDQUFBQyxLQUFLLENBQUNiLEVBQUUsc0RBQW5CQyx1REFBQSxDQVFNLE9BUk5vRixXQVFNLEdBUEZDLGdEQUFBLENBTW9CQywyQkFBQTtJQUxmQyxRQUFRLGVBQUFDLE1BQUEsTUFBb0I1RSxLQUFLLENBQUNiLEVBQUU7SUFDckMwRixXQUFXLEVBQUMsb0JBQW9CO0lBQy9CN0UsS0FBSyxPQUFPQSxLQUFLO0lBQ2pCOEUsUUFBUSxFQUFFLElBQUk7SUFDZEMsS0FBSyxPQUFPL0UsS0FBSyxDQUFDZ0Y7a0hBRzNCNUYsdURBQUEsQ0FNTSxPQXBSdEM2RixXQUFBLEdBK1FvQzNGLHVEQUFBLENBSUU7SUFIRTRGLElBQUksRUFBQyxNQUFNO0lBQ1ZDLFFBQU0sRUFBQUMsTUFBQSxRQUFBQSxNQUFBO01BQUEsT0FBRXBCLElBQUEsQ0FBQW1CLFFBQUEsSUFBQW5CLElBQUEsQ0FBQW1CLFFBQUEsQ0FBQUUsS0FBQSxDQUFBckIsSUFBQSxFQUFBc0IsU0FBQSxDQUFRO0lBQUE7SUFDakJDLFFBQVEsRUFBUjtvRUFHUmpHLHVEQUFBLENBQU0sc0NBQ05BLHVEQUFBLENBa0RNLE9BbEROa0csV0FrRE0sR0FqREZsRyx1REFBQSxDQStDTSxPQS9DTm1HLFdBK0NNLCtCQTlDRm5HLHVEQUFBLENBRUk7SUFGRCxTQUFNO0VBQU0sR0FBQyxtQ0FFaEIsc0JBRUFBLHVEQUFBLENBeUNRLFNBekNSb0csV0F5Q1EsR0FsQ0pwRyx1REFBQSxDQVVRLGdCQVRKQSx1REFBQSxDQVFLLHlDQVBEQSx1REFBQSxDQUEwQjtJQUF0QkosT0FBTyxFQUFDO0VBQUcsR0FBQyxPQUFLLDJCQUVOYyxLQUFLLENBQUNiLEVBQUUsc0RBRHZCQyx1REFBQSxDQUtLLE1BTEx1RyxXQUtLLEVBRkosV0FFRCxLQTNTcERsRyx1REFBQSxvQkErUzRDSCx1REFBQSxDQXFCSSxnQkFwQkptRixnREFBQSxDQWtCWW1CLG9CQUFBO0lBbFV4REMsVUFBQSxFQWlUeURDLEtBQUEsQ0FBQUMsUUFBUTtJQWpUakUsdUJBQUFYLE1BQUEsUUFBQUEsTUFBQSxnQkFBQVksTUFBQTtNQUFBLE9BaVR5REYsS0FBQSxDQUFBQyxRQUFRLEdBQUFDLE1BQUE7SUFBQTtJQUNqQkMsR0FBRyxFQUFDLE9BQU87SUFDWCxVQUFRLEVBQUMsSUFBSTtJQUNaQyxRQUFRLEVBQUVKLEtBQUEsQ0FBQUs7O0lBRUFDLElBQUksRUFBQUMsNENBQUEsQ0FDWCxVQUFBQyxJQUFBO01BQUEsSUFEZUMsT0FBTyxHQUFBRCxJQUFBLENBQVBDLE9BQU87TUFBQSxRQUN0QjlCLGdEQUFBLENBU0UrQixpQ0FBQTtRQVJHQyxjQUFZLEVBQStEOUUsUUFBQSxDQUFBK0UsU0FBUztRQUdwRkMsYUFBVyxFQUFFaEYsUUFBQSxDQUFBaUYsUUFBUTtRQUNyQkMsZUFBYSxFQUFFbEYsUUFBQSxDQUFBbUYsTUFBTTtRQUNyQkMsSUFBSSxFQUFFakIsS0FBQSxDQUFBaUIsSUFBSTtRQUNWakMsUUFBUSxFQUFFLElBQUk7UUFDZHNCLElBQUksRUFBRUc7OztJQS9UL0RTLENBQUE7NkVBbVU0QzFILHVEQUFBLENBQTRCO0lBQXhCLFNBQU07RUFBWSxtQ0FJOUJHLHVEQUFBLFdBQWMsZ0NBR2xCSCx1REFBQSxDQUFNLHNDQUVOQSx1REFBQSxDQWFNLE9BYk4ySCxXQWFNLCtCQVpGM0gsdURBQUEsQ0FJQztJQUhHLFNBQU0seUJBQXlCO0lBQy9CLE9BQUk7S0FDSCw2QkFBMkIsc0JBR2hDQSx1REFBQSxDQUtPLFFBTFA0SCxXQUtPLEdBSkg1SCx1REFBQSxDQUdDLFNBSEQ2SCxXQUdDLEVBQUFySCxvREFBQSxDQURPNkIsUUFBQSxDQUFBeUYsUUFBUSxzQkFLYnJILE1BQUEsQ0FBQUMsS0FBSyxDQUFDYixFQUFFLHNEQUFuQkMsdURBQUEsQ0FRTSxPQVJOaUksV0FRTSxHQVBGNUMsZ0RBQUEsQ0FNb0JDLDJCQUFBO0lBTGZDLFFBQVEsb0JBQUFDLE1BQUEsTUFBeUI1RSxLQUFLLENBQUNiLEVBQUU7SUFDMUMwRixXQUFXLEVBQUMseUJBQXlCO0lBQ3BDN0UsS0FBSyxPQUFPQSxLQUFLO0lBQ2pCOEUsUUFBUSxFQUFFLElBQUk7SUFDZEMsS0FBSyxPQUFPL0UsS0FBSyxDQUFDc0g7K0RBalczRDdILHVEQUFBLG9CQUFBQSx1REFBQSxvQkFBQUEsdURBQUEsZ0JBd1drQ3VFLElBQUEsQ0FBQUMsR0FBRyw4RUFEYjdFLHVEQUFBLENBY00sT0FkTm1JLFdBY00sR0FWRmpJLHVEQUFBLENBU00sT0FUTmtJLFdBU00sR0FSRmxJLHVEQUFBLENBT1M7SUFOSjRHLFFBQVEsRUFBRXVCLE1BQUEsQ0FBQUMsRUFBRSxDQUFDMUgsS0FBSyxDQUFDMkgsUUFBUTtJQUMzQkMsT0FBSyxFQUFBeEMsTUFBQSxRQUFBQSxNQUFBO01BQUEsT0FBRXpELFFBQUEsQ0FBQWtHLElBQUEsSUFBQWxHLFFBQUEsQ0FBQWtHLElBQUEsQ0FBQXhDLEtBQUEsQ0FBQTFELFFBQUEsRUFBQTJELFNBQUEsQ0FBSTtJQUFBO0lBQ1pKLElBQUksRUFBQyxRQUFRO0lBQ2IsU0FBTTtrQ0FFTjVGLHVEQUFBLENBQWtDO0lBQS9CLFNBQU07RUFBb0IsNEJBbFhqRXdJLG9EQUFBLENBa1hzRSxXQUN0QyxvQkFuWGhDQyxXQUFBLFNBQUF0SSx1REFBQSIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9hcHAvcGFnZXMvQ2xpZW50LVZpZXcudnVlPzc1N2MiXSwic291cmNlc0NvbnRlbnQiOlsiPHRlbXBsYXRlPlxuICAgIDxkaXYgY2xhc3M9XCJjb250YWluZXItZmx1aWRcIj5cbiAgICAgICAgPGRpdiBjbGFzcz1cInJvd1wiPlxuICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC0xMlwiPlxuICAgICAgICAgICAgICAgIDwhLS0gTWFpbiBjb250ZW50IC0tPlxuXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImludm9pY2UgcC0zIG1iLTNcIj5cbiAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT1cIlwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgcm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcj1cInN0YXRpY0VtYWlsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjb2wtc20tMyBjb2wtZm9ybS1sYWJlbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48Yj7hg5Phg5Dhg6Hhg5Dhg67hg5Thg5rhg5Thg5Hhg5AgOjwvYj48L2xhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsXCI+e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwuY2xpZW50X25hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgcm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiY29sLXNtLTMgY29sLWZvcm0tbGFiZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3I9XCJmb3JtR3JvdXBFeGFtcGxlSW5wdXQyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPuGDoeGDkOGDmOGDk+GDlOGDnOGDouGDmOGDpOGDmOGDmeGDkOGDquGDmOGDnSDhg5nhg53hg5Phg5ggOjwvbGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1zbS05XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsXCI+e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsLmlkZW50aWZpY2F0aW9uX2NvZGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX08L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwIHJvd1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yPVwiZm9ybUdyb3VwRXhhbXBsZUlucHV0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPuGDmOGDo+GDoOGDmOGDk+GDmOGDo+GDmuGDmCDhg5vhg5jhg6Hhg5Dhg5vhg5Dhg6Dhg5fhg5ggOjwvbGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiY29sLXNtLTMgY29sLWZvcm0tbGFiZWxcIj57e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbC5sZWdhbF9hZGRyZXNzXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfX08L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cCByb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjb2wtc20tMyBjb2wtZm9ybS1sYWJlbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcj1cImZvcm1Hcm91cEV4YW1wbGVJbnB1dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID7hg5vhg53hg5vhg6Hhg5Dhg67hg6Phg6Dhg5Thg5Hhg5jhg6Eg4YOo4YOY4YOT4YOQIOGDoeGDkOGDruGDlOGDmuGDmCA6PC9sYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tOVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJjb2wtc20tMyBjb2wtZm9ybS1sYWJlbFwiPnt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbC5zZXJ2aWNlX25hbWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX08L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwIHJvd1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yPVwiZm9ybUdyb3VwRXhhbXBsZUlucHV0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPuGDmeGDneGDnOGDouGDoOGDkOGDpeGDouGDmOGDoSDhg5vhg53hg5vhg6Hhg5Dhg67hg6Phg6Dhg5Thg5Hhg5jhg6Eg4YOi4YOY4YOe4YOYIDo8L2xhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1zbS05XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsXCI+e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsLmNvbnRyYWN0X3NlcnZpY2VfdHlwZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgcm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiY29sLXNtLTMgY29sLWZvcm0tbGFiZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3I9XCJmb3JtR3JvdXBFeGFtcGxlSW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+4YOZ4YOd4YOc4YOi4YOg4YOQ4YOl4YOi4YOY4YOhIOGDk+GDkOGDrOGDp+GDlOGDkeGDmOGDoSDhg5fhg5Dhg6Dhg5jhg6bhg5ggOjwvbGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiY29sLXNtLTMgY29sLWZvcm0tbGFiZWxcIj57e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwuY29udHJhY3Rfc3RhcnRfZGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgcm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiY29sLXNtLTMgY29sLWZvcm0tbGFiZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3I9XCJmb3JtR3JvdXBFeGFtcGxlSW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+4YOZ4YOd4YOc4YOi4YOg4YOQ4YOl4YOi4YOY4YOhIOGDk+GDkOGDoeGDoOGDo+GDmuGDlOGDkeGDmOGDoSDhg5fhg5Dhg6Dhg5jhg6bhg5ggOjwvbGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1zbS05XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsXCI+e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsLmNvbnRyYWN0X2VuZF9kYXRlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cCByb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjb2wtc20tMyBjb2wtZm9ybS1sYWJlbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcj1cImZvcm1Hcm91cEV4YW1wbGVJbnB1dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID7hg5nhg53hg5zhg6Lhg6Dhg5Dhg6Xhg6Lhg5jhg6Eg4YOe4YOU4YOg4YOY4YOd4YOT4YOYIC8g4YOT4YOm4YOUIDo8L2xhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1zbS05XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnt7IGNvbnRyYWN0UGVyaW9kIH19PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwIHJvd1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yPVwiZm9ybUdyb3VwRXhhbXBsZUlucHV0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPuGDmeGDneGDnOGDouGDoOGDkOGDpeGDouGDmOGDoSDhg5zhg5Dhg6Dhg6nhg5Thg5zhg5gg4YOT4YOm4YOU4YOU4YOR4YOYIDo8L2xhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1zbS05XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPnt7IGRheXNMZWZ0IH19PC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwIHJvd1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yPVwiZm9ybUdyb3VwRXhhbXBsZUlucHV0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPuGDmeGDneGDnOGDouGDoOGDkOGDpeGDouGDmOGDoSDhg6Hhg6Lhg5Dhg6Lhg6Phg6Hhg5ggOjwvbGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgY29udHJhY3RTdGF0dXMgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cCByb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjb2wtc20tMyBjb2wtZm9ybS1sYWJlbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcj1cImZvcm1Hcm91cEV4YW1wbGVJbnB1dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID7hg5Lhg5Dhg6Dhg5Dhg5zhg6Lhg5jhg5jhg6Eg4YOT4YOQ4YOs4YOn4YOU4YOR4YOY4YOhIOGDl+GDkOGDoOGDmOGDpuGDmCA6PC9sYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiY29sLXNtLTMgY29sLWZvcm0tbGFiZWxcIj57e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwuZ3VhcmFudGVlX3N0YXJ0X2RhdGVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfX08L2xhYmVsPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwIHJvd1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yPVwiZm9ybUdyb3VwRXhhbXBsZUlucHV0XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPuGDkuGDkOGDoOGDkOGDnOGDouGDmOGDmOGDoSDhg5Phg5Dhg6Hhg6Dhg6Phg5rhg5Thg5Hhg5jhg6Eg4YOX4YOQ4YOg4YOY4YOm4YOYIDo8L2xhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImNvbC1zbS05XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz1cImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsXCI+e3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsLmd1YXJhbnRlZV9lbmRfZGF0ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgcm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiY29sLXNtLTMgY29sLWZvcm0tbGFiZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3I9XCJmb3JtR3JvdXBFeGFtcGxlSW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+4YOS4YOQ4YOg4YOQ4YOc4YOi4YOY4YOY4YOhIOGDnuGDlOGDoOGDmOGDneGDk+GDmCAvIOGDk+GDpuGDlCA6PC9sYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tOVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj57eyBndWFyYW50ZWVQZXJpb2QgfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgcm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiY29sLXNtLTMgY29sLWZvcm0tbGFiZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3I9XCJmb3JtR3JvdXBFeGFtcGxlSW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+4YOS4YOQ4YOg4YOQ4YOc4YOi4YOY4YOY4YOhIOGDnOGDkOGDoOGDqeGDlOGDnOGDmCDhg5Phg6bhg5Thg5Thg5Hhg5ggOjwvbGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+e3sgZGF5c0xlZnRHdWFyYW50ZWUgfX08L3NwYW4+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgcm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiY29sLXNtLTMgY29sLWZvcm0tbGFiZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3I9XCJmb3JtR3JvdXBFeGFtcGxlSW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+4YOS4YOQ4YOg4YOQ4YOc4YOi4YOY4YOY4YOhIOGDoeGDouGDkOGDouGDo+GDoeGDmCA6PC9sYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tOVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBndWFyYW50ZWVTdGF0dXMgfX1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cCByb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjb2wtc20tMyBjb2wtZm9ybS1sYWJlbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcj1cImZvcm1Hcm91cEV4YW1wbGVJbnB1dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID7hg5nhg5rhg5jhg5Thg5zhg6Lhg5jhg6Eg4YOb4YOQ4YOY4YOT4YOU4YOc4YOX4YOY4YOk4YOY4YOq4YOY4YOg4YOU4YOR4YOU4YOa4YOYIOGDmeGDneGDk+GDmCA6PC9sYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tOVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJjb2wtc20tMyBjb2wtZm9ybS1sYWJlbFwiPnt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbC5jbGllbnRfaWRlbnRpZmljYXRpb25fY29kZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgcm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiY29sLXNtLTMgY29sLWZvcm0tbGFiZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3I9XCJmb3JtR3JvdXBFeGFtcGxlSW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+4YOh4YOQ4YOZ4YOd4YOc4YOi4YOQ4YOl4YOi4YOdIOGDnuGDmOGDoOGDmCA6PC9sYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLXNtLTlcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPVwiY29sLXNtLTMgY29sLWZvcm0tbGFiZWxcIj57e1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWwuY29udGFjdF9uYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PC9sYWJlbD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cCByb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJjb2wtc20tMyBjb2wtZm9ybS1sYWJlbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcj1cImZvcm1Hcm91cEV4YW1wbGVJbnB1dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID7hg6Hhg5Dhg5nhg53hg5zhg6Lhg5Dhg6Xhg6Lhg50g4YOe4YOY4YOg4YOY4YOhIOGDnOGDneGDm+GDlOGDoOGDmCA6PC9sYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tOVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9XCJjb2wtc20tMyBjb2wtZm9ybS1sYWJlbFwiPnt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbC5jb250YWN0X251bWJlclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9fTwvbGFiZWw+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPVwiY2FuKCfhg5nhg5rhg5jhg5Thg5zhg6Lhg5jhg6Eg4YOh4YOg4YOj4YOa4YOQ4YOTIOGDnOGDkOGDruGDleGDkCcpXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPVwidGhpcy5tb2RlbC5pZFwiIGNsYXNzPVwic3RlcDJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtMTJcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz1cImxlYWRcIj7hg5Dhg5zhg5Lhg5Dhg6Dhg5jhg6jhg5g8L3A+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz1cImZvcm0tZ3JvdXAgcm93XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImNvbC1zbS00IGNvbC1mb3JtLWxhYmVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmb3I9XCJmb3JtR3JvdXBFeGFtcGxlSW5wdXRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID7hg5nhg53hg5zhg6Lhg6Dhg5Dhg6Xhg6Lhg5jhg6Eg4YOv4YOQ4YOb4YOj4YOg4YOYIOGDpuGDmOGDoOGDlOGDkeGDo+GDmuGDlOGDkeGDkDo8L2xhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tM1wiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImNvbC1zbS0zIGNvbC1mb3JtLWxhYmVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPnt7IG1vZGVsLnRvdGFsIH19PC9sYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9XCJtb2RlbC5pZFwiIGNsYXNzPVwidXBsb2FkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dXBsb2FkLWNvbXBvbmVudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDppbnB1dF9pZD1cImB0b3RhbEZpbGVzJHt0aGlzLm1vZGVsLmlkfWBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVwbG9hZF90eXBlPVwiY2xpZW50X3RvdGFsX2ZpbGVzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6bW9kZWw9XCJ0aGlzLm1vZGVsXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6dmlld29ubHk9XCJ0cnVlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ZmlsZXM9XCJ0aGlzLm1vZGVsLnRvdGFsX2ZpbGVzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48L3VwbG9hZC1jb21wb25lbnQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtZWxzZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9XCJmaWxlXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAY2hhbmdlPVwib25DaGFuZ2VcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG11bHRpcGxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGhyIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJyb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtMTIgdGFibGUtcmVzcG9uc2l2ZVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPVwibGVhZFwiPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICDhg6jhg5Thg5fhg5Dhg5zhg67hg5vhg5Thg5Hhg6Phg5rhg5gg4YOT4YOd4YOZ4YOj4YOb4YOU4YOc4YOi4YOU4YOR4YOY4YOhIOGDl+GDkOGDnOGDruGDkFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0YWJsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cInRhYmxlIHRhYmxlLXN0cmlwZWRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT1cIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZDogI2VkZWJlNDtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoZWFkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0aCByb3dzcGFuPVwiMlwiPuGDl+GDkOGDnOGDruGDkDwvdGg+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtaWY9XCJ0aGlzLm1vZGVsLmlkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcm93c3Bhbj1cIjJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAg4YOk4YOQ4YOY4YOa4YOU4YOR4YOYXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90aD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZHJhZ2dhYmxlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPVwiZXhwZW5zZXNcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGFnPVwidGJvZHlcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXRlbS1rZXk9XCJpZFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ZGlzYWJsZWQ9XCJzdGVwXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlICNpdGVtPVwieyBlbGVtZW50IH1cIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cmVxdWVzdC1zaW5nbGUtZXhwZW5zZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAYWN0aW9uX2ZvY3VzPVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cnlfZm9jdXNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQGFjdGlvbl9ibHVyPVwidHJ5X2JsdXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAYWN0aW9uX3JlbW92ZT1cInJlbW92ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDprZXlzPVwia2V5c1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDp2aWV3b25seT1cInRydWVcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6aXRlbT1cImVsZW1lbnRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2RyYWdnYWJsZT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRyIGNsYXNzPVwiY2FsY3VsYXRvclwiPjwvdHI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC90Ym9keT5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RhYmxlPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIC8uY29sIC0tPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aHIgLz5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiZm9ybS1ncm91cCByb3dcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwiY29sLXNtLTQgY29sLWZvcm0tbGFiZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvcj1cImZvcm1Hcm91cEV4YW1wbGVJbnB1dFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPuGDnOGDkOGDoOGDqeGDlOGDnOGDmCDhg5Dhg6Hhg5Dhg5fhg5Xhg5jhg6Hhg5Thg5Hhg5Thg5rhg5gg4YOX4YOQ4YOc4YOu4YOQOjwvbGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaWQ9XCJyZXN1bHRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9XCJ0ZXh0LWRhcmsgY29sLWZvcm0tbGFiZWxcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+e3sgdG90YWxRdHkgfX08L2xhYmVsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9XCJtb2RlbC5pZFwiIGNsYXNzPVwidXBsb2FkXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dXBsb2FkLWNvbXBvbmVudFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDppbnB1dF9pZD1cImBhZGRpdGlvbmFsRmlsZXMke3RoaXMubW9kZWwuaWR9YFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdXBsb2FkX3R5cGU9XCJjbGllbnRfYWRkaXRpb25hbF9maWxlc1wiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOm1vZGVsPVwidGhpcy5tb2RlbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOnZpZXdvbmx5PVwidHJ1ZVwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmZpbGVzPVwidGhpcy5tb2RlbC5hZGRpdGlvbmFsX2ZpbGVzXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID48L3VwbG9hZC1jb21wb25lbnQ+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWlmPVwiY2FuKCfhg5nhg5rhg5jhg5Thg5zhg6Lhg5jhg6Eg4YOg4YOU4YOT4YOQ4YOl4YOi4YOY4YOg4YOU4YOR4YOQJylcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPVwicm93IG5vLXByaW50XCJcbiAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPVwiY29sLTEyXCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxidXR0b25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDpkaXNhYmxlZD1cInYkLm1vZGVsLiRpbnZhbGlkXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz1cInNlbmRcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT1cImJ1dHRvblwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz1cImJ0biBidG4tc3VjY2VzcyBmbG9hdC1yaWdodFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPVwiZmFyIGZhLWNyZWRpdC1jYXJkXCI+PC9pPiDhg6jhg5Thg5zhg5Dhg67hg5Xhg5BcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9kaXY+XG4gICAgPC9kaXY+XG48L3RlbXBsYXRlPlxuXG48c2NyaXB0PlxuaW1wb3J0IFV0aWwgZnJvbSBcIlV0aWxcIjtcbmltcG9ydCBkcmFnZ2FibGUgZnJvbSBcIi4uL3ZlbmRvcnMvdnVlZHJhZ2dhYmxlL3NyYy92dWVkcmFnZ2FibGVcIjtcbmltcG9ydCB1c2VWdWVsaWRhdGUgZnJvbSBcIkB2dWVsaWRhdGUvY29yZVwiO1xuaW1wb3J0IHsgcmVxdWlyZWQsIG1heExlbmd0aCB9IGZyb20gXCJAdnVlbGlkYXRlL3ZhbGlkYXRvcnNcIjtcbmltcG9ydCBGaWxlVXBsb2FkIGZyb20gXCJ2dWUtdXBsb2FkLWNvbXBvbmVudFwiO1xuaW1wb3J0IHsgcmVmIH0gZnJvbSBcInZ1ZVwiO1xuaW1wb3J0IFVwbG9hZENvbXBvbmVudCBmcm9tIFwiLi4vY29tcG9uZW50cy9VcGxvYWRDb21wb25lbnQudnVlXCI7XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBwcm9wczogW1widXNlclwiLCBcIm1vZGVsXCIsIFwic2V0dGluZ1wiLCBcImFkZGl0aW9uYWxcIl0sXG4gICAgY29tcG9uZW50czoge1xuICAgICAgICBGaWxlVXBsb2FkLFxuICAgICAgICBVcGxvYWRDb21wb25lbnQsXG4gICAgICAgIGRyYWdnYWJsZSxcbiAgICB9LFxuICAgIHNldHVwKHByb3BzLCBjb250ZXh0KSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB2JDogdXNlVnVlbGlkYXRlKCksXG4gICAgICAgIH07XG4gICAgfSxcbiAgICBjcmVhdGVkKCkge1xuICAgICAgICB0aGlzLm0gPSB0aGlzLmF0dHJpYnV0ZUluaXQ7XG4gICAgfSxcbiAgICBtb3VudGVkKCkge1xuICAgICAgICB0aGlzLm1vZGVsLmV4cGVuc2VzLmxlbmd0aCA/IFtdIDogdGhpcy5leHBlbnNlcztcbiAgICAgICAgdGhpcy52JC5tb2RlbC4kdG91Y2goKTtcbiAgICB9LFxuICAgIGRhdGEoKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzaG93TW9kYWw6IGZhbHNlLFxuICAgICAgICAgICAgZXhwZW5zZXM6IHRoaXMubW9kZWwuZXhwZW5zZXMsXG4gICAgICAgICAgICBzZWxlY3RvcjogXCJcIixcbiAgICAgICAgICAgIHN0ZXA6IGZhbHNlLFxuICAgICAgICAgICAga2V5czogW10sXG5cbiAgICAgICAgICAgIHNlbGVjdEJ1aWxkZXI6IFtdLFxuICAgICAgICB9O1xuICAgIH0sXG4gICAgd2F0Y2g6IHt9LFxuICAgIHZhbGlkYXRpb25zKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgbW9kZWw6IHt9LFxuICAgICAgICB9O1xuICAgIH0sXG4gICAgY29tcHV0ZWQ6IHtcbiAgICAgICAgYXR0cmlidXRlSW5pdCgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLm1vZGVsO1xuICAgICAgICB9LFxuICAgICAgICBjb250cmFjdFBlcmlvZCgpIHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGUxID0gbmV3IERhdGUodGhpcy5tb2RlbC5jb250cmFjdF9zdGFydF9kYXRlKTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGUyID0gbmV3IERhdGUodGhpcy5tb2RlbC5jb250cmFjdF9lbmRfZGF0ZSk7XG4gICAgICAgICAgICBjb25zdCBvbmVEYXkgPSAxMDAwICogNjAgKiA2MCAqIDI0O1xuICAgICAgICAgICAgY29uc3QgZGlmZkluVGltZSA9IGRhdGUyLmdldFRpbWUoKSAtIGRhdGUxLmdldFRpbWUoKTtcbiAgICAgICAgICAgIGNvbnN0IGRpZmZJbkRheXMgPSBNYXRoLnJvdW5kKGRpZmZJblRpbWUgLyBvbmVEYXkpO1xuICAgICAgICAgICAgcmV0dXJuIGRpZmZJbkRheXMgPyBkaWZmSW5EYXlzIDogMDtcbiAgICAgICAgfSxcbiAgICAgICAgZ3VhcmFudGVlUGVyaW9kKCkge1xuICAgICAgICAgICAgY29uc3QgZGF0ZTEgPSBuZXcgRGF0ZSh0aGlzLm1vZGVsLmd1YXJhbnRlZV9zdGFydF9kYXRlKTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGUyID0gbmV3IERhdGUodGhpcy5tb2RlbC5ndWFyYW50ZWVfZW5kX2RhdGUpO1xuICAgICAgICAgICAgY29uc3Qgb25lRGF5ID0gMTAwMCAqIDYwICogNjAgKiAyNDtcbiAgICAgICAgICAgIGNvbnN0IGRpZmZJblRpbWUgPSBkYXRlMi5nZXRUaW1lKCkgLSBkYXRlMS5nZXRUaW1lKCk7XG4gICAgICAgICAgICBjb25zdCBkaWZmSW5EYXlzID0gTWF0aC5yb3VuZChkaWZmSW5UaW1lIC8gb25lRGF5KTtcbiAgICAgICAgICAgIHJldHVybiBkaWZmSW5EYXlzID8gZGlmZkluRGF5cyA6IDA7XG4gICAgICAgIH0sXG4gICAgICAgIGNvbnRyYWN0U3RhdHVzKCkge1xuICAgICAgICAgICAgY29uc3QgZGF0ZTEgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgY29uc3QgZGF0ZTIgPSBuZXcgRGF0ZSh0aGlzLm1vZGVsLmNvbnRyYWN0X2VuZF9kYXRlKTtcblxuICAgICAgICAgICAgaWYgKGRhdGUxID4gZGF0ZTIpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCLhg5Phg5Dhg6Hhg6Dhg6Phg5rhg5Thg5Hhg6Phg5rhg5hcIjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBcIuGDm+GDmOGDm+GDk+GDmOGDnOGDkOGDoOGDlFwiO1xuICAgICAgICB9LFxuXG4gICAgICAgIGd1YXJhbnRlZVN0YXR1cygpIHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGUxID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGUyID0gbmV3IERhdGUodGhpcy5tb2RlbC5ndWFyYW50ZWVfZW5kX2RhdGUpO1xuXG4gICAgICAgICAgICBpZiAoZGF0ZTEgPiBkYXRlMikge1xuICAgICAgICAgICAgICAgIHJldHVybiBcIuGDk+GDkOGDoeGDoOGDo+GDmuGDlOGDkeGDo+GDmuGDmFwiO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFwi4YOb4YOY4YOb4YOT4YOY4YOc4YOQ4YOg4YOUXCI7XG4gICAgICAgIH0sXG4gICAgICAgIGRheXNMZWZ0KCkge1xuICAgICAgICAgICAgY29uc3QgZGF0ZTEgPSBuZXcgRGF0ZSgpO1xuICAgICAgICAgICAgY29uc3QgZGF0ZTIgPSBuZXcgRGF0ZSh0aGlzLm1vZGVsLmNvbnRyYWN0X2VuZF9kYXRlKTtcbiAgICAgICAgICAgIGNvbnN0IG9uZURheSA9IDEwMDAgKiA2MCAqIDYwICogMjQ7XG4gICAgICAgICAgICBjb25zdCBkaWZmSW5UaW1lID0gZGF0ZTIuZ2V0VGltZSgpIC0gZGF0ZTEuZ2V0VGltZSgpO1xuICAgICAgICAgICAgY29uc3QgZGlmZkluRGF5cyA9IE1hdGgucm91bmQoZGlmZkluVGltZSAvIG9uZURheSk7XG4gICAgICAgICAgICByZXR1cm4gZGlmZkluRGF5cyA/IGRpZmZJbkRheXMgOiAwO1xuICAgICAgICB9LFxuICAgICAgICBkYXlzTGVmdEd1YXJhbnRlZSgpIHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGUxID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGUyID0gbmV3IERhdGUodGhpcy5tb2RlbC5ndWFyYW50ZWVfZW5kX2RhdGUpO1xuICAgICAgICAgICAgY29uc3Qgb25lRGF5ID0gMTAwMCAqIDYwICogNjAgKiAyNDtcbiAgICAgICAgICAgIGNvbnN0IGRpZmZJblRpbWUgPSBkYXRlMi5nZXRUaW1lKCkgLSBkYXRlMS5nZXRUaW1lKCk7XG4gICAgICAgICAgICBjb25zdCBkaWZmSW5EYXlzID0gTWF0aC5yb3VuZChkaWZmSW5UaW1lIC8gb25lRGF5KTtcbiAgICAgICAgICAgIHJldHVybiBkaWZmSW5EYXlzID8gZGlmZkluRGF5cyA6IDA7XG4gICAgICAgIH0sXG4gICAgICAgIHRvdGFsUXR5KCkge1xuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICB0aGlzLm1vZGVsLnRvdGFsIC1cbiAgICAgICAgICAgICAgICB0aGlzLmV4cGVuc2VzPy5yZWR1Y2UoKHRvdGFsLCBpdGVtKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0b3RhbCArIE51bWJlcihpdGVtLmFtb3VudCk7XG4gICAgICAgICAgICAgICAgfSwgMClcbiAgICAgICAgICAgICk7XG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBtZXRob2RzOiB7XG4gICAgICAgIGZpbmRTcGVjaWFsQXRyaWJ1dGUocmVzKSB7XG4gICAgICAgICAgICBpZiAocmVzID09IFwibmV3XCIpIHtcbiAgICAgICAgICAgICAgICBsZXQgYWN0aW9uID0gZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCJmb3JtI3JlbmRlclwiKVxuICAgICAgICAgICAgICAgICAgICAuZ2V0QXR0cmlidXRlKFwiYWN0aW9uXCIpO1xuICAgICAgICAgICAgICAgIGxldCB0b2tlbiA9IGRvY3VtZW50XG4gICAgICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9XCJjc3JmLXRva2VuXCInKVxuICAgICAgICAgICAgICAgICAgICAuZ2V0QXR0cmlidXRlKFwiY29udGVudFwiKTtcblxuICAgICAgICAgICAgICAgIGxldCBpdGVtID0geyBhbW91bnQ6IDAsIHV1aWQ6IFV0aWwudXVpZCgpLCBtZWRpYTogW10gfTtcbiAgICAgICAgICAgICAgICB0aGlzLiRodHRwXG4gICAgICAgICAgICAgICAgICAgIC5wb3N0KFwiL2FwaS9hZGRDbGllbnRFeHBlbnNlL1wiICsgdGhpcy5tb2RlbC5pZCwgaXRlbSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJDb250ZW50LVR5cGVcIjogXCJtdWx0aXBhcnQvZm9ybS1kYXRhXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBcIlgtQ1NSRi1UT0tFTlwiOiB0b2tlbixcbiAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oYXN5bmMgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBpdGVtLmlkID0gcmVzcG9uc2UuZGF0YS5leHBlbnNlLmlkO1xuXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmV4cGVuc2VzLnB1c2goaXRlbSk7XG4gICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kdG9hc3QuZXJyb3IoZS5yZXNwb25zZS5zdGF0dXNUZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IFwidG9wLXJpZ2h0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDcwMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICByZXR1cm47XG4gICAgICAgICAgICB9XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVtb3ZlUmVxdWVzdChtb2RlbCwgc2V0dGluZywgY2FsbGJhY2ssIGlzUmVzZXJ2ZSA9IG51bGwpIHtcbiAgICAgICAgICAgIGxldCBpc05ldyA9IGlzUmVzZXJ2ZSA/IG1vZGVsLmlkIDogbW9kZWwuaWQ7XG5cbiAgICAgICAgICAgIGlmICghaXNOZXcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2soKTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgbGV0IHRva2VuID0gZG9jdW1lbnRcbiAgICAgICAgICAgICAgICAucXVlcnlTZWxlY3RvcignbWV0YVtuYW1lPVwiY3NyZi10b2tlblwiJylcbiAgICAgICAgICAgICAgICAuZ2V0QXR0cmlidXRlKFwiY29udGVudFwiKTtcblxuICAgICAgICAgICAgcmV0dXJuIHRoaXMuJGh0dHBcbiAgICAgICAgICAgICAgICAuZGVsZXRlKFxuICAgICAgICAgICAgICAgICAgICBcIi9hcGkvZGVsZXRlQ2xpZW50RXhwZW5zZS9cIiArIG1vZGVsLmlkLFxuXG4gICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJYLUNTUkYtVE9LRU5cIjogdG9rZW4sXG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgLnRoZW4oYXN5bmMgKHJlc3BvbnNlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLnN1Y2Nlc3MgPT0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2soKTtcbiAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEuZXJycy5tYXAoKGl0ZW0pID0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kdG9hc3QuZXJyb3IoaXRlbSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogXCJ0b3AtcmlnaHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZHVyYXRpb246IDcwMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC5jYXRjaCgoZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBpZiAoZS5yZXNwb25zZSlcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHRvYXN0LmVycm9yKGUucmVzcG9uc2Uuc3RhdHVzVGV4dCwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBcInRvcC1yaWdodFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiA3MDAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sXG5cbiAgICAgICAgcmVtb3ZlKGUsIG1vZGVsLCBpc1Jlc2VydmUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgICAgIHJldHVybiBVdGlsLnVzZVN3YWxsMihtb2RlbCkudGhlbigocmVzdWx0KSA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdC5pc0NvbmZpcm1lZCkge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZVJlcXVlc3QoXG4gICAgICAgICAgICAgICAgICAgICAgICBtb2RlbCB8fCBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXR0aW5nLFxuICAgICAgICAgICAgICAgICAgICAgICAgKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICghaXNSZXNlcnZlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBpbmRleCA9IHRoaXMubW9kZWwuZXhwZW5zZXMuZmluZEluZGV4KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKGkpID0+IGkudXVpZCA9PSBtb2RlbC51dWlkXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubW9kZWwuZXhwZW5zZXMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBTd2FsLmZpcmUoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwi4YOs4YOQ4YOo4YOa4YOQIVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIuGDrOGDkOGDqOGDmuGDkCDhg6jhg5Thg6Hhg6Dhg6Dhg6Phg5rhg5Phg5Ag4YOs4YOQ4YOg4YOb4YOQ4YOi4YOU4YOR4YOY4YOXLlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcInN1Y2Nlc3NcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpc1Jlc2VydmUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZXBsYWNlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0dGluZy51cmwucmVxdWVzdC5pbmRleC5yZXBsYWNlKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImFwaS9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBpc1Jlc2VydmVcbiAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSxcblxuICAgICAgICB0cnlfZXhpdChyZXMsIHNlbGVjdG9yKSB7XG4gICAgICAgICAgICB0aGlzLnNob3dNb2RhbCA9IGZhbHNlO1xuICAgICAgICB9LFxuXG4gICAgICAgIHNldHRlcihuYW1lKSB7XG4gICAgICAgICAgICB0aGlzLnNlbGVjdEJ1aWxkZXIgPSBbeyBzZWxlY3RlZDogXCJcIiwgcmVzOiB0aGlzLmFkZGl0aW9uYWxbbmFtZV0gfV07XG4gICAgICAgICAgICB0aGlzLnNlbGVjdG9yID0gbmFtZTtcbiAgICAgICAgICAgIHRoaXMuc2hvd01vZGFsID0gdHJ1ZTtcbiAgICAgICAgfSxcbiAgICAgICAgaW5wdXRGaWx0ZXIobmV3RmlsZSwgb2xkRmlsZSwgcHJldmVudCkge1xuICAgICAgICAgICAgaWYgKG5ld0ZpbGUgJiYgIW9sZEZpbGUpIHtcbiAgICAgICAgICAgICAgICBpZiAoXG4gICAgICAgICAgICAgICAgICAgIC8oXFwvfF4pKFRodW1ic1xcLmRifGRlc2t0b3BcXC5pbml8XFwuLispJC8udGVzdChuZXdGaWxlLm5hbWUpXG4gICAgICAgICAgICAgICAgKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwcmV2ZW50KCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGlmICgvXFwuKHBocDU/fGh0bWw/fGpzeD8pJC9pLnRlc3QobmV3RmlsZS5uYW1lKSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcHJldmVudCgpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSxcblxuICAgICAgICBzZW5kKGUpIHtcbiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgICAgICAgbGV0IGFjdGlvbiA9IGRvY3VtZW50XG4gICAgICAgICAgICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCJmb3JtI3JlbmRlclwiKVxuICAgICAgICAgICAgICAgIC5nZXRBdHRyaWJ1dGUoXCJhY3Rpb25cIik7XG4gICAgICAgICAgICBsZXQgdG9rZW4gPSBkb2N1bWVudFxuICAgICAgICAgICAgICAgIC5xdWVyeVNlbGVjdG9yKCdtZXRhW25hbWU9XCJjc3JmLXRva2VuXCInKVxuICAgICAgICAgICAgICAgIC5nZXRBdHRyaWJ1dGUoXCJjb250ZW50XCIpO1xuXG4gICAgICAgICAgICB0aGlzLiRodHRwXG4gICAgICAgICAgICAgICAgLnBvc3QoYWN0aW9uLCB0aGlzLm1vZGVsLCB7XG4gICAgICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCI6IFwibXVsdGlwYXJ0L2Zvcm0tZGF0YVwiLFxuICAgICAgICAgICAgICAgICAgICBcIlgtQ1NSRi1UT0tFTlwiOiB0b2tlbixcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIC50aGVuKGFzeW5jIChyZXNwb25zZSkgPT4ge1xuICAgICAgICAgICAgICAgICAgICBVdGlsLnVzZVN3YWxsKHJlc3BvbnNlKS50aGVuKChyZXN1bHQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXN1bHQudmFsdWUpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXR0aW5nLnVybC5yZXF1ZXN0LmluZGV4LnJlcGxhY2UoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImFwaS9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMubW9kZWwuaWQgPT0gbnVsbCAmJlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEuc3VjY2VzcyA9PSB0cnVlXG4gICAgICAgICAgICAgICAgICAgICAgICApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVwbGFjZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uLmhyZWYucmVwbGFjZShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibmV3XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZS5kYXRhLnJlc3VsdC5pZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCFyZXNwb25zZS5kYXRhLnN1Y2Nlc3MpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5lcnJzKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZS5kYXRhLmVycnMubWFwKChpdGVtKSA9PlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy4kdG9hc3QuZXJyb3IoaXRlbSwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBcInRvcC1yaWdodFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiA3MDAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfSlcbiAgICAgICAgICAgICAgICAuY2F0Y2goKGUpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy4kdG9hc3QuZXJyb3IoZS5yZXNwb25zZS5zdGF0dXNUZXh0LCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogXCJ0b3AtcmlnaHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiA3MDAwLFxuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9LFxuXG4gICAgICAgIHRyeV9mb2N1cygpIHtcbiAgICAgICAgICAgIHRoaXMuc3RlcCA9IHRydWU7XG4gICAgICAgIH0sXG5cbiAgICAgICAgdHJ5X2JsdXIoKSB7XG4gICAgICAgICAgICB0aGlzLnN0ZXAgPSBmYWxzZTtcbiAgICAgICAgfSxcblxuICAgICAgICBleGl0KCkge1xuICAgICAgICAgICAgcmV0dXJuICh3aW5kb3cubG9jYXRpb24uaHJlZiA9XG4gICAgICAgICAgICAgICAgdGhpcy5zZXR0aW5nLnVybC5yZXF1ZXN0LmluZGV4LnJlcGxhY2UoXCJhcGkvXCIsIFwiXCIpKTtcbiAgICAgICAgfSxcbiAgICB9LFxufTtcbjwvc2NyaXB0PlxuXG48c3R5bGU+XG50YWJsZSB0ciA+IHRkLFxudGFibGUgdHIgPiB0aCB7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbn1cblxuLnRhYmxlIHRoZWFkIHRoIHtcbiAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xuICAgIHBhZGRpbmc6IDNweDtcbiAgICBiYWNrZ3JvdW5kOiBncmF5O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLnRhYmxlIHRkIHtcbiAgICBjdXJzb3I6IG1vdmU7XG59XG5cbi50YWJsZSB0ZCxcbi50YWJsZSB0aCB7XG4gICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgICBwYWRkaW5nOiAzcHg7XG59XG5cbi50YWJsZSB0ZCBpbnB1dCxcbi50YWJsZSB0aCBpbnB1dCB7XG4gICAgcGFkZGluZzogM3B4O1xufVxuXG4uY2FsY3VsYXRvciB7XG4gICAgY29sb3I6IGJsYWNrO1xufVxuXG50YWJsZS50YWJsZS1zdHJpcGVkIHtcbiAgICAvKmJvcmRlci10b3AtY29sb3I6ICMwMDA7IFxuICBib3JkZXItdG9wLXdpZHRoOiAxOyBcbiAgYm9yZGVyLXRvcC1zdHlsZTogc29saWQ7Ki9cbiAgICBib3JkZXI6IDNweCBzb2xpZCBncmF5O1xufVxuXG50YWJsZS50YWJsZS1zdHJpcGVkIHRyLmNhbGN1bGF0b3Ige1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XG5cbiAgICBib3JkZXItYm90dG9tLWNvbG9yOiAjMDAwO1xuICAgIGJvcmRlci1ib3R0b20td2lkdGg6IDE7XG4gICAgYm9yZGVyLWJvdHRvbS1zdHlsZTogc29saWQ7XG5cbiAgICBib3JkZXItdG9wLWNvbG9yOiAjMDAwO1xuICAgIGJvcmRlci10b3Atd2lkdGg6IDE7XG4gICAgYm9yZGVyLXRvcC1zdHlsZTogc29saWQ7XG59XG5cbnRhYmxlIHtcbiAgICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICAgIHdpZHRoOiAxMDAlO1xufVxuPC9zdHlsZT5cbiJdLCJuYW1lcyI6WyJzdHlsZSIsImtleSIsInJvd3NwYW4iLCJpZCIsIl9jcmVhdGVFbGVtZW50QmxvY2siLCJfaG9pc3RlZF8xIiwiX2NyZWF0ZUVsZW1lbnRWTm9kZSIsIl9ob2lzdGVkXzIiLCJfaG9pc3RlZF8zIiwiX2NyZWF0ZUNvbW1lbnRWTm9kZSIsIl9ob2lzdGVkXzQiLCJfaG9pc3RlZF81IiwiX2hvaXN0ZWRfNiIsIl9ob2lzdGVkXzciLCJfdG9EaXNwbGF5U3RyaW5nIiwiJHByb3BzIiwibW9kZWwiLCJjbGllbnRfbmFtZSIsIl9ob2lzdGVkXzgiLCJfaG9pc3RlZF85IiwiX2hvaXN0ZWRfMTAiLCJpZGVudGlmaWNhdGlvbl9jb2RlIiwiX2hvaXN0ZWRfMTEiLCJfaG9pc3RlZF8xMiIsImxlZ2FsX2FkZHJlc3MiLCJfaG9pc3RlZF8xMyIsIl9ob2lzdGVkXzE0IiwiX2hvaXN0ZWRfMTUiLCJzZXJ2aWNlX25hbWUiLCJfaG9pc3RlZF8xNiIsIl9ob2lzdGVkXzE3IiwiX2hvaXN0ZWRfMTgiLCJjb250cmFjdF9zZXJ2aWNlX3R5cGUiLCJfaG9pc3RlZF8xOSIsIl9ob2lzdGVkXzIwIiwiX2hvaXN0ZWRfMjEiLCJjb250cmFjdF9zdGFydF9kYXRlIiwiX2hvaXN0ZWRfMjIiLCJfaG9pc3RlZF8yMyIsIl9ob2lzdGVkXzI0IiwiY29udHJhY3RfZW5kX2RhdGUiLCJfaG9pc3RlZF8yNSIsIl9ob2lzdGVkXzI2IiwiJG9wdGlvbnMiLCJjb250cmFjdFBlcmlvZCIsIl9ob2lzdGVkXzI3IiwiX2hvaXN0ZWRfMjgiLCJkYXlzTGVmdCIsIl9ob2lzdGVkXzI5IiwiX2hvaXN0ZWRfMzAiLCJjb250cmFjdFN0YXR1cyIsIl9ob2lzdGVkXzMxIiwiX2hvaXN0ZWRfMzIiLCJfaG9pc3RlZF8zMyIsImd1YXJhbnRlZV9zdGFydF9kYXRlIiwiX2hvaXN0ZWRfMzQiLCJfaG9pc3RlZF8zNSIsIl9ob2lzdGVkXzM2IiwiZ3VhcmFudGVlX2VuZF9kYXRlIiwiX2hvaXN0ZWRfMzciLCJfaG9pc3RlZF8zOCIsImd1YXJhbnRlZVBlcmlvZCIsIl9ob2lzdGVkXzM5IiwiX2hvaXN0ZWRfNDAiLCJkYXlzTGVmdEd1YXJhbnRlZSIsIl9ob2lzdGVkXzQxIiwiX2hvaXN0ZWRfNDIiLCJndWFyYW50ZWVTdGF0dXMiLCJfaG9pc3RlZF80MyIsIl9ob2lzdGVkXzQ0IiwiX2hvaXN0ZWRfNDUiLCJjbGllbnRfaWRlbnRpZmljYXRpb25fY29kZSIsIl9ob2lzdGVkXzQ2IiwiX2hvaXN0ZWRfNDciLCJfaG9pc3RlZF80OCIsImNvbnRhY3RfbmFtZSIsIl9ob2lzdGVkXzQ5IiwiX2hvaXN0ZWRfNTAiLCJfaG9pc3RlZF81MSIsImNvbnRhY3RfbnVtYmVyIiwiX2N0eCIsImNhbiIsIl9ob2lzdGVkXzUyIiwiX2hvaXN0ZWRfNTMiLCJfaG9pc3RlZF81NCIsIl9ob2lzdGVkXzU1IiwiX2hvaXN0ZWRfNTYiLCJ0b3RhbCIsIl9ob2lzdGVkXzU3IiwiX2NyZWF0ZVZOb2RlIiwiX2NvbXBvbmVudF91cGxvYWRfY29tcG9uZW50IiwiaW5wdXRfaWQiLCJjb25jYXQiLCJ1cGxvYWRfdHlwZSIsInZpZXdvbmx5IiwiZmlsZXMiLCJ0b3RhbF9maWxlcyIsIl9ob2lzdGVkXzU4IiwidHlwZSIsIm9uQ2hhbmdlIiwiX2NhY2hlIiwiYXBwbHkiLCJhcmd1bWVudHMiLCJtdWx0aXBsZSIsIl9ob2lzdGVkXzU5IiwiX2hvaXN0ZWRfNjAiLCJfaG9pc3RlZF82MSIsIl9ob2lzdGVkXzYyIiwiX2NvbXBvbmVudF9kcmFnZ2FibGUiLCJtb2RlbFZhbHVlIiwiJGRhdGEiLCJleHBlbnNlcyIsIiRldmVudCIsInRhZyIsImRpc2FibGVkIiwic3RlcCIsIml0ZW0iLCJfd2l0aEN0eCIsIl9yZWYiLCJlbGVtZW50IiwiX2NvbXBvbmVudF9yZXF1ZXN0X3NpbmdsZV9leHBlbnNlIiwib25BY3Rpb25fZm9jdXMiLCJ0cnlfZm9jdXMiLCJvbkFjdGlvbl9ibHVyIiwidHJ5X2JsdXIiLCJvbkFjdGlvbl9yZW1vdmUiLCJyZW1vdmUiLCJrZXlzIiwiXyIsIl9ob2lzdGVkXzYzIiwiX2hvaXN0ZWRfNjQiLCJfaG9pc3RlZF82NSIsInRvdGFsUXR5IiwiX2hvaXN0ZWRfNjYiLCJhZGRpdGlvbmFsX2ZpbGVzIiwiX2hvaXN0ZWRfNjciLCJfaG9pc3RlZF82OCIsIiRzZXR1cCIsInYkIiwiJGludmFsaWQiLCJvbkNsaWNrIiwic2VuZCIsIl9jcmVhdGVUZXh0Vk5vZGUiLCJfaG9pc3RlZF82OSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=template&id=6406f2a0\n");

/***/ }),

/***/ "./node_modules/css-loader/dist/cjs.js??clonedRuleSet-11.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-11.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css":
/*!*******************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js??clonedRuleSet-11.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-11.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css ***!
  \*******************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/cssWithMappingToString.js */ \"./node_modules/css-loader/dist/runtime/cssWithMappingToString.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1__);\n// Imports\n\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_1___default()((_node_modules_css_loader_dist_runtime_cssWithMappingToString_js__WEBPACK_IMPORTED_MODULE_0___default()));\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"\\ntable tr > td,\\ntable tr > th {\\n    vertical-align: middle;\\n}\\n.table thead th {\\n    vertical-align: middle;\\n    padding: 3px;\\n    background: gray;\\n    border: 1px solid white;\\n    text-align: center;\\n}\\n.table td {\\n    cursor: move;\\n}\\n.table td,\\n.table th {\\n    vertical-align: middle;\\n    padding: 3px;\\n}\\n.table td input,\\n.table th input {\\n    padding: 3px;\\n}\\n.calculator {\\n    color: black;\\n}\\ntable.table-striped {\\n    /*border-top-color: #000; \\n  border-top-width: 1; \\n  border-top-style: solid;*/\\n    border: 3px solid gray;\\n}\\ntable.table-striped tr.calculator {\\n    background-color: #fff;\\n\\n    border-bottom-color: #000;\\n    border-bottom-width: 1;\\n    border-bottom-style: solid;\\n\\n    border-top-color: #000;\\n    border-top-width: 1;\\n    border-top-style: solid;\\n}\\ntable {\\n    border-collapse: collapse;\\n    width: 100%;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./../../../../Client-View.vue\"],\"names\":[],\"mappings\":\";AAurBA;;IAEI,sBAAsB;AAC1B;AAEA;IACI,sBAAsB;IACtB,YAAY;IACZ,gBAAgB;IAChB,uBAAuB;IACvB,kBAAkB;AACtB;AAEA;IACI,YAAY;AAChB;AAEA;;IAEI,sBAAsB;IACtB,YAAY;AAChB;AAEA;;IAEI,YAAY;AAChB;AAEA;IACI,YAAY;AAChB;AAEA;IACI;;2BAEuB;IACvB,sBAAsB;AAC1B;AAEA;IACI,sBAAsB;;IAEtB,yBAAyB;IACzB,sBAAsB;IACtB,0BAA0B;;IAE1B,sBAAsB;IACtB,mBAAmB;IACnB,uBAAuB;AAC3B;AAEA;IACI,yBAAyB;IACzB,WAAW;AACf\",\"sourcesContent\":[\"<template>\\n    <div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <!-- Main content -->\\n\\n                <div class=\\\"invoice p-3 mb-3\\\">\\n                    <div style=\\\"\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                for=\\\"staticEmail\\\"\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                ><b>დასახელება :</b></label\\n                            >\\n                            <label class=\\\"col-sm-3 col-form-label\\\">{{\\n                                model.client_name\\n                            }}</label>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput2\\\"\\n                                >საიდენტიფიკაციო კოდი :</label\\n                            >\\n                            <div class=\\\"col-sm-9\\\">\\n                                <label class=\\\"col-sm-3 col-form-label\\\">{{\\n                                    model.identification_code\\n                                }}</label>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >იურიდიული მისამართი :</label\\n                            >\\n                            <label class=\\\"col-sm-3 col-form-label\\\">{{\\n                                model.legal_address\\n                            }}</label>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >მომსახურების შიდა სახელი :</label\\n                            >\\n\\n                            <div class=\\\"col-sm-9\\\">\\n                                <label class=\\\"col-sm-3 col-form-label\\\">{{\\n                                    model.service_name\\n                                }}</label>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >კონტრაქტის მომსახურების ტიპი :</label\\n                            >\\n\\n                            <div class=\\\"col-sm-9\\\">\\n                                <label class=\\\"col-sm-3 col-form-label\\\">{{\\n                                    model.contract_service_type\\n                                }}</label>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >კონტრაქტის დაწყების თარიღი :</label\\n                            >\\n\\n                            <div class=\\\"col-sm-9\\\">\\n                                <label class=\\\"col-sm-3 col-form-label\\\">{{\\n                                    model.contract_start_date\\n                                }}</label>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >კონტრაქტის დასრულების თარიღი :</label\\n                            >\\n                            <div class=\\\"col-sm-9\\\">\\n                                <label class=\\\"col-sm-3 col-form-label\\\">{{\\n                                    model.contract_end_date\\n                                }}</label>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >კონტრაქტის პერიოდი / დღე :</label\\n                            >\\n\\n                            <div class=\\\"col-sm-9\\\">\\n                                <span>{{ contractPeriod }}</span>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >კონტრაქტის ნარჩენი დღეები :</label\\n                            >\\n\\n                            <div class=\\\"col-sm-9\\\">\\n                                <span>{{ daysLeft }}</span>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >კონტრაქტის სტატუსი :</label\\n                            >\\n\\n                            <div class=\\\"col-sm-9\\\">\\n                                {{ contractStatus }}\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >გარანტიის დაწყების თარიღი :</label\\n                            >\\n                            <div class=\\\"col-sm-9\\\">\\n                                <label class=\\\"col-sm-3 col-form-label\\\">{{\\n                                    model.guarantee_start_date\\n                                }}</label>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >გარანტიის დასრულების თარიღი :</label\\n                            >\\n\\n                            <div class=\\\"col-sm-9\\\">\\n                                <label class=\\\"col-sm-3 col-form-label\\\">{{\\n                                    model.guarantee_end_date\\n                                }}</label>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >გარანტიის პერიოდი / დღე :</label\\n                            >\\n\\n                            <div class=\\\"col-sm-9\\\">\\n                                <span>{{ guaranteePeriod }}</span>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >გარანტიის ნარჩენი დღეები :</label\\n                            >\\n\\n                            <div class=\\\"col-sm-9\\\">\\n                                <span>{{ daysLeftGuarantee }}</span>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >გარანტიის სტატუსი :</label\\n                            >\\n\\n                            <div class=\\\"col-sm-9\\\">\\n                                {{ guaranteeStatus }}\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >კლიენტის მაიდენთიფიცირებელი კოდი :</label\\n                            >\\n\\n                            <div class=\\\"col-sm-9\\\">\\n                                <label class=\\\"col-sm-3 col-form-label\\\">{{\\n                                    model.client_identification_code\\n                                }}</label>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >საკონტაქტო პირი :</label\\n                            >\\n                            <div class=\\\"col-sm-9\\\">\\n                                <label class=\\\"col-sm-3 col-form-label\\\">{{\\n                                    model.contact_name\\n                                }}</label>\\n                            </div>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label\\n                                class=\\\"col-sm-3 col-form-label\\\"\\n                                for=\\\"formGroupExampleInput\\\"\\n                                >საკონტაქტო პირის ნომერი :</label\\n                            >\\n\\n                            <div class=\\\"col-sm-9\\\">\\n                                <label class=\\\"col-sm-3 col-form-label\\\">{{\\n                                    model.contact_number\\n                                }}</label>\\n                            </div>\\n                        </div>\\n\\n                        <div v-if=\\\"can('კლიენტის სრულად ნახვა')\\\">\\n                            <div v-if=\\\"this.model.id\\\" class=\\\"step2\\\">\\n                                <hr />\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-12\\\">\\n                                        <p class=\\\"lead\\\">ანგარიში</p>\\n                                    </div>\\n                                </div>\\n\\n                                <div class=\\\"form-group row\\\">\\n                                    <label\\n                                        class=\\\"col-sm-4 col-form-label\\\"\\n                                        for=\\\"formGroupExampleInput\\\"\\n                                        >კონტრაქტის ჯამური ღირებულება:</label\\n                                    >\\n\\n                                    <div class=\\\"col-sm-3\\\">\\n                                        <label\\n                                            class=\\\"col-sm-3 col-form-label\\\"\\n                                            >{{ model.total }}</label\\n                                        >\\n                                    </div>\\n                                </div>\\n\\n                                <div v-if=\\\"model.id\\\" class=\\\"upload\\\">\\n                                    <upload-component\\n                                        :input_id=\\\"`totalFiles${this.model.id}`\\\"\\n                                        upload_type=\\\"client_total_files\\\"\\n                                        :model=\\\"this.model\\\"\\n                                        :viewonly=\\\"true\\\"\\n                                        :files=\\\"this.model.total_files\\\"\\n                                    ></upload-component>\\n                                </div>\\n                                <div v-else>\\n                                    <input\\n                                        type=\\\"file\\\"\\n                                        @change=\\\"onChange\\\"\\n                                        multiple\\n                                    />\\n                                </div>\\n                                <hr />\\n                                <div class=\\\"row\\\">\\n                                    <div class=\\\"col-12 table-responsive\\\">\\n                                        <p class=\\\"lead\\\">\\n                                            შეთანხმებული დოკუმენტების თანხა\\n                                        </p>\\n\\n                                        <table\\n                                            class=\\\"table table-striped\\\"\\n                                            style=\\\"\\n                                                background: #edebe4;\\n                                                color: #fff;\\n                                            \\\"\\n                                        >\\n                                            <thead>\\n                                                <tr>\\n                                                    <th rowspan=\\\"2\\\">თანხა</th>\\n                                                    <th\\n                                                        v-if=\\\"this.model.id\\\"\\n                                                        rowspan=\\\"2\\\"\\n                                                    >\\n                                                        ფაილები\\n                                                    </th>\\n                                                </tr>\\n                                            </thead>\\n\\n                                            <tbody>\\n                                            <draggable\\n                                                v-model=\\\"expenses\\\"\\n                                                tag=\\\"tbody\\\"\\n                                                item-key=\\\"id\\\"\\n                                                :disabled=\\\"step\\\"\\n                                            >\\n                                                <template #item=\\\"{ element }\\\">\\n                                                    <request-single-expense\\n                                                        @action_focus=\\\"\\n                                                            try_focus\\n                                                        \\\"\\n                                                        @action_blur=\\\"try_blur\\\"\\n                                                        @action_remove=\\\"remove\\\"\\n                                                        :keys=\\\"keys\\\"\\n                                                        :viewonly=\\\"true\\\"\\n                                                        :item=\\\"element\\\"\\n                                                    />\\n                                                </template>\\n                                            </draggable>\\n                                            <tr class=\\\"calculator\\\"></tr>\\n                                        </tbody>\\n                                        </table>\\n                                    </div>\\n                                    <!-- /.col -->\\n                                </div>\\n\\n                                <hr />\\n\\n                                <div class=\\\"form-group row\\\">\\n                                    <label\\n                                        class=\\\"col-sm-4 col-form-label\\\"\\n                                        for=\\\"formGroupExampleInput\\\"\\n                                        >ნარჩენი ასათვისებელი თანხა:</label\\n                                    >\\n\\n                                    <span id=\\\"result\\\">\\n                                        <label\\n                                            class=\\\"text-dark col-form-label\\\"\\n                                            >{{ totalQty }}</label\\n                                        >\\n                                    </span>\\n                                </div>\\n\\n                                <div v-if=\\\"model.id\\\" class=\\\"upload\\\">\\n                                    <upload-component\\n                                        :input_id=\\\"`additionalFiles${this.model.id}`\\\"\\n                                        upload_type=\\\"client_additional_files\\\"\\n                                        :model=\\\"this.model\\\"\\n                                        :viewonly=\\\"true\\\"\\n                                        :files=\\\"this.model.additional_files\\\"\\n                                    ></upload-component>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                        <div\\n                            v-if=\\\"can('კლიენტის რედაქტირება')\\\"\\n                            class=\\\"row no-print\\\"\\n                        >\\n                            <div class=\\\"col-12\\\">\\n                                <button\\n                                    :disabled=\\\"v$.model.$invalid\\\"\\n                                    @click=\\\"send\\\"\\n                                    type=\\\"button\\\"\\n                                    class=\\\"btn btn-success float-right\\\"\\n                                >\\n                                    <i class=\\\"far fa-credit-card\\\"></i> შენახვა\\n                                </button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</template>\\n\\n<script>\\nimport Util from \\\"Util\\\";\\nimport draggable from \\\"../vendors/vuedraggable/src/vuedraggable\\\";\\nimport useVuelidate from \\\"@vuelidate/core\\\";\\nimport { required, maxLength } from \\\"@vuelidate/validators\\\";\\nimport FileUpload from \\\"vue-upload-component\\\";\\nimport { ref } from \\\"vue\\\";\\nimport UploadComponent from \\\"../components/UploadComponent.vue\\\";\\n\\nexport default {\\n    props: [\\\"user\\\", \\\"model\\\", \\\"setting\\\", \\\"additional\\\"],\\n    components: {\\n        FileUpload,\\n        UploadComponent,\\n        draggable,\\n    },\\n    setup(props, context) {\\n        return {\\n            v$: useVuelidate(),\\n        };\\n    },\\n    created() {\\n        this.m = this.attributeInit;\\n    },\\n    mounted() {\\n        this.model.expenses.length ? [] : this.expenses;\\n        this.v$.model.$touch();\\n    },\\n    data() {\\n        return {\\n            showModal: false,\\n            expenses: this.model.expenses,\\n            selector: \\\"\\\",\\n            step: false,\\n            keys: [],\\n\\n            selectBuilder: [],\\n        };\\n    },\\n    watch: {},\\n    validations() {\\n        return {\\n            model: {},\\n        };\\n    },\\n    computed: {\\n        attributeInit() {\\n            return this.model;\\n        },\\n        contractPeriod() {\\n            const date1 = new Date(this.model.contract_start_date);\\n            const date2 = new Date(this.model.contract_end_date);\\n            const oneDay = 1000 * 60 * 60 * 24;\\n            const diffInTime = date2.getTime() - date1.getTime();\\n            const diffInDays = Math.round(diffInTime / oneDay);\\n            return diffInDays ? diffInDays : 0;\\n        },\\n        guaranteePeriod() {\\n            const date1 = new Date(this.model.guarantee_start_date);\\n            const date2 = new Date(this.model.guarantee_end_date);\\n            const oneDay = 1000 * 60 * 60 * 24;\\n            const diffInTime = date2.getTime() - date1.getTime();\\n            const diffInDays = Math.round(diffInTime / oneDay);\\n            return diffInDays ? diffInDays : 0;\\n        },\\n        contractStatus() {\\n            const date1 = new Date();\\n            const date2 = new Date(this.model.contract_end_date);\\n\\n            if (date1 > date2) {\\n                return \\\"დასრულებული\\\";\\n            }\\n            return \\\"მიმდინარე\\\";\\n        },\\n\\n        guaranteeStatus() {\\n            const date1 = new Date();\\n            const date2 = new Date(this.model.guarantee_end_date);\\n\\n            if (date1 > date2) {\\n                return \\\"დასრულებული\\\";\\n            }\\n            return \\\"მიმდინარე\\\";\\n        },\\n        daysLeft() {\\n            const date1 = new Date();\\n            const date2 = new Date(this.model.contract_end_date);\\n            const oneDay = 1000 * 60 * 60 * 24;\\n            const diffInTime = date2.getTime() - date1.getTime();\\n            const diffInDays = Math.round(diffInTime / oneDay);\\n            return diffInDays ? diffInDays : 0;\\n        },\\n        daysLeftGuarantee() {\\n            const date1 = new Date();\\n            const date2 = new Date(this.model.guarantee_end_date);\\n            const oneDay = 1000 * 60 * 60 * 24;\\n            const diffInTime = date2.getTime() - date1.getTime();\\n            const diffInDays = Math.round(diffInTime / oneDay);\\n            return diffInDays ? diffInDays : 0;\\n        },\\n        totalQty() {\\n            return (\\n                this.model.total -\\n                this.expenses?.reduce((total, item) => {\\n                    return total + Number(item.amount);\\n                }, 0)\\n            );\\n        },\\n    },\\n    methods: {\\n        findSpecialAtribute(res) {\\n            if (res == \\\"new\\\") {\\n                let action = document\\n                    .querySelector(\\\"form#render\\\")\\n                    .getAttribute(\\\"action\\\");\\n                let token = document\\n                    .querySelector('meta[name=\\\"csrf-token\\\"')\\n                    .getAttribute(\\\"content\\\");\\n\\n                let item = { amount: 0, uuid: Util.uuid(), media: [] };\\n                this.$http\\n                    .post(\\\"/api/addClientExpense/\\\" + this.model.id, item, {\\n                        \\\"Content-Type\\\": \\\"multipart/form-data\\\",\\n                        \\\"X-CSRF-TOKEN\\\": token,\\n                    })\\n                    .then(async (response) => {\\n                        item.id = response.data.expense.id;\\n\\n                        this.expenses.push(item);\\n                    })\\n                    .catch((e) => {\\n                        this.$toast.error(e.response.statusText, {\\n                            position: \\\"top-right\\\",\\n                            duration: 7000,\\n                        });\\n                    });\\n\\n                return;\\n            }\\n        },\\n\\n        removeRequest(model, setting, callback, isReserve = null) {\\n            let isNew = isReserve ? model.id : model.id;\\n\\n            if (!isNew) {\\n                return callback();\\n            }\\n\\n            let token = document\\n                .querySelector('meta[name=\\\"csrf-token\\\"')\\n                .getAttribute(\\\"content\\\");\\n\\n            return this.$http\\n                .delete(\\n                    \\\"/api/deleteClientExpense/\\\" + model.id,\\n\\n                    {\\n                        \\\"Content-Type\\\": \\\"application/json\\\",\\n                        \\\"X-CSRF-TOKEN\\\": token,\\n                    }\\n                )\\n                .then(async (response) => {\\n                    if (response.data.success == true) {\\n                        callback();\\n                    } else {\\n                        response.data.errs.map((item) =>\\n                            this.$toast.error(item, {\\n                                position: \\\"top-right\\\",\\n                                duration: 7000,\\n                            })\\n                        );\\n                    }\\n                })\\n                .catch((e) => {\\n                    if (e.response)\\n                        this.$toast.error(e.response.statusText, {\\n                            position: \\\"top-right\\\",\\n                            duration: 7000,\\n                        });\\n                });\\n        },\\n\\n        remove(e, model, isReserve) {\\n            e.preventDefault();\\n            return Util.useSwall2(model).then((result) => {\\n                if (result.isConfirmed) {\\n                    this.removeRequest(\\n                        model || null,\\n                        this.setting,\\n                        () => {\\n                            if (!isReserve) {\\n                                let index = this.model.expenses.findIndex(\\n                                    (i) => i.uuid == model.uuid\\n                                );\\n                                this.model.expenses.splice(index, 1);\\n                            }\\n\\n                            Swal.fire(\\n                                \\\"წაშლა!\\\",\\n                                \\\"წაშლა შესრრულდა წარმატებით.\\\",\\n                                \\\"success\\\"\\n                            ).then(() => {\\n                                if (isReserve) {\\n                                    window.location.replace(\\n                                        this.setting.url.request.index.replace(\\n                                            \\\"api/\\\",\\n                                            \\\"\\\"\\n                                        )\\n                                    );\\n                                }\\n                            });\\n                        },\\n                        isReserve\\n                    );\\n                }\\n            });\\n        },\\n\\n        try_exit(res, selector) {\\n            this.showModal = false;\\n        },\\n\\n        setter(name) {\\n            this.selectBuilder = [{ selected: \\\"\\\", res: this.additional[name] }];\\n            this.selector = name;\\n            this.showModal = true;\\n        },\\n        inputFilter(newFile, oldFile, prevent) {\\n            if (newFile && !oldFile) {\\n                if (\\n                    /(\\\\/|^)(Thumbs\\\\.db|desktop\\\\.ini|\\\\..+)$/.test(newFile.name)\\n                ) {\\n                    return prevent();\\n                }\\n                if (/\\\\.(php5?|html?|jsx?)$/i.test(newFile.name)) {\\n                    return prevent();\\n                }\\n            }\\n        },\\n\\n        send(e) {\\n            e.preventDefault();\\n\\n            let action = document\\n                .querySelector(\\\"form#render\\\")\\n                .getAttribute(\\\"action\\\");\\n            let token = document\\n                .querySelector('meta[name=\\\"csrf-token\\\"')\\n                .getAttribute(\\\"content\\\");\\n\\n            this.$http\\n                .post(action, this.model, {\\n                    \\\"Content-Type\\\": \\\"multipart/form-data\\\",\\n                    \\\"X-CSRF-TOKEN\\\": token,\\n                })\\n                .then(async (response) => {\\n                    Util.useSwall(response).then((result) => {\\n                        if (result.value) {\\n                            window.location.replace(\\n                                this.setting.url.request.index.replace(\\n                                    \\\"api/\\\",\\n                                    \\\"\\\"\\n                                )\\n                            );\\n                        } else if (\\n                            this.model.id == null &&\\n                            response.data.success == true\\n                        ) {\\n                            window.location.replace(\\n                                window.location.href.replace(\\n                                    \\\"new\\\",\\n                                    response.data.result.id\\n                                )\\n                            );\\n                        }\\n\\n                        if (!response.data.success) {\\n                            if (response.data.errs)\\n                                response.data.errs.map((item) =>\\n                                    this.$toast.error(item, {\\n                                        position: \\\"top-right\\\",\\n                                        duration: 7000,\\n                                    })\\n                                );\\n                        }\\n                    });\\n                })\\n                .catch((e) => {\\n                    this.$toast.error(e.response.statusText, {\\n                        position: \\\"top-right\\\",\\n                        duration: 7000,\\n                    });\\n                });\\n\\n            return false;\\n        },\\n\\n        try_focus() {\\n            this.step = true;\\n        },\\n\\n        try_blur() {\\n            this.step = false;\\n        },\\n\\n        exit() {\\n            return (window.location.href =\\n                this.setting.url.request.index.replace(\\\"api/\\\", \\\"\\\"));\\n        },\\n    },\\n};\\n</script>\\n\\n<style>\\ntable tr > td,\\ntable tr > th {\\n    vertical-align: middle;\\n}\\n\\n.table thead th {\\n    vertical-align: middle;\\n    padding: 3px;\\n    background: gray;\\n    border: 1px solid white;\\n    text-align: center;\\n}\\n\\n.table td {\\n    cursor: move;\\n}\\n\\n.table td,\\n.table th {\\n    vertical-align: middle;\\n    padding: 3px;\\n}\\n\\n.table td input,\\n.table th input {\\n    padding: 3px;\\n}\\n\\n.calculator {\\n    color: black;\\n}\\n\\ntable.table-striped {\\n    /*border-top-color: #000; \\n  border-top-width: 1; \\n  border-top-style: solid;*/\\n    border: 3px solid gray;\\n}\\n\\ntable.table-striped tr.calculator {\\n    background-color: #fff;\\n\\n    border-bottom-color: #000;\\n    border-bottom-width: 1;\\n    border-bottom-style: solid;\\n\\n    border-top-color: #000;\\n    border-top-width: 1;\\n    border-top-style: solid;\\n}\\n\\ntable {\\n    border-collapse: collapse;\\n    width: 100%;\\n}\\n</style>\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/css-loader/dist/cjs.js??clonedRuleSet-11.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-11.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css\n");

/***/ }),

/***/ "./node_modules/sortablejs/modular/sortable.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/sortablejs/modular/sortable.esm.js ***!
  \*********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MultiDrag: () => (/* binding */ MultiDragPlugin),\n/* harmony export */   Sortable: () => (/* binding */ Sortable),\n/* harmony export */   Swap: () => (/* binding */ SwapPlugin),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* provided dependency */ var __webpack_provided_window_dot_jQuery = __webpack_require__(/*! jquery */ \"./node_modules/jquery/dist/jquery.js\");\n/**!\n * Sortable 1.14.0\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar version = \"1.14.0\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\n  }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\n * Returns the \"bounding client rect\" of given element\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\n * @param  {[HTMLElement]} container              The parent the element will be placed in\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\n * Checks if a side of an element is scrolled past a side of its parents\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\n * and non-draggable elements\n * @param  {HTMLElement} el       The parent element\n * @param  {Number} childNum      The index of the child\n * @param  {Object} options       Parent Sortable's options\n * @return {HTMLElement}          The child at index childNum, or null if not found\n */\n\n\nfunction getChild(el, childNum, options, includeDragEl) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\n * @param  {HTMLElement} el       Parent element\n * @param  {selector} selector    Any other elements that should be ignored\n * @return {HTMLElement}          The last child, ignoring ghostEl\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\n * Returns the index of an element within its parent for a selected set of\n * elements\n * @param  {HTMLElement} el\n * @param  {selector} selector\n * @return {number}\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\n * The value is returned in real pixels.\n * @param  {HTMLElement} el\n * @return {Array}             Offsets in the format of [left, top]\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\n * Returns the index of the object within the given array\n * @param  {Array} arr   Array that may or may not hold the object\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\n * @return {Number}      The index of the object in the array, or -1\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = __webpack_provided_window_dot_jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = _this.options.animation;\n          }\n\n          _this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        this.forRepaintDummy = repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n\n    plugins.forEach(function (p) {\n      if (p.pluginName === plugin.pluginName) {\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\n      }\n    });\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n\n    this.eventCanceled = false;\n\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread2({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\n\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar _excluded = [\"evt\"];\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, _excluded);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread2({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  if (!documentExists) return; // false when <= IE11\n\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n * @param  {Number} x      X position\n * @param  {Number} y      Y position\n * @return {HTMLElement}   Element of the first found nearest Sortable\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  var ret;\n  sortables.some(function (sortable) {\n    var threshold = sortable[expando].options.emptyInsertThreshold;\n    if (!threshold || lastChild(sortable)) return;\n    var rect = getRect(sortable),\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (insideHorizontally && insideVertically) {\n      return ret = sortable;\n    }\n  });\n  return ret;\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    } // Safari ignores further event handling after mousedown\n\n\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread2({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // Insert to end of list\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // if there is a last element, it is the target\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\n        // Insert to start of list\n        var firstChild = getChild(el, 0, options, true);\n\n        if (firstChild === dragEl) {\n          return completed(false);\n        }\n\n        target = firstChild;\n        targetRect = getRect(target);\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\n          capture();\n          el.insertBefore(dragEl, firstChild);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    css(dragEl, 'transform', '');\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function sort(order, useAnimation) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    useAnimation && this.captureAnimationState();\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n    useAnimation && this.animateAll();\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsFirst(evt, vertical, sortable) {\n  var rect = getRect(getChild(sortable.el, 0, sortable.options, true));\n  var spacer = 10;\n  return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      forceAutoScrollFallback: false,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed,\n          cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n          options = this.options;\n\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\nmultiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\nfolding = false,\n    // Folding any other time\ndragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, 'pointerup', this._deselectMultiDrag);\n    } else {\n      on(document, 'mouseup', this._deselectMultiDrag);\n      on(document, 'touchend', this._deselectMultiDrag);\n    }\n\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n          cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\n          cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl,\n          cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n\n      var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden,\n          cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      }); // Sort multi-drag elements\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n          completed = _ref8.completed,\n          cancel = _ref8.cancel;\n\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n      var options = this.options;\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n          children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvt: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          });\n        }\n      } // Multi-drag drop\n\n\n      if (dragStarted && this.isMultiDrag) {\n        folding = false; // Do not \"unfold\" after around dragEl if reverted\n\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n\n              multiDragIndex++;\n            }); // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvt: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\n       * Selects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be selected\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n\n          multiDragSortable = sortable;\n        }\n\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n\n      /**\n       * Deselects the provided multi-drag item\n       * @param  {HTMLElement} el    The element to be deselected\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n\n      var oldIndicies = [],\n          newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n\n        return key;\n      }\n    }\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n/**\n * Insert multi-drag clones\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\n * @param  {HTMLElement} rootEl\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nSortable.mount(new AutoScrollPlugin());\nSortable.mount(Remove, Revert);\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Sortable);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sortablejs/modular/sortable.esm.js\n");

/***/ }),

/***/ "./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-11.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-11.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css":
/*!***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-11.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-11.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css ***!
  \***********************************************************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_clonedRuleSet_11_use_1_node_modules_vue_loader_dist_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_11_use_2_node_modules_vue_loader_dist_index_js_ruleSet_0_use_0_Client_View_vue_vue_type_style_index_0_id_6406f2a0_lang_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-11.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-11.use[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css */ \"./node_modules/css-loader/dist/cjs.js??clonedRuleSet-11.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-11.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_clonedRuleSet_11_use_1_node_modules_vue_loader_dist_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_11_use_2_node_modules_vue_loader_dist_index_js_ruleSet_0_use_0_Client_View_vue_vue_type_style_index_0_id_6406f2a0_lang_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"], options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_clonedRuleSet_11_use_1_node_modules_vue_loader_dist_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_11_use_2_node_modules_vue_loader_dist_index_js_ruleSet_0_use_0_Client_View_vue_vue_type_style_index_0_id_6406f2a0_lang_css__WEBPACK_IMPORTED_MODULE_1__[\"default\"].locals || {});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanM/P2Nsb25lZFJ1bGVTZXQtMTEudXNlWzFdIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9zdHlsZVBvc3RMb2FkZXIuanMhLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvZGlzdC9janMuanM/P2Nsb25lZFJ1bGVTZXQtMTEudXNlWzJdIS4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9pbmRleC5qcz8/cnVsZVNldFswXS51c2VbMF0hLi9yZXNvdXJjZXMvanMvYXBwL3BhZ2VzL0NsaWVudC1WaWV3LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTY0MDZmMmEwJmxhbmc9Y3NzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0c7QUFDbEcsWUFBeVg7O0FBRXpYOztBQUVBO0FBQ0E7O0FBRUEsYUFBYSwwR0FBRyxDQUFDLG9VQUFPOzs7O0FBSXhCLGlFQUFlLG9VQUFPLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvYXBwL3BhZ2VzL0NsaWVudC1WaWV3LnZ1ZT8yZDJmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcGkgZnJvbSBcIiEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzPz9jbG9uZWRSdWxlU2V0LTExLnVzZVsxXSEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9kaXN0L3N0eWxlUG9zdExvYWRlci5qcyEuLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvZGlzdC9janMuanM/P2Nsb25lZFJ1bGVTZXQtMTEudXNlWzJdIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3J1bGVTZXRbMF0udXNlWzBdIS4vQ2xpZW50LVZpZXcudnVlP3Z1ZSZ0eXBlPXN0eWxlJmluZGV4PTAmaWQ9NjQwNmYyYTAmbGFuZz1jc3NcIjtcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBcImhlYWRcIjtcbm9wdGlvbnMuc2luZ2xldG9uID0gZmFsc2U7XG5cbnZhciB1cGRhdGUgPSBhcGkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgZGVmYXVsdCBjb250ZW50LmxvY2FscyB8fCB7fTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-11.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-11.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css\n");

/***/ }),

/***/ "./resources/js/app/pages/Client-View.vue":
/*!************************************************!*\
  !*** ./resources/js/app/pages/Client-View.vue ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _Client_View_vue_vue_type_template_id_6406f2a0__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Client-View.vue?vue&type=template&id=6406f2a0 */ \"./resources/js/app/pages/Client-View.vue?vue&type=template&id=6406f2a0\");\n/* harmony import */ var _Client_View_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Client-View.vue?vue&type=script&lang=js */ \"./resources/js/app/pages/Client-View.vue?vue&type=script&lang=js\");\n/* harmony import */ var _Client_View_vue_vue_type_style_index_0_id_6406f2a0_lang_css__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css */ \"./resources/js/app/pages/Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css\");\n/* harmony import */ var _node_modules_vue_loader_dist_exportHelper_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../../node_modules/vue-loader/dist/exportHelper.js */ \"./node_modules/vue-loader/dist/exportHelper.js\");\n\n\n\n\n;\n\n\nconst __exports__ = /*#__PURE__*/(0,_node_modules_vue_loader_dist_exportHelper_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(_Client_View_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"], [['render',_Client_View_vue_vue_type_template_id_6406f2a0__WEBPACK_IMPORTED_MODULE_0__.render],['__file',\"resources/js/app/pages/Client-View.vue\"]])\n/* hot reload */\nif (false) {}\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (__exports__);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwL3BhZ2VzL0NsaWVudC1WaWV3LnZ1ZSIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUF3RTtBQUNWO0FBQ0w7O0FBRXpELENBQXNFOztBQUVnQjtBQUN0RixpQ0FBaUMseUZBQWUsQ0FBQyxnRkFBTSxhQUFhLGtGQUFNO0FBQzFFO0FBQ0EsSUFBSSxLQUFVLEVBQUUsRUFZZjs7O0FBR0QsaUVBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvYXBwL3BhZ2VzL0NsaWVudC1WaWV3LnZ1ZT9mYzNkIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciB9IGZyb20gXCIuL0NsaWVudC1WaWV3LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02NDA2ZjJhMFwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL0NsaWVudC1WaWV3LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qc1wiXG5leHBvcnQgKiBmcm9tIFwiLi9DbGllbnQtVmlldy52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anNcIlxuXG5pbXBvcnQgXCIuL0NsaWVudC1WaWV3LnZ1ZT92dWUmdHlwZT1zdHlsZSZpbmRleD0wJmlkPTY0MDZmMmEwJmxhbmc9Y3NzXCJcblxuaW1wb3J0IGV4cG9ydENvbXBvbmVudCBmcm9tIFwiLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9leHBvcnRIZWxwZXIuanNcIlxuY29uc3QgX19leHBvcnRzX18gPSAvKiNfX1BVUkVfXyovZXhwb3J0Q29tcG9uZW50KHNjcmlwdCwgW1sncmVuZGVyJyxyZW5kZXJdLFsnX19maWxlJyxcInJlc291cmNlcy9qcy9hcHAvcGFnZXMvQ2xpZW50LVZpZXcudnVlXCJdXSlcbi8qIGhvdCByZWxvYWQgKi9cbmlmIChtb2R1bGUuaG90KSB7XG4gIF9fZXhwb3J0c19fLl9faG1ySWQgPSBcIjY0MDZmMmEwXCJcbiAgY29uc3QgYXBpID0gX19WVUVfSE1SX1JVTlRJTUVfX1xuICBtb2R1bGUuaG90LmFjY2VwdCgpXG4gIGlmICghYXBpLmNyZWF0ZVJlY29yZCgnNjQwNmYyYTAnLCBfX2V4cG9ydHNfXykpIHtcbiAgICBhcGkucmVsb2FkKCc2NDA2ZjJhMCcsIF9fZXhwb3J0c19fKVxuICB9XG4gIFxuICBtb2R1bGUuaG90LmFjY2VwdChcIi4vQ2xpZW50LVZpZXcudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTY0MDZmMmEwXCIsICgpID0+IHtcbiAgICBhcGkucmVyZW5kZXIoJzY0MDZmMmEwJywgcmVuZGVyKVxuICB9KVxuXG59XG5cblxuZXhwb3J0IGRlZmF1bHQgX19leHBvcnRzX18iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/app/pages/Client-View.vue\n");

/***/ }),

/***/ "./resources/js/app/pages/Client-View.vue?vue&type=script&lang=js":
/*!************************************************************************!*\
  !*** ./resources/js/app/pages/Client-View.vue?vue&type=script&lang=js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* reexport safe */ _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_use_0_node_modules_vue_loader_dist_index_js_ruleSet_0_use_0_Client_View_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])\n/* harmony export */ });\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_use_0_node_modules_vue_loader_dist_index_js_ruleSet_0_use_0_Client_View_vue_vue_type_script_lang_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Client-View.vue?vue&type=script&lang=js */ \"./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=script&lang=js\");\n //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwL3BhZ2VzL0NsaWVudC1WaWV3LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFzTiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9hcHAvcGFnZXMvQ2xpZW50LVZpZXcudnVlPzBkNGUiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgZGVmYXVsdCB9IGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9jbG9uZWRSdWxlU2V0LTUudXNlWzBdIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3J1bGVTZXRbMF0udXNlWzBdIS4vQ2xpZW50LVZpZXcudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCI7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9jbG9uZWRSdWxlU2V0LTUudXNlWzBdIS4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2Rpc3QvaW5kZXguanM/P3J1bGVTZXRbMF0udXNlWzBdIS4vQ2xpZW50LVZpZXcudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzXCIiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/app/pages/Client-View.vue?vue&type=script&lang=js\n");

/***/ }),

/***/ "./resources/js/app/pages/Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css":
/*!********************************************************************************************!*\
  !*** ./resources/js/app/pages/Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css ***!
  \********************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _node_modules_style_loader_dist_cjs_js_node_modules_css_loader_dist_cjs_js_clonedRuleSet_11_use_1_node_modules_vue_loader_dist_stylePostLoader_js_node_modules_postcss_loader_dist_cjs_js_clonedRuleSet_11_use_2_node_modules_vue_loader_dist_index_js_ruleSet_0_use_0_Client_View_vue_vue_type_style_index_0_id_6406f2a0_lang_css__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/style-loader/dist/cjs.js!../../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-11.use[1]!../../../../node_modules/vue-loader/dist/stylePostLoader.js!../../../../node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-11.use[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css */ "./node_modules/style-loader/dist/cjs.js!./node_modules/css-loader/dist/cjs.js??clonedRuleSet-11.use[1]!./node_modules/vue-loader/dist/stylePostLoader.js!./node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-11.use[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=style&index=0&id=6406f2a0&lang=css");


/***/ }),

/***/ "./resources/js/app/pages/Client-View.vue?vue&type=template&id=6406f2a0":
/*!******************************************************************************!*\
  !*** ./resources/js/app/pages/Client-View.vue?vue&type=template&id=6406f2a0 ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   render: () => (/* reexport safe */ _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_use_0_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_dist_index_js_ruleSet_0_use_0_Client_View_vue_vue_type_template_id_6406f2a0__WEBPACK_IMPORTED_MODULE_0__.render)
/* harmony export */ });
/* harmony import */ var _node_modules_babel_loader_lib_index_js_clonedRuleSet_5_use_0_node_modules_vue_loader_dist_templateLoader_js_ruleSet_1_rules_2_node_modules_vue_loader_dist_index_js_ruleSet_0_use_0_Client_View_vue_vue_type_template_id_6406f2a0__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!../../../../node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!../../../../node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./Client-View.vue?vue&type=template&id=6406f2a0 */ "./node_modules/babel-loader/lib/index.js??clonedRuleSet-5.use[0]!./node_modules/vue-loader/dist/templateLoader.js??ruleSet[1].rules[2]!./node_modules/vue-loader/dist/index.js??ruleSet[0].use[0]!./resources/js/app/pages/Client-View.vue?vue&type=template&id=6406f2a0");


/***/ }),

/***/ "./resources/js/app/vendors/vuedraggable/src/core/componentBuilderHelper.js":
/*!**********************************************************************************!*\
  !*** ./resources/js/app/vendors/vuedraggable/src/core/componentBuilderHelper.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createSortableOption: () => (/* binding */ createSortableOption),\n/* harmony export */   getComponentAttributes: () => (/* binding */ getComponentAttributes),\n/* harmony export */   getValidSortableEntries: () => (/* binding */ getValidSortableEntries)\n/* harmony export */ });\n/* harmony import */ var _util_string__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../util/string */ \"./resources/js/app/vendors/vuedraggable/src/util/string.js\");\n/* harmony import */ var _sortableEvents__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./sortableEvents */ \"./resources/js/app/vendors/vuedraggable/src/core/sortableEvents.js\");\n/* harmony import */ var _util_tags__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../util/tags */ \"./resources/js/app/vendors/vuedraggable/src/util/tags.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\n\nfunction project(entries) {\n  return entries.reduce(function (res, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      key = _ref2[0],\n      value = _ref2[1];\n    res[key] = value;\n    return res;\n  }, {});\n}\nfunction getComponentAttributes(_ref3) {\n  var $attrs = _ref3.$attrs,\n    _ref3$componentData = _ref3.componentData,\n    componentData = _ref3$componentData === void 0 ? {} : _ref3$componentData;\n  var attributes = project(Object.entries($attrs).filter(function (_ref4) {\n    var _ref5 = _slicedToArray(_ref4, 2),\n      key = _ref5[0],\n      _ = _ref5[1];\n    return (0,_util_tags__WEBPACK_IMPORTED_MODULE_2__.isHtmlAttribute)(key);\n  }));\n  return _objectSpread(_objectSpread({}, attributes), componentData);\n}\nfunction createSortableOption(_ref6) {\n  var $attrs = _ref6.$attrs,\n    callBackBuilder = _ref6.callBackBuilder;\n  var options = project(getValidSortableEntries($attrs));\n  Object.entries(callBackBuilder).forEach(function (_ref7) {\n    var _ref8 = _slicedToArray(_ref7, 2),\n      eventType = _ref8[0],\n      eventBuilder = _ref8[1];\n    _sortableEvents__WEBPACK_IMPORTED_MODULE_1__.events[eventType].forEach(function (event) {\n      options[\"on\".concat(event)] = eventBuilder(event);\n    });\n  });\n  var draggable = \"[data-draggable]\".concat(options.draggable || \"\");\n  return _objectSpread(_objectSpread({}, options), {}, {\n    draggable: draggable\n  });\n}\nfunction getValidSortableEntries(value) {\n  return Object.entries(value).filter(function (_ref9) {\n    var _ref0 = _slicedToArray(_ref9, 2),\n      key = _ref0[0],\n      _ = _ref0[1];\n    return !(0,_util_tags__WEBPACK_IMPORTED_MODULE_2__.isHtmlAttribute)(key);\n  }).map(function (_ref1) {\n    var _ref10 = _slicedToArray(_ref1, 2),\n      key = _ref10[0],\n      value = _ref10[1];\n    return [(0,_util_string__WEBPACK_IMPORTED_MODULE_0__.camelize)(key), value];\n  }).filter(function (_ref11) {\n    var _ref12 = _slicedToArray(_ref11, 2),\n      key = _ref12[0],\n      _ = _ref12[1];\n    return !(0,_sortableEvents__WEBPACK_IMPORTED_MODULE_1__.isReadOnly)(key);\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwL3ZlbmRvcnMvdnVlZHJhZ2dhYmxlL3NyYy9jb3JlL2NvbXBvbmVudEJ1aWxkZXJIZWxwZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTBDO0FBQ1k7QUFDUDtBQUUvQyxTQUFTSSxPQUFPQSxDQUFDQyxPQUFPLEVBQUU7RUFDeEIsT0FBT0EsT0FBTyxDQUFDQyxNQUFNLENBQUMsVUFBQ0MsR0FBRyxFQUFBQyxJQUFBLEVBQW1CO0lBQUEsSUFBQUMsS0FBQSxHQUFBQyxjQUFBLENBQUFGLElBQUE7TUFBaEJHLEdBQUcsR0FBQUYsS0FBQTtNQUFFRyxLQUFLLEdBQUFILEtBQUE7SUFDckNGLEdBQUcsQ0FBQ0ksR0FBRyxDQUFDLEdBQUdDLEtBQUs7SUFDaEIsT0FBT0wsR0FBRztFQUNaLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztBQUNSO0FBRUEsU0FBU00sc0JBQXNCQSxDQUFBQyxLQUFBLEVBQWlDO0VBQUEsSUFBOUJDLE1BQU0sR0FBQUQsS0FBQSxDQUFOQyxNQUFNO0lBQUFDLG1CQUFBLEdBQUFGLEtBQUEsQ0FBRUcsYUFBYTtJQUFiQSxhQUFhLEdBQUFELG1CQUFBLGNBQUcsQ0FBQyxDQUFDLEdBQUFBLG1CQUFBO0VBQzFELElBQU1FLFVBQVUsR0FBR2QsT0FBTyxDQUN4QmUsTUFBTSxDQUFDZCxPQUFPLENBQUNVLE1BQU0sQ0FBQyxDQUFDSyxNQUFNLENBQUMsVUFBQUMsS0FBQTtJQUFBLElBQUFDLEtBQUEsR0FBQVosY0FBQSxDQUFBVyxLQUFBO01BQUVWLEdBQUcsR0FBQVcsS0FBQTtNQUFFQyxDQUFDLEdBQUFELEtBQUE7SUFBQSxPQUFNbkIsMkRBQWUsQ0FBQ1EsR0FBRyxDQUFDO0VBQUEsRUFDbEUsQ0FBQztFQUNELE9BQUFhLGFBQUEsQ0FBQUEsYUFBQSxLQUNLTixVQUFVLEdBQ1ZELGFBQWE7QUFFcEI7QUFFQSxTQUFTUSxvQkFBb0JBLENBQUFDLEtBQUEsRUFBOEI7RUFBQSxJQUEzQlgsTUFBTSxHQUFBVyxLQUFBLENBQU5YLE1BQU07SUFBRVksZUFBZSxHQUFBRCxLQUFBLENBQWZDLGVBQWU7RUFDckQsSUFBTUMsT0FBTyxHQUFHeEIsT0FBTyxDQUFDeUIsdUJBQXVCLENBQUNkLE1BQU0sQ0FBQyxDQUFDO0VBQ3hESSxNQUFNLENBQUNkLE9BQU8sQ0FBQ3NCLGVBQWUsQ0FBQyxDQUFDRyxPQUFPLENBQUMsVUFBQUMsS0FBQSxFQUErQjtJQUFBLElBQUFDLEtBQUEsR0FBQXRCLGNBQUEsQ0FBQXFCLEtBQUE7TUFBN0JFLFNBQVMsR0FBQUQsS0FBQTtNQUFFRSxZQUFZLEdBQUFGLEtBQUE7SUFDL0QvQixtREFBTSxDQUFDZ0MsU0FBUyxDQUFDLENBQUNILE9BQU8sQ0FBQyxVQUFBSyxLQUFLLEVBQUk7TUFDakNQLE9BQU8sTUFBQVEsTUFBQSxDQUFNRCxLQUFLLEVBQUcsR0FBR0QsWUFBWSxDQUFDQyxLQUFLLENBQUM7SUFDN0MsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDO0VBQ0YsSUFBTUUsU0FBUyxzQkFBQUQsTUFBQSxDQUFzQlIsT0FBTyxDQUFDUyxTQUFTLElBQUksRUFBRSxDQUFFO0VBQzlELE9BQUFiLGFBQUEsQ0FBQUEsYUFBQSxLQUNLSSxPQUFPO0lBQ1ZTLFNBQVMsRUFBVEE7RUFBUztBQUViO0FBRUEsU0FBU1IsdUJBQXVCQSxDQUFDakIsS0FBSyxFQUFFO0VBQ3RDLE9BQU9PLE1BQU0sQ0FBQ2QsT0FBTyxDQUFDTyxLQUFLLENBQUMsQ0FDekJRLE1BQU0sQ0FBQyxVQUFBa0IsS0FBQTtJQUFBLElBQUFDLEtBQUEsR0FBQTdCLGNBQUEsQ0FBQTRCLEtBQUE7TUFBRTNCLEdBQUcsR0FBQTRCLEtBQUE7TUFBRWhCLENBQUMsR0FBQWdCLEtBQUE7SUFBQSxPQUFNLENBQUNwQywyREFBZSxDQUFDUSxHQUFHLENBQUM7RUFBQSxFQUFDLENBQzNDNkIsR0FBRyxDQUFDLFVBQUFDLEtBQUE7SUFBQSxJQUFBQyxNQUFBLEdBQUFoQyxjQUFBLENBQUErQixLQUFBO01BQUU5QixHQUFHLEdBQUErQixNQUFBO01BQUU5QixLQUFLLEdBQUE4QixNQUFBO0lBQUEsT0FBTSxDQUFDMUMsc0RBQVEsQ0FBQ1csR0FBRyxDQUFDLEVBQUVDLEtBQUssQ0FBQztFQUFBLEVBQUMsQ0FDN0NRLE1BQU0sQ0FBQyxVQUFBdUIsTUFBQTtJQUFBLElBQUFDLE1BQUEsR0FBQWxDLGNBQUEsQ0FBQWlDLE1BQUE7TUFBRWhDLEdBQUcsR0FBQWlDLE1BQUE7TUFBRXJCLENBQUMsR0FBQXFCLE1BQUE7SUFBQSxPQUFNLENBQUMxQywyREFBVSxDQUFDUyxHQUFHLENBQUM7RUFBQSxFQUFDO0FBQzNDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2FwcC92ZW5kb3JzL3Z1ZWRyYWdnYWJsZS9zcmMvY29yZS9jb21wb25lbnRCdWlsZGVySGVscGVyLmpzPzAzODUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY2FtZWxpemUgfSBmcm9tIFwiLi4vdXRpbC9zdHJpbmdcIjtcbmltcG9ydCB7IGV2ZW50cywgaXNSZWFkT25seSB9IGZyb20gXCIuL3NvcnRhYmxlRXZlbnRzXCI7XG5pbXBvcnQgeyBpc0h0bWxBdHRyaWJ1dGUgfSBmcm9tIFwiLi4vdXRpbC90YWdzXCI7XG5cbmZ1bmN0aW9uIHByb2plY3QoZW50cmllcykge1xuICByZXR1cm4gZW50cmllcy5yZWR1Y2UoKHJlcywgW2tleSwgdmFsdWVdKSA9PiB7XG4gICAgcmVzW2tleV0gPSB2YWx1ZTtcbiAgICByZXR1cm4gcmVzO1xuICB9LCB7fSk7XG59XG5cbmZ1bmN0aW9uIGdldENvbXBvbmVudEF0dHJpYnV0ZXMoeyAkYXR0cnMsIGNvbXBvbmVudERhdGEgPSB7fSB9KSB7XG4gIGNvbnN0IGF0dHJpYnV0ZXMgPSBwcm9qZWN0KFxuICAgIE9iamVjdC5lbnRyaWVzKCRhdHRycykuZmlsdGVyKChba2V5LCBfXSkgPT4gaXNIdG1sQXR0cmlidXRlKGtleSkpXG4gICk7XG4gIHJldHVybiB7XG4gICAgLi4uYXR0cmlidXRlcyxcbiAgICAuLi5jb21wb25lbnREYXRhXG4gIH07XG59XG5cbmZ1bmN0aW9uIGNyZWF0ZVNvcnRhYmxlT3B0aW9uKHsgJGF0dHJzLCBjYWxsQmFja0J1aWxkZXIgfSkge1xuICBjb25zdCBvcHRpb25zID0gcHJvamVjdChnZXRWYWxpZFNvcnRhYmxlRW50cmllcygkYXR0cnMpKTtcbiAgT2JqZWN0LmVudHJpZXMoY2FsbEJhY2tCdWlsZGVyKS5mb3JFYWNoKChbZXZlbnRUeXBlLCBldmVudEJ1aWxkZXJdKSA9PiB7XG4gICAgZXZlbnRzW2V2ZW50VHlwZV0uZm9yRWFjaChldmVudCA9PiB7XG4gICAgICBvcHRpb25zW2BvbiR7ZXZlbnR9YF0gPSBldmVudEJ1aWxkZXIoZXZlbnQpO1xuICAgIH0pO1xuICB9KTtcbiAgY29uc3QgZHJhZ2dhYmxlID0gYFtkYXRhLWRyYWdnYWJsZV0ke29wdGlvbnMuZHJhZ2dhYmxlIHx8IFwiXCJ9YDtcbiAgcmV0dXJuIHtcbiAgICAuLi5vcHRpb25zLFxuICAgIGRyYWdnYWJsZVxuICB9O1xufVxuXG5mdW5jdGlvbiBnZXRWYWxpZFNvcnRhYmxlRW50cmllcyh2YWx1ZSkge1xuICByZXR1cm4gT2JqZWN0LmVudHJpZXModmFsdWUpXG4gICAgLmZpbHRlcigoW2tleSwgX10pID0+ICFpc0h0bWxBdHRyaWJ1dGUoa2V5KSlcbiAgICAubWFwKChba2V5LCB2YWx1ZV0pID0+IFtjYW1lbGl6ZShrZXkpLCB2YWx1ZV0pXG4gICAgLmZpbHRlcigoW2tleSwgX10pID0+ICFpc1JlYWRPbmx5KGtleSkpO1xufVxuXG5leHBvcnQge1xuICBnZXRDb21wb25lbnRBdHRyaWJ1dGVzLFxuICBjcmVhdGVTb3J0YWJsZU9wdGlvbixcbiAgZ2V0VmFsaWRTb3J0YWJsZUVudHJpZXNcbn07XG4iXSwibmFtZXMiOlsiY2FtZWxpemUiLCJldmVudHMiLCJpc1JlYWRPbmx5IiwiaXNIdG1sQXR0cmlidXRlIiwicHJvamVjdCIsImVudHJpZXMiLCJyZWR1Y2UiLCJyZXMiLCJfcmVmIiwiX3JlZjIiLCJfc2xpY2VkVG9BcnJheSIsImtleSIsInZhbHVlIiwiZ2V0Q29tcG9uZW50QXR0cmlidXRlcyIsIl9yZWYzIiwiJGF0dHJzIiwiX3JlZjMkY29tcG9uZW50RGF0YSIsImNvbXBvbmVudERhdGEiLCJhdHRyaWJ1dGVzIiwiT2JqZWN0IiwiZmlsdGVyIiwiX3JlZjQiLCJfcmVmNSIsIl8iLCJfb2JqZWN0U3ByZWFkIiwiY3JlYXRlU29ydGFibGVPcHRpb24iLCJfcmVmNiIsImNhbGxCYWNrQnVpbGRlciIsIm9wdGlvbnMiLCJnZXRWYWxpZFNvcnRhYmxlRW50cmllcyIsImZvckVhY2giLCJfcmVmNyIsIl9yZWY4IiwiZXZlbnRUeXBlIiwiZXZlbnRCdWlsZGVyIiwiZXZlbnQiLCJjb25jYXQiLCJkcmFnZ2FibGUiLCJfcmVmOSIsIl9yZWYwIiwibWFwIiwiX3JlZjEiLCJfcmVmMTAiLCJfcmVmMTEiLCJfcmVmMTIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/app/vendors/vuedraggable/src/core/componentBuilderHelper.js\n");

/***/ }),

/***/ "./resources/js/app/vendors/vuedraggable/src/core/componentStructure.js":
/*!******************************************************************************!*\
  !*** ./resources/js/app/vendors/vuedraggable/src/core/componentStructure.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ComponentStructure: () => (/* binding */ ComponentStructure)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\"); }\nfunction _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }\nfunction _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", { writable: !1 }), e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar getHtmlElementFromNode = function getHtmlElementFromNode(_ref) {\n  var el = _ref.el;\n  return el;\n};\nvar addContext = function addContext(domElement, context) {\n  return domElement.__draggable_context = context;\n};\nvar getContext = function getContext(domElement) {\n  return domElement.__draggable_context;\n};\nvar ComponentStructure = /*#__PURE__*/function () {\n  function ComponentStructure(_ref2) {\n    var _ref2$nodes = _ref2.nodes,\n      header = _ref2$nodes.header,\n      defaultNodes = _ref2$nodes[\"default\"],\n      footer = _ref2$nodes.footer,\n      root = _ref2.root,\n      realList = _ref2.realList;\n    _classCallCheck(this, ComponentStructure);\n    this.defaultNodes = defaultNodes;\n    this.children = [].concat(_toConsumableArray(header), _toConsumableArray(defaultNodes), _toConsumableArray(footer));\n    this.externalComponent = root.externalComponent;\n    this.rootTransition = root.transition;\n    this.tag = root.tag;\n    this.realList = realList;\n  }\n  return _createClass(ComponentStructure, [{\n    key: \"_isRootComponent\",\n    get: function get() {\n      return this.externalComponent || this.rootTransition;\n    }\n  }, {\n    key: \"render\",\n    value: function render(h, attributes) {\n      var tag = this.tag,\n        children = this.children,\n        _isRootComponent = this._isRootComponent;\n      var option = !_isRootComponent ? children : {\n        \"default\": function _default() {\n          return children;\n        }\n      };\n      return h(tag, attributes, option);\n    }\n  }, {\n    key: \"updated\",\n    value: function updated() {\n      var defaultNodes = this.defaultNodes,\n        realList = this.realList;\n      defaultNodes.forEach(function (node, index) {\n        addContext(getHtmlElementFromNode(node), {\n          element: realList[index],\n          index: index\n        });\n      });\n    }\n  }, {\n    key: \"getUnderlyingVm\",\n    value: function getUnderlyingVm(domElement) {\n      return getContext(domElement);\n    }\n  }, {\n    key: \"getVmIndexFromDomIndex\",\n    value: function getVmIndexFromDomIndex(domIndex, element) {\n      var defaultNodes = this.defaultNodes;\n      var length = defaultNodes.length;\n      var domChildren = element.children;\n      var domElement = domChildren.item(domIndex);\n      if (domElement === null) {\n        return length;\n      }\n      var context = getContext(domElement);\n      if (context) {\n        return context.index;\n      }\n      if (length === 0) {\n        return 0;\n      }\n      var firstDomListElement = getHtmlElementFromNode(defaultNodes[0]);\n      var indexFirstDomListElement = _toConsumableArray(domChildren).findIndex(function (element) {\n        return element === firstDomListElement;\n      });\n      return domIndex < indexFirstDomListElement ? 0 : length;\n    }\n  }]);\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwL3ZlbmRvcnMvdnVlZHJhZ2dhYmxlL3NyYy9jb3JlL2NvbXBvbmVudFN0cnVjdHVyZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7O0FBQUEsSUFBTUEsc0JBQXNCLEdBQUcsU0FBekJBLHNCQUFzQkEsQ0FBQUMsSUFBQTtFQUFBLElBQU1DLEVBQUUsR0FBQUQsSUFBQSxDQUFGQyxFQUFFO0VBQUEsT0FBT0EsRUFBRTtBQUFBO0FBQzdDLElBQU1DLFVBQVUsR0FBRyxTQUFiQSxVQUFVQSxDQUFJQyxVQUFVLEVBQUVDLE9BQU87RUFBQSxPQUNwQ0QsVUFBVSxDQUFDRSxtQkFBbUIsR0FBR0QsT0FBTztBQUFBLENBQUM7QUFDNUMsSUFBTUUsVUFBVSxHQUFHLFNBQWJBLFVBQVVBLENBQUdILFVBQVU7RUFBQSxPQUFJQSxVQUFVLENBQUNFLG1CQUFtQjtBQUFBO0FBQUMsSUFFMURFLGtCQUFrQjtFQUN0QixTQUFBQSxtQkFBQUMsS0FBQSxFQUlHO0lBQUEsSUFBQUMsV0FBQSxHQUFBRCxLQUFBLENBSERFLEtBQUs7TUFBSUMsTUFBTSxHQUFBRixXQUFBLENBQU5FLE1BQU07TUFBV0MsWUFBWSxHQUFBSCxXQUFBO01BQUVJLE1BQU0sR0FBQUosV0FBQSxDQUFOSSxNQUFNO01BQzlDQyxJQUFJLEdBQUFOLEtBQUEsQ0FBSk0sSUFBSTtNQUNKQyxRQUFRLEdBQUFQLEtBQUEsQ0FBUk8sUUFBUTtJQUFBQyxlQUFBLE9BQUFULGtCQUFBO0lBRVIsSUFBSSxDQUFDSyxZQUFZLEdBQUdBLFlBQVk7SUFDaEMsSUFBSSxDQUFDSyxRQUFRLE1BQUFDLE1BQUEsQ0FBQUMsa0JBQUEsQ0FBT1IsTUFBTSxHQUFBUSxrQkFBQSxDQUFLUCxZQUFZLEdBQUFPLGtCQUFBLENBQUtOLE1BQU0sRUFBQztJQUN2RCxJQUFJLENBQUNPLGlCQUFpQixHQUFHTixJQUFJLENBQUNNLGlCQUFpQjtJQUMvQyxJQUFJLENBQUNDLGNBQWMsR0FBR1AsSUFBSSxDQUFDUSxVQUFVO0lBQ3JDLElBQUksQ0FBQ0MsR0FBRyxHQUFHVCxJQUFJLENBQUNTLEdBQUc7SUFDbkIsSUFBSSxDQUFDUixRQUFRLEdBQUdBLFFBQVE7RUFDMUI7RUFBQyxPQUFBUyxZQUFBLENBQUFqQixrQkFBQTtJQUFBa0IsR0FBQTtJQUFBQyxHQUFBLEVBRUQsU0FBQUEsSUFBQSxFQUF1QjtNQUNyQixPQUFPLElBQUksQ0FBQ04saUJBQWlCLElBQUksSUFBSSxDQUFDQyxjQUFjO0lBQ3REO0VBQUM7SUFBQUksR0FBQTtJQUFBRSxLQUFBLEVBRUQsU0FBQUMsTUFBTUEsQ0FBQ0MsQ0FBQyxFQUFFQyxVQUFVLEVBQUU7TUFDcEIsSUFBUVAsR0FBRyxHQUFpQyxJQUFJLENBQXhDQSxHQUFHO1FBQUVOLFFBQVEsR0FBdUIsSUFBSSxDQUFuQ0EsUUFBUTtRQUFFYyxnQkFBZ0IsR0FBSyxJQUFJLENBQXpCQSxnQkFBZ0I7TUFDdkMsSUFBTUMsTUFBTSxHQUFHLENBQUNELGdCQUFnQixHQUFHZCxRQUFRLEdBQUc7UUFBRSxXQUFTLFNBQVRnQixRQUFPQSxDQUFBO1VBQUEsT0FBUWhCLFFBQVE7UUFBQTtNQUFDLENBQUM7TUFDekUsT0FBT1ksQ0FBQyxDQUFDTixHQUFHLEVBQUVPLFVBQVUsRUFBRUUsTUFBTSxDQUFDO0lBQ25DO0VBQUM7SUFBQVAsR0FBQTtJQUFBRSxLQUFBLEVBRUQsU0FBQU8sT0FBT0EsQ0FBQSxFQUFHO01BQ1IsSUFBUXRCLFlBQVksR0FBZSxJQUFJLENBQS9CQSxZQUFZO1FBQUVHLFFBQVEsR0FBSyxJQUFJLENBQWpCQSxRQUFRO01BQzlCSCxZQUFZLENBQUN1QixPQUFPLENBQUMsVUFBQ0MsSUFBSSxFQUFFQyxLQUFLLEVBQUs7UUFDcENuQyxVQUFVLENBQUNILHNCQUFzQixDQUFDcUMsSUFBSSxDQUFDLEVBQUU7VUFDdkNFLE9BQU8sRUFBRXZCLFFBQVEsQ0FBQ3NCLEtBQUssQ0FBQztVQUN4QkEsS0FBSyxFQUFMQTtRQUNGLENBQUMsQ0FBQztNQUNKLENBQUMsQ0FBQztJQUNKO0VBQUM7SUFBQVosR0FBQTtJQUFBRSxLQUFBLEVBRUQsU0FBQVksZUFBZUEsQ0FBQ3BDLFVBQVUsRUFBRTtNQUMxQixPQUFPRyxVQUFVLENBQUNILFVBQVUsQ0FBQztJQUMvQjtFQUFDO0lBQUFzQixHQUFBO0lBQUFFLEtBQUEsRUFFRCxTQUFBYSxzQkFBc0JBLENBQUNDLFFBQVEsRUFBRUgsT0FBTyxFQUFFO01BQ3hDLElBQVExQixZQUFZLEdBQUssSUFBSSxDQUFyQkEsWUFBWTtNQUNwQixJQUFROEIsTUFBTSxHQUFLOUIsWUFBWSxDQUF2QjhCLE1BQU07TUFDZCxJQUFNQyxXQUFXLEdBQUdMLE9BQU8sQ0FBQ3JCLFFBQVE7TUFDcEMsSUFBTWQsVUFBVSxHQUFHd0MsV0FBVyxDQUFDQyxJQUFJLENBQUNILFFBQVEsQ0FBQztNQUU3QyxJQUFJdEMsVUFBVSxLQUFLLElBQUksRUFBRTtRQUN2QixPQUFPdUMsTUFBTTtNQUNmO01BQ0EsSUFBTXRDLE9BQU8sR0FBR0UsVUFBVSxDQUFDSCxVQUFVLENBQUM7TUFDdEMsSUFBSUMsT0FBTyxFQUFFO1FBQ1gsT0FBT0EsT0FBTyxDQUFDaUMsS0FBSztNQUN0QjtNQUVBLElBQUlLLE1BQU0sS0FBSyxDQUFDLEVBQUU7UUFDaEIsT0FBTyxDQUFDO01BQ1Y7TUFDQSxJQUFNRyxtQkFBbUIsR0FBRzlDLHNCQUFzQixDQUFDYSxZQUFZLENBQUMsQ0FBQyxDQUFDLENBQUM7TUFDbkUsSUFBTWtDLHdCQUF3QixHQUFHM0Isa0JBQUEsQ0FBSXdCLFdBQVcsRUFBRUksU0FBUyxDQUN6RCxVQUFBVCxPQUFPO1FBQUEsT0FBSUEsT0FBTyxLQUFLTyxtQkFBbUI7TUFBQSxDQUM1QyxDQUFDO01BQ0QsT0FBT0osUUFBUSxHQUFHSyx3QkFBd0IsR0FBRyxDQUFDLEdBQUdKLE1BQU07SUFDekQ7RUFBQztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2FwcC92ZW5kb3JzL3Z1ZWRyYWdnYWJsZS9zcmMvY29yZS9jb21wb25lbnRTdHJ1Y3R1cmUuanM/YzcwZCJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBnZXRIdG1sRWxlbWVudEZyb21Ob2RlID0gKHsgZWwgfSkgPT4gZWw7XG5jb25zdCBhZGRDb250ZXh0ID0gKGRvbUVsZW1lbnQsIGNvbnRleHQpID0+XG4gIChkb21FbGVtZW50Ll9fZHJhZ2dhYmxlX2NvbnRleHQgPSBjb250ZXh0KTtcbmNvbnN0IGdldENvbnRleHQgPSBkb21FbGVtZW50ID0+IGRvbUVsZW1lbnQuX19kcmFnZ2FibGVfY29udGV4dDtcblxuY2xhc3MgQ29tcG9uZW50U3RydWN0dXJlIHtcbiAgY29uc3RydWN0b3Ioe1xuICAgIG5vZGVzOiB7IGhlYWRlciwgZGVmYXVsdDogZGVmYXVsdE5vZGVzLCBmb290ZXIgfSxcbiAgICByb290LFxuICAgIHJlYWxMaXN0XG4gIH0pIHtcbiAgICB0aGlzLmRlZmF1bHROb2RlcyA9IGRlZmF1bHROb2RlcztcbiAgICB0aGlzLmNoaWxkcmVuID0gWy4uLmhlYWRlciwgLi4uZGVmYXVsdE5vZGVzLCAuLi5mb290ZXJdO1xuICAgIHRoaXMuZXh0ZXJuYWxDb21wb25lbnQgPSByb290LmV4dGVybmFsQ29tcG9uZW50O1xuICAgIHRoaXMucm9vdFRyYW5zaXRpb24gPSByb290LnRyYW5zaXRpb247XG4gICAgdGhpcy50YWcgPSByb290LnRhZztcbiAgICB0aGlzLnJlYWxMaXN0ID0gcmVhbExpc3Q7XG4gIH1cblxuICBnZXQgX2lzUm9vdENvbXBvbmVudCgpIHtcbiAgICByZXR1cm4gdGhpcy5leHRlcm5hbENvbXBvbmVudCB8fCB0aGlzLnJvb3RUcmFuc2l0aW9uO1xuICB9XG5cbiAgcmVuZGVyKGgsIGF0dHJpYnV0ZXMpIHtcbiAgICBjb25zdCB7IHRhZywgY2hpbGRyZW4sIF9pc1Jvb3RDb21wb25lbnQgfSA9IHRoaXM7XG4gICAgY29uc3Qgb3B0aW9uID0gIV9pc1Jvb3RDb21wb25lbnQgPyBjaGlsZHJlbiA6IHsgZGVmYXVsdDogKCkgPT4gY2hpbGRyZW4gfTtcbiAgICByZXR1cm4gaCh0YWcsIGF0dHJpYnV0ZXMsIG9wdGlvbik7XG4gIH1cblxuICB1cGRhdGVkKCkge1xuICAgIGNvbnN0IHsgZGVmYXVsdE5vZGVzLCByZWFsTGlzdCB9ID0gdGhpcztcbiAgICBkZWZhdWx0Tm9kZXMuZm9yRWFjaCgobm9kZSwgaW5kZXgpID0+IHtcbiAgICAgIGFkZENvbnRleHQoZ2V0SHRtbEVsZW1lbnRGcm9tTm9kZShub2RlKSwge1xuICAgICAgICBlbGVtZW50OiByZWFsTGlzdFtpbmRleF0sXG4gICAgICAgIGluZGV4XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfVxuXG4gIGdldFVuZGVybHlpbmdWbShkb21FbGVtZW50KSB7XG4gICAgcmV0dXJuIGdldENvbnRleHQoZG9tRWxlbWVudCk7XG4gIH1cblxuICBnZXRWbUluZGV4RnJvbURvbUluZGV4KGRvbUluZGV4LCBlbGVtZW50KSB7XG4gICAgY29uc3QgeyBkZWZhdWx0Tm9kZXMgfSA9IHRoaXM7XG4gICAgY29uc3QgeyBsZW5ndGggfSA9IGRlZmF1bHROb2RlcztcbiAgICBjb25zdCBkb21DaGlsZHJlbiA9IGVsZW1lbnQuY2hpbGRyZW47XG4gICAgY29uc3QgZG9tRWxlbWVudCA9IGRvbUNoaWxkcmVuLml0ZW0oZG9tSW5kZXgpO1xuXG4gICAgaWYgKGRvbUVsZW1lbnQgPT09IG51bGwpIHtcbiAgICAgIHJldHVybiBsZW5ndGg7XG4gICAgfVxuICAgIGNvbnN0IGNvbnRleHQgPSBnZXRDb250ZXh0KGRvbUVsZW1lbnQpO1xuICAgIGlmIChjb250ZXh0KSB7XG4gICAgICByZXR1cm4gY29udGV4dC5pbmRleDtcbiAgICB9XG5cbiAgICBpZiAobGVuZ3RoID09PSAwKSB7XG4gICAgICByZXR1cm4gMDtcbiAgICB9XG4gICAgY29uc3QgZmlyc3REb21MaXN0RWxlbWVudCA9IGdldEh0bWxFbGVtZW50RnJvbU5vZGUoZGVmYXVsdE5vZGVzWzBdKTtcbiAgICBjb25zdCBpbmRleEZpcnN0RG9tTGlzdEVsZW1lbnQgPSBbLi4uZG9tQ2hpbGRyZW5dLmZpbmRJbmRleChcbiAgICAgIGVsZW1lbnQgPT4gZWxlbWVudCA9PT0gZmlyc3REb21MaXN0RWxlbWVudFxuICAgICk7XG4gICAgcmV0dXJuIGRvbUluZGV4IDwgaW5kZXhGaXJzdERvbUxpc3RFbGVtZW50ID8gMCA6IGxlbmd0aDtcbiAgfVxufVxuXG5leHBvcnQgeyBDb21wb25lbnRTdHJ1Y3R1cmUgfTtcbiJdLCJuYW1lcyI6WyJnZXRIdG1sRWxlbWVudEZyb21Ob2RlIiwiX3JlZiIsImVsIiwiYWRkQ29udGV4dCIsImRvbUVsZW1lbnQiLCJjb250ZXh0IiwiX19kcmFnZ2FibGVfY29udGV4dCIsImdldENvbnRleHQiLCJDb21wb25lbnRTdHJ1Y3R1cmUiLCJfcmVmMiIsIl9yZWYyJG5vZGVzIiwibm9kZXMiLCJoZWFkZXIiLCJkZWZhdWx0Tm9kZXMiLCJmb290ZXIiLCJyb290IiwicmVhbExpc3QiLCJfY2xhc3NDYWxsQ2hlY2siLCJjaGlsZHJlbiIsImNvbmNhdCIsIl90b0NvbnN1bWFibGVBcnJheSIsImV4dGVybmFsQ29tcG9uZW50Iiwicm9vdFRyYW5zaXRpb24iLCJ0cmFuc2l0aW9uIiwidGFnIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwiZ2V0IiwidmFsdWUiLCJyZW5kZXIiLCJoIiwiYXR0cmlidXRlcyIsIl9pc1Jvb3RDb21wb25lbnQiLCJvcHRpb24iLCJkZWZhdWx0IiwidXBkYXRlZCIsImZvckVhY2giLCJub2RlIiwiaW5kZXgiLCJlbGVtZW50IiwiZ2V0VW5kZXJseWluZ1ZtIiwiZ2V0Vm1JbmRleEZyb21Eb21JbmRleCIsImRvbUluZGV4IiwibGVuZ3RoIiwiZG9tQ2hpbGRyZW4iLCJpdGVtIiwiZmlyc3REb21MaXN0RWxlbWVudCIsImluZGV4Rmlyc3REb21MaXN0RWxlbWVudCIsImZpbmRJbmRleCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/app/vendors/vuedraggable/src/core/componentStructure.js\n");

/***/ }),

/***/ "./resources/js/app/vendors/vuedraggable/src/core/renderHelper.js":
/*!************************************************************************!*\
  !*** ./resources/js/app/vendors/vuedraggable/src/core/renderHelper.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   computeComponentStructure: () => (/* binding */ computeComponentStructure)\n/* harmony export */ });\n/* harmony import */ var _componentStructure__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./componentStructure */ \"./resources/js/app/vendors/vuedraggable/src/core/componentStructure.js\");\n/* harmony import */ var _util_tags__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/tags */ \"./resources/js/app/vendors/vuedraggable/src/util/tags.js\");\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm-bundler.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\n\n\n\nfunction getSlot(slots, key) {\n  var slotValue = slots[key];\n  return slotValue ? slotValue() : [];\n}\nfunction computeNodes(_ref) {\n  var $slots = _ref.$slots,\n    realList = _ref.realList,\n    getKey = _ref.getKey;\n  var normalizedList = realList || [];\n  var _map = [\"header\", \"footer\"].map(function (name) {\n      return getSlot($slots, name);\n    }),\n    _map2 = _slicedToArray(_map, 2),\n    header = _map2[0],\n    footer = _map2[1];\n  var item = $slots.item;\n  if (!item) {\n    throw new Error(\"draggable element must have an item slot\");\n  }\n  var defaultNodes = normalizedList.flatMap(function (element, index) {\n    return item({\n      element: element,\n      index: index\n    }).map(function (node) {\n      node.key = getKey(element);\n      node.props = _objectSpread(_objectSpread({}, node.props || {}), {}, {\n        \"data-draggable\": true\n      });\n      return node;\n    });\n  });\n  if (defaultNodes.length !== normalizedList.length) {\n    throw new Error(\"Item slot must have only one child\");\n  }\n  return {\n    header: header,\n    footer: footer,\n    \"default\": defaultNodes\n  };\n}\nfunction getRootInformation(tag) {\n  var transition = (0,_util_tags__WEBPACK_IMPORTED_MODULE_1__.isTransition)(tag);\n  var externalComponent = !(0,_util_tags__WEBPACK_IMPORTED_MODULE_1__.isHtmlTag)(tag) && !transition;\n  return {\n    transition: transition,\n    externalComponent: externalComponent,\n    tag: externalComponent ? (0,vue__WEBPACK_IMPORTED_MODULE_2__.resolveComponent)(tag) : transition ? vue__WEBPACK_IMPORTED_MODULE_2__.TransitionGroup : tag\n  };\n}\nfunction computeComponentStructure(_ref2) {\n  var $slots = _ref2.$slots,\n    tag = _ref2.tag,\n    realList = _ref2.realList,\n    getKey = _ref2.getKey;\n  var nodes = computeNodes({\n    $slots: $slots,\n    realList: realList,\n    getKey: getKey\n  });\n  var root = getRootInformation(tag);\n  return new _componentStructure__WEBPACK_IMPORTED_MODULE_0__.ComponentStructure({\n    nodes: nodes,\n    root: root,\n    realList: realList\n  });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwL3ZlbmRvcnMvdnVlZHJhZ2dhYmxlL3NyYy9jb3JlL3JlbmRlckhlbHBlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQTBEO0FBQ0g7QUFDQztBQUV4RCxTQUFTSyxPQUFPQSxDQUFDQyxLQUFLLEVBQUVDLEdBQUcsRUFBRTtFQUMzQixJQUFNQyxTQUFTLEdBQUdGLEtBQUssQ0FBQ0MsR0FBRyxDQUFDO0VBQzVCLE9BQU9DLFNBQVMsR0FBR0EsU0FBUyxDQUFDLENBQUMsR0FBRyxFQUFFO0FBQ3JDO0FBRUEsU0FBU0MsWUFBWUEsQ0FBQUMsSUFBQSxFQUErQjtFQUFBLElBQTVCQyxNQUFNLEdBQUFELElBQUEsQ0FBTkMsTUFBTTtJQUFFQyxRQUFRLEdBQUFGLElBQUEsQ0FBUkUsUUFBUTtJQUFFQyxNQUFNLEdBQUFILElBQUEsQ0FBTkcsTUFBTTtFQUM5QyxJQUFNQyxjQUFjLEdBQUdGLFFBQVEsSUFBSSxFQUFFO0VBQ3JDLElBQUFHLElBQUEsR0FBeUIsQ0FBQyxRQUFRLEVBQUUsUUFBUSxDQUFDLENBQUNDLEdBQUcsQ0FBQyxVQUFBQyxJQUFJO01BQUEsT0FDcERaLE9BQU8sQ0FBQ00sTUFBTSxFQUFFTSxJQUFJLENBQUM7SUFBQSxDQUN2QixDQUFDO0lBQUFDLEtBQUEsR0FBQUMsY0FBQSxDQUFBSixJQUFBO0lBRk1LLE1BQU0sR0FBQUYsS0FBQTtJQUFFRyxNQUFNLEdBQUFILEtBQUE7RUFHckIsSUFBUUksSUFBSSxHQUFLWCxNQUFNLENBQWZXLElBQUk7RUFDWixJQUFJLENBQUNBLElBQUksRUFBRTtJQUNULE1BQU0sSUFBSUMsS0FBSyxDQUFDLDBDQUEwQyxDQUFDO0VBQzdEO0VBQ0EsSUFBTUMsWUFBWSxHQUFHVixjQUFjLENBQUNXLE9BQU8sQ0FBQyxVQUFDQyxPQUFPLEVBQUVDLEtBQUs7SUFBQSxPQUN6REwsSUFBSSxDQUFDO01BQUVJLE9BQU8sRUFBUEEsT0FBTztNQUFFQyxLQUFLLEVBQUxBO0lBQU0sQ0FBQyxDQUFDLENBQUNYLEdBQUcsQ0FBQyxVQUFBWSxJQUFJLEVBQUk7TUFDbkNBLElBQUksQ0FBQ3JCLEdBQUcsR0FBR00sTUFBTSxDQUFDYSxPQUFPLENBQUM7TUFDMUJFLElBQUksQ0FBQ0MsS0FBSyxHQUFBQyxhQUFBLENBQUFBLGFBQUEsS0FBU0YsSUFBSSxDQUFDQyxLQUFLLElBQUksQ0FBQyxDQUFDO1FBQUcsZ0JBQWdCLEVBQUU7TUFBSSxFQUFFO01BQzlELE9BQU9ELElBQUk7SUFDYixDQUFDLENBQUM7RUFBQSxDQUNKLENBQUM7RUFDRCxJQUFJSixZQUFZLENBQUNPLE1BQU0sS0FBS2pCLGNBQWMsQ0FBQ2lCLE1BQU0sRUFBRTtJQUNqRCxNQUFNLElBQUlSLEtBQUssQ0FBQyxvQ0FBb0MsQ0FBQztFQUN2RDtFQUNBLE9BQU87SUFDTEgsTUFBTSxFQUFOQSxNQUFNO0lBQ05DLE1BQU0sRUFBTkEsTUFBTTtJQUNOLFdBQVNHO0VBQ1gsQ0FBQztBQUNIO0FBRUEsU0FBU1Esa0JBQWtCQSxDQUFDQyxHQUFHLEVBQUU7RUFDL0IsSUFBTUMsVUFBVSxHQUFHaEMsd0RBQVksQ0FBQytCLEdBQUcsQ0FBQztFQUNwQyxJQUFNRSxpQkFBaUIsR0FBRyxDQUFDbEMscURBQVMsQ0FBQ2dDLEdBQUcsQ0FBQyxJQUFJLENBQUNDLFVBQVU7RUFDeEQsT0FBTztJQUNMQSxVQUFVLEVBQVZBLFVBQVU7SUFDVkMsaUJBQWlCLEVBQWpCQSxpQkFBaUI7SUFDakJGLEdBQUcsRUFBRUUsaUJBQWlCLEdBQ2xCaEMscURBQWdCLENBQUM4QixHQUFHLENBQUMsR0FDckJDLFVBQVUsR0FDVjlCLGdEQUFlLEdBQ2Y2QjtFQUNOLENBQUM7QUFDSDtBQUVBLFNBQVNHLHlCQUF5QkEsQ0FBQUMsS0FBQSxFQUFvQztFQUFBLElBQWpDMUIsTUFBTSxHQUFBMEIsS0FBQSxDQUFOMUIsTUFBTTtJQUFFc0IsR0FBRyxHQUFBSSxLQUFBLENBQUhKLEdBQUc7SUFBRXJCLFFBQVEsR0FBQXlCLEtBQUEsQ0FBUnpCLFFBQVE7SUFBRUMsTUFBTSxHQUFBd0IsS0FBQSxDQUFOeEIsTUFBTTtFQUNoRSxJQUFNeUIsS0FBSyxHQUFHN0IsWUFBWSxDQUFDO0lBQUVFLE1BQU0sRUFBTkEsTUFBTTtJQUFFQyxRQUFRLEVBQVJBLFFBQVE7SUFBRUMsTUFBTSxFQUFOQTtFQUFPLENBQUMsQ0FBQztFQUN4RCxJQUFNMEIsSUFBSSxHQUFHUCxrQkFBa0IsQ0FBQ0MsR0FBRyxDQUFDO0VBQ3BDLE9BQU8sSUFBSWpDLG1FQUFrQixDQUFDO0lBQUVzQyxLQUFLLEVBQUxBLEtBQUs7SUFBRUMsSUFBSSxFQUFKQSxJQUFJO0lBQUUzQixRQUFRLEVBQVJBO0VBQVMsQ0FBQyxDQUFDO0FBQzFEIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vcmVzb3VyY2VzL2pzL2FwcC92ZW5kb3JzL3Z1ZWRyYWdnYWJsZS9zcmMvY29yZS9yZW5kZXJIZWxwZXIuanM/YzJkNSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnRTdHJ1Y3R1cmUgfSBmcm9tIFwiLi9jb21wb25lbnRTdHJ1Y3R1cmVcIjtcbmltcG9ydCB7IGlzSHRtbFRhZywgaXNUcmFuc2l0aW9uIH0gZnJvbSBcIi4uL3V0aWwvdGFnc1wiO1xuaW1wb3J0IHsgcmVzb2x2ZUNvbXBvbmVudCwgVHJhbnNpdGlvbkdyb3VwIH0gZnJvbSBcInZ1ZVwiO1xuXG5mdW5jdGlvbiBnZXRTbG90KHNsb3RzLCBrZXkpIHtcbiAgY29uc3Qgc2xvdFZhbHVlID0gc2xvdHNba2V5XTtcbiAgcmV0dXJuIHNsb3RWYWx1ZSA/IHNsb3RWYWx1ZSgpIDogW107XG59XG5cbmZ1bmN0aW9uIGNvbXB1dGVOb2Rlcyh7ICRzbG90cywgcmVhbExpc3QsIGdldEtleSB9KSB7XG4gIGNvbnN0IG5vcm1hbGl6ZWRMaXN0ID0gcmVhbExpc3QgfHwgW107XG4gIGNvbnN0IFtoZWFkZXIsIGZvb3Rlcl0gPSBbXCJoZWFkZXJcIiwgXCJmb290ZXJcIl0ubWFwKG5hbWUgPT5cbiAgICBnZXRTbG90KCRzbG90cywgbmFtZSlcbiAgKTtcbiAgY29uc3QgeyBpdGVtIH0gPSAkc2xvdHM7XG4gIGlmICghaXRlbSkge1xuICAgIHRocm93IG5ldyBFcnJvcihcImRyYWdnYWJsZSBlbGVtZW50IG11c3QgaGF2ZSBhbiBpdGVtIHNsb3RcIik7XG4gIH1cbiAgY29uc3QgZGVmYXVsdE5vZGVzID0gbm9ybWFsaXplZExpc3QuZmxhdE1hcCgoZWxlbWVudCwgaW5kZXgpID0+XG4gICAgaXRlbSh7IGVsZW1lbnQsIGluZGV4IH0pLm1hcChub2RlID0+IHtcbiAgICAgIG5vZGUua2V5ID0gZ2V0S2V5KGVsZW1lbnQpO1xuICAgICAgbm9kZS5wcm9wcyA9IHsgLi4uKG5vZGUucHJvcHMgfHwge30pLCBcImRhdGEtZHJhZ2dhYmxlXCI6IHRydWUgfTtcbiAgICAgIHJldHVybiBub2RlO1xuICAgIH0pXG4gICk7XG4gIGlmIChkZWZhdWx0Tm9kZXMubGVuZ3RoICE9PSBub3JtYWxpemVkTGlzdC5sZW5ndGgpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJJdGVtIHNsb3QgbXVzdCBoYXZlIG9ubHkgb25lIGNoaWxkXCIpO1xuICB9XG4gIHJldHVybiB7XG4gICAgaGVhZGVyLFxuICAgIGZvb3RlcixcbiAgICBkZWZhdWx0OiBkZWZhdWx0Tm9kZXNcbiAgfTtcbn1cblxuZnVuY3Rpb24gZ2V0Um9vdEluZm9ybWF0aW9uKHRhZykge1xuICBjb25zdCB0cmFuc2l0aW9uID0gaXNUcmFuc2l0aW9uKHRhZyk7XG4gIGNvbnN0IGV4dGVybmFsQ29tcG9uZW50ID0gIWlzSHRtbFRhZyh0YWcpICYmICF0cmFuc2l0aW9uO1xuICByZXR1cm4ge1xuICAgIHRyYW5zaXRpb24sXG4gICAgZXh0ZXJuYWxDb21wb25lbnQsXG4gICAgdGFnOiBleHRlcm5hbENvbXBvbmVudFxuICAgICAgPyByZXNvbHZlQ29tcG9uZW50KHRhZylcbiAgICAgIDogdHJhbnNpdGlvblxuICAgICAgPyBUcmFuc2l0aW9uR3JvdXBcbiAgICAgIDogdGFnXG4gIH07XG59XG5cbmZ1bmN0aW9uIGNvbXB1dGVDb21wb25lbnRTdHJ1Y3R1cmUoeyAkc2xvdHMsIHRhZywgcmVhbExpc3QsIGdldEtleSB9KSB7XG4gIGNvbnN0IG5vZGVzID0gY29tcHV0ZU5vZGVzKHsgJHNsb3RzLCByZWFsTGlzdCwgZ2V0S2V5IH0pO1xuICBjb25zdCByb290ID0gZ2V0Um9vdEluZm9ybWF0aW9uKHRhZyk7XG4gIHJldHVybiBuZXcgQ29tcG9uZW50U3RydWN0dXJlKHsgbm9kZXMsIHJvb3QsIHJlYWxMaXN0IH0pO1xufVxuXG5leHBvcnQgeyBjb21wdXRlQ29tcG9uZW50U3RydWN0dXJlIH07XG4iXSwibmFtZXMiOlsiQ29tcG9uZW50U3RydWN0dXJlIiwiaXNIdG1sVGFnIiwiaXNUcmFuc2l0aW9uIiwicmVzb2x2ZUNvbXBvbmVudCIsIlRyYW5zaXRpb25Hcm91cCIsImdldFNsb3QiLCJzbG90cyIsImtleSIsInNsb3RWYWx1ZSIsImNvbXB1dGVOb2RlcyIsIl9yZWYiLCIkc2xvdHMiLCJyZWFsTGlzdCIsImdldEtleSIsIm5vcm1hbGl6ZWRMaXN0IiwiX21hcCIsIm1hcCIsIm5hbWUiLCJfbWFwMiIsIl9zbGljZWRUb0FycmF5IiwiaGVhZGVyIiwiZm9vdGVyIiwiaXRlbSIsIkVycm9yIiwiZGVmYXVsdE5vZGVzIiwiZmxhdE1hcCIsImVsZW1lbnQiLCJpbmRleCIsIm5vZGUiLCJwcm9wcyIsIl9vYmplY3RTcHJlYWQiLCJsZW5ndGgiLCJnZXRSb290SW5mb3JtYXRpb24iLCJ0YWciLCJ0cmFuc2l0aW9uIiwiZXh0ZXJuYWxDb21wb25lbnQiLCJjb21wdXRlQ29tcG9uZW50U3RydWN0dXJlIiwiX3JlZjIiLCJub2RlcyIsInJvb3QiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/app/vendors/vuedraggable/src/core/renderHelper.js\n");

/***/ }),

/***/ "./resources/js/app/vendors/vuedraggable/src/core/sortableEvents.js":
/*!**************************************************************************!*\
  !*** ./resources/js/app/vendors/vuedraggable/src/core/sortableEvents.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   events: () => (/* binding */ events),\n/* harmony export */   isReadOnly: () => (/* binding */ isReadOnly)\n/* harmony export */ });\nvar manageAndEmit = [\"Start\", \"Add\", \"Remove\", \"Update\", \"End\"];\nvar emit = [\"Choose\", \"Unchoose\", \"Sort\", \"Filter\", \"Clone\"];\nvar manage = [\"Move\"];\nvar eventHandlerNames = [manage, manageAndEmit, emit].flatMap(function (events) {\n  return events;\n}).map(function (evt) {\n  return \"on\".concat(evt);\n});\nvar events = {\n  manage: manage,\n  manageAndEmit: manageAndEmit,\n  emit: emit\n};\nfunction isReadOnly(eventName) {\n  return eventHandlerNames.indexOf(eventName) !== -1;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwL3ZlbmRvcnMvdnVlZHJhZ2dhYmxlL3NyYy9jb3JlL3NvcnRhYmxlRXZlbnRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsSUFBTUEsYUFBYSxHQUFHLENBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsUUFBUSxFQUFFLEtBQUssQ0FBQztBQUNqRSxJQUFNQyxJQUFJLEdBQUcsQ0FBQyxRQUFRLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRSxRQUFRLEVBQUUsT0FBTyxDQUFDO0FBQzlELElBQU1DLE1BQU0sR0FBRyxDQUFDLE1BQU0sQ0FBQztBQUN2QixJQUFNQyxpQkFBaUIsR0FBRyxDQUFDRCxNQUFNLEVBQUVGLGFBQWEsRUFBRUMsSUFBSSxDQUFDLENBQ3BERyxPQUFPLENBQUMsVUFBQUMsTUFBTTtFQUFBLE9BQUlBLE1BQU07QUFBQSxFQUFDLENBQ3pCQyxHQUFHLENBQUMsVUFBQUMsR0FBRztFQUFBLFlBQUFDLE1BQUEsQ0FBU0QsR0FBRztBQUFBLENBQUUsQ0FBQztBQUV6QixJQUFNRixNQUFNLEdBQUc7RUFDYkgsTUFBTSxFQUFOQSxNQUFNO0VBQ05GLGFBQWEsRUFBYkEsYUFBYTtFQUNiQyxJQUFJLEVBQUpBO0FBQ0YsQ0FBQztBQUVELFNBQVNRLFVBQVVBLENBQUNDLFNBQVMsRUFBRTtFQUM3QixPQUFPUCxpQkFBaUIsQ0FBQ1EsT0FBTyxDQUFDRCxTQUFTLENBQUMsS0FBSyxDQUFDLENBQUM7QUFDcEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvYXBwL3ZlbmRvcnMvdnVlZHJhZ2dhYmxlL3NyYy9jb3JlL3NvcnRhYmxlRXZlbnRzLmpzPzgzYTYiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgbWFuYWdlQW5kRW1pdCA9IFtcIlN0YXJ0XCIsIFwiQWRkXCIsIFwiUmVtb3ZlXCIsIFwiVXBkYXRlXCIsIFwiRW5kXCJdO1xuY29uc3QgZW1pdCA9IFtcIkNob29zZVwiLCBcIlVuY2hvb3NlXCIsIFwiU29ydFwiLCBcIkZpbHRlclwiLCBcIkNsb25lXCJdO1xuY29uc3QgbWFuYWdlID0gW1wiTW92ZVwiXTtcbmNvbnN0IGV2ZW50SGFuZGxlck5hbWVzID0gW21hbmFnZSwgbWFuYWdlQW5kRW1pdCwgZW1pdF1cbiAgLmZsYXRNYXAoZXZlbnRzID0+IGV2ZW50cylcbiAgLm1hcChldnQgPT4gYG9uJHtldnR9YCk7XG5cbmNvbnN0IGV2ZW50cyA9IHtcbiAgbWFuYWdlLFxuICBtYW5hZ2VBbmRFbWl0LFxuICBlbWl0XG59O1xuXG5mdW5jdGlvbiBpc1JlYWRPbmx5KGV2ZW50TmFtZSkge1xuICByZXR1cm4gZXZlbnRIYW5kbGVyTmFtZXMuaW5kZXhPZihldmVudE5hbWUpICE9PSAtMTtcbn1cblxuZXhwb3J0IHsgZXZlbnRzLCBpc1JlYWRPbmx5IH07XG4iXSwibmFtZXMiOlsibWFuYWdlQW5kRW1pdCIsImVtaXQiLCJtYW5hZ2UiLCJldmVudEhhbmRsZXJOYW1lcyIsImZsYXRNYXAiLCJldmVudHMiLCJtYXAiLCJldnQiLCJjb25jYXQiLCJpc1JlYWRPbmx5IiwiZXZlbnROYW1lIiwiaW5kZXhPZiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/app/vendors/vuedraggable/src/core/sortableEvents.js\n");

/***/ }),

/***/ "./resources/js/app/vendors/vuedraggable/src/util/console.js":
/*!*******************************************************************!*\
  !*** ./resources/js/app/vendors/vuedraggable/src/util/console.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   console: () => (/* binding */ console)\n/* harmony export */ });\nfunction getConsole() {\n  if (typeof window !== \"undefined\") {\n    return window.console;\n  }\n  return __webpack_require__.g.console;\n}\nvar console = getConsole();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwL3ZlbmRvcnMvdnVlZHJhZ2dhYmxlL3NyYy91dGlsL2NvbnNvbGUuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLFNBQVNBLFVBQVVBLENBQUEsRUFBRztFQUNwQixJQUFJLE9BQU9DLE1BQU0sS0FBSyxXQUFXLEVBQUU7SUFDakMsT0FBT0EsTUFBTSxDQUFDQyxPQUFPO0VBQ3ZCO0VBQ0EsT0FBT0MscUJBQU0sQ0FBQ0QsT0FBTztBQUN2QjtBQUNBLElBQU1BLE9BQU8sR0FBR0YsVUFBVSxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvYXBwL3ZlbmRvcnMvdnVlZHJhZ2dhYmxlL3NyYy91dGlsL2NvbnNvbGUuanM/MmYwNCJdLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBnZXRDb25zb2xlKCkge1xuICBpZiAodHlwZW9mIHdpbmRvdyAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHJldHVybiB3aW5kb3cuY29uc29sZTtcbiAgfVxuICByZXR1cm4gZ2xvYmFsLmNvbnNvbGU7XG59XG5jb25zdCBjb25zb2xlID0gZ2V0Q29uc29sZSgpO1xuXG5leHBvcnQgeyBjb25zb2xlIH07XG4iXSwibmFtZXMiOlsiZ2V0Q29uc29sZSIsIndpbmRvdyIsImNvbnNvbGUiLCJnbG9iYWwiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/app/vendors/vuedraggable/src/util/console.js\n");

/***/ }),

/***/ "./resources/js/app/vendors/vuedraggable/src/util/htmlHelper.js":
/*!**********************************************************************!*\
  !*** ./resources/js/app/vendors/vuedraggable/src/util/htmlHelper.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   insertNodeAt: () => (/* binding */ insertNodeAt),\n/* harmony export */   removeNode: () => (/* binding */ removeNode)\n/* harmony export */ });\nfunction removeNode(node) {\n  if (node.parentElement !== null) {\n    node.parentElement.removeChild(node);\n  }\n}\nfunction insertNodeAt(fatherNode, node, position) {\n  var refNode = position === 0 ? fatherNode.children[0] : fatherNode.children[position - 1].nextSibling;\n  fatherNode.insertBefore(node, refNode);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwL3ZlbmRvcnMvdnVlZHJhZ2dhYmxlL3NyYy91dGlsL2h0bWxIZWxwZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxTQUFTQSxVQUFVQSxDQUFDQyxJQUFJLEVBQUU7RUFDeEIsSUFBSUEsSUFBSSxDQUFDQyxhQUFhLEtBQUssSUFBSSxFQUFFO0lBQy9CRCxJQUFJLENBQUNDLGFBQWEsQ0FBQ0MsV0FBVyxDQUFDRixJQUFJLENBQUM7RUFDdEM7QUFDRjtBQUVBLFNBQVNHLFlBQVlBLENBQUNDLFVBQVUsRUFBRUosSUFBSSxFQUFFSyxRQUFRLEVBQUU7RUFDaEQsSUFBTUMsT0FBTyxHQUNYRCxRQUFRLEtBQUssQ0FBQyxHQUNWRCxVQUFVLENBQUNHLFFBQVEsQ0FBQyxDQUFDLENBQUMsR0FDdEJILFVBQVUsQ0FBQ0csUUFBUSxDQUFDRixRQUFRLEdBQUcsQ0FBQyxDQUFDLENBQUNHLFdBQVc7RUFDbkRKLFVBQVUsQ0FBQ0ssWUFBWSxDQUFDVCxJQUFJLEVBQUVNLE9BQU8sQ0FBQztBQUN4QyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9hcHAvdmVuZG9ycy92dWVkcmFnZ2FibGUvc3JjL3V0aWwvaHRtbEhlbHBlci5qcz9mZDA1Il0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIHJlbW92ZU5vZGUobm9kZSkge1xuICBpZiAobm9kZS5wYXJlbnRFbGVtZW50ICE9PSBudWxsKSB7XG4gICAgbm9kZS5wYXJlbnRFbGVtZW50LnJlbW92ZUNoaWxkKG5vZGUpO1xuICB9XG59XG5cbmZ1bmN0aW9uIGluc2VydE5vZGVBdChmYXRoZXJOb2RlLCBub2RlLCBwb3NpdGlvbikge1xuICBjb25zdCByZWZOb2RlID1cbiAgICBwb3NpdGlvbiA9PT0gMFxuICAgICAgPyBmYXRoZXJOb2RlLmNoaWxkcmVuWzBdXG4gICAgICA6IGZhdGhlck5vZGUuY2hpbGRyZW5bcG9zaXRpb24gLSAxXS5uZXh0U2libGluZztcbiAgZmF0aGVyTm9kZS5pbnNlcnRCZWZvcmUobm9kZSwgcmVmTm9kZSk7XG59XG5cbmV4cG9ydCB7IGluc2VydE5vZGVBdCwgcmVtb3ZlTm9kZSB9O1xuIl0sIm5hbWVzIjpbInJlbW92ZU5vZGUiLCJub2RlIiwicGFyZW50RWxlbWVudCIsInJlbW92ZUNoaWxkIiwiaW5zZXJ0Tm9kZUF0IiwiZmF0aGVyTm9kZSIsInBvc2l0aW9uIiwicmVmTm9kZSIsImNoaWxkcmVuIiwibmV4dFNpYmxpbmciLCJpbnNlcnRCZWZvcmUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/app/vendors/vuedraggable/src/util/htmlHelper.js\n");

/***/ }),

/***/ "./resources/js/app/vendors/vuedraggable/src/util/string.js":
/*!******************************************************************!*\
  !*** ./resources/js/app/vendors/vuedraggable/src/util/string.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   camelize: () => (/* binding */ camelize)\n/* harmony export */ });\nfunction cached(fn) {\n  var cache = Object.create(null);\n  return function cachedFn(str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str));\n  };\n}\nvar regex = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(regex, function (_, c) {\n    return c.toUpperCase();\n  });\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwL3ZlbmRvcnMvdnVlZHJhZ2dhYmxlL3NyYy91dGlsL3N0cmluZy5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUEsU0FBU0EsTUFBTUEsQ0FBQ0MsRUFBRSxFQUFFO0VBQ2xCLElBQU1DLEtBQUssR0FBR0MsTUFBTSxDQUFDQyxNQUFNLENBQUMsSUFBSSxDQUFDO0VBQ2pDLE9BQU8sU0FBU0MsUUFBUUEsQ0FBQ0MsR0FBRyxFQUFFO0lBQzVCLElBQU1DLEdBQUcsR0FBR0wsS0FBSyxDQUFDSSxHQUFHLENBQUM7SUFDdEIsT0FBT0MsR0FBRyxLQUFLTCxLQUFLLENBQUNJLEdBQUcsQ0FBQyxHQUFHTCxFQUFFLENBQUNLLEdBQUcsQ0FBQyxDQUFDO0VBQ3RDLENBQUM7QUFDSDtBQUVBLElBQU1FLEtBQUssR0FBRyxRQUFRO0FBQ3RCLElBQU1DLFFBQVEsR0FBR1QsTUFBTSxDQUFDLFVBQUFNLEdBQUc7RUFBQSxPQUFJQSxHQUFHLENBQUNJLE9BQU8sQ0FBQ0YsS0FBSyxFQUFFLFVBQUNHLENBQUMsRUFBRUMsQ0FBQztJQUFBLE9BQUtBLENBQUMsQ0FBQ0MsV0FBVyxDQUFDLENBQUM7RUFBQSxFQUFDO0FBQUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9hcHAvdmVuZG9ycy92dWVkcmFnZ2FibGUvc3JjL3V0aWwvc3RyaW5nLmpzP2Y2MmIiXSwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gY2FjaGVkKGZuKSB7XG4gIGNvbnN0IGNhY2hlID0gT2JqZWN0LmNyZWF0ZShudWxsKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIGNhY2hlZEZuKHN0cikge1xuICAgIGNvbnN0IGhpdCA9IGNhY2hlW3N0cl07XG4gICAgcmV0dXJuIGhpdCB8fCAoY2FjaGVbc3RyXSA9IGZuKHN0cikpO1xuICB9O1xufVxuXG5jb25zdCByZWdleCA9IC8tKFxcdykvZztcbmNvbnN0IGNhbWVsaXplID0gY2FjaGVkKHN0ciA9PiBzdHIucmVwbGFjZShyZWdleCwgKF8sIGMpID0+IGMudG9VcHBlckNhc2UoKSkpO1xuXG5leHBvcnQgeyBjYW1lbGl6ZSB9O1xuIl0sIm5hbWVzIjpbImNhY2hlZCIsImZuIiwiY2FjaGUiLCJPYmplY3QiLCJjcmVhdGUiLCJjYWNoZWRGbiIsInN0ciIsImhpdCIsInJlZ2V4IiwiY2FtZWxpemUiLCJyZXBsYWNlIiwiXyIsImMiLCJ0b1VwcGVyQ2FzZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/app/vendors/vuedraggable/src/util/string.js\n");

/***/ }),

/***/ "./resources/js/app/vendors/vuedraggable/src/util/tags.js":
/*!****************************************************************!*\
  !*** ./resources/js/app/vendors/vuedraggable/src/util/tags.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isHtmlAttribute: () => (/* binding */ isHtmlAttribute),\n/* harmony export */   isHtmlTag: () => (/* binding */ isHtmlTag),\n/* harmony export */   isTransition: () => (/* binding */ isTransition)\n/* harmony export */ });\nvar tags = [\"a\", \"abbr\", \"address\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"bdi\", \"bdo\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"img\", \"input\", \"ins\", \"kbd\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"math\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"pre\", \"progress\", \"q\", \"rb\", \"rp\", \"rt\", \"rtc\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"slot\", \"small\", \"source\", \"span\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"svg\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"u\", \"ul\", \"var\", \"video\", \"wbr\"];\nfunction isHtmlTag(name) {\n  return tags.includes(name);\n}\nfunction isTransition(name) {\n  return [\"transition-group\", \"TransitionGroup\"].includes(name);\n}\nfunction isHtmlAttribute(value) {\n  return [\"id\", \"class\", \"role\", \"style\"].includes(value) || value.startsWith(\"data-\") || value.startsWith(\"aria-\") || value.startsWith(\"on\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvYXBwL3ZlbmRvcnMvdnVlZHJhZ2dhYmxlL3NyYy91dGlsL3RhZ3MuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBTUEsSUFBSSxHQUFHLENBQ1gsR0FBRyxFQUNILE1BQU0sRUFDTixTQUFTLEVBQ1QsTUFBTSxFQUNOLFNBQVMsRUFDVCxPQUFPLEVBQ1AsT0FBTyxFQUNQLEdBQUcsRUFDSCxNQUFNLEVBQ04sS0FBSyxFQUNMLEtBQUssRUFDTCxZQUFZLEVBQ1osTUFBTSxFQUNOLElBQUksRUFDSixRQUFRLEVBQ1IsUUFBUSxFQUNSLFNBQVMsRUFDVCxNQUFNLEVBQ04sTUFBTSxFQUNOLEtBQUssRUFDTCxVQUFVLEVBQ1YsTUFBTSxFQUNOLFVBQVUsRUFDVixJQUFJLEVBQ0osS0FBSyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBQ0wsUUFBUSxFQUNSLEtBQUssRUFDTCxJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixPQUFPLEVBQ1AsVUFBVSxFQUNWLFlBQVksRUFDWixRQUFRLEVBQ1IsUUFBUSxFQUNSLE1BQU0sRUFDTixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixNQUFNLEVBQ04sUUFBUSxFQUNSLFFBQVEsRUFDUixJQUFJLEVBQ0osTUFBTSxFQUNOLEdBQUcsRUFDSCxRQUFRLEVBQ1IsS0FBSyxFQUNMLE9BQU8sRUFDUCxLQUFLLEVBQ0wsS0FBSyxFQUNMLE9BQU8sRUFDUCxRQUFRLEVBQ1IsSUFBSSxFQUNKLE1BQU0sRUFDTixNQUFNLEVBQ04sS0FBSyxFQUNMLE1BQU0sRUFDTixNQUFNLEVBQ04sTUFBTSxFQUNOLFVBQVUsRUFDVixNQUFNLEVBQ04sT0FBTyxFQUNQLEtBQUssRUFDTCxVQUFVLEVBQ1YsUUFBUSxFQUNSLElBQUksRUFDSixVQUFVLEVBQ1YsUUFBUSxFQUNSLFFBQVEsRUFDUixHQUFHLEVBQ0gsT0FBTyxFQUNQLFNBQVMsRUFDVCxLQUFLLEVBQ0wsVUFBVSxFQUNWLEdBQUcsRUFDSCxJQUFJLEVBQ0osSUFBSSxFQUNKLElBQUksRUFDSixLQUFLLEVBQ0wsTUFBTSxFQUNOLEdBQUcsRUFDSCxNQUFNLEVBQ04sUUFBUSxFQUNSLFNBQVMsRUFDVCxRQUFRLEVBQ1IsTUFBTSxFQUNOLE9BQU8sRUFDUCxRQUFRLEVBQ1IsTUFBTSxFQUNOLFFBQVEsRUFDUixPQUFPLEVBQ1AsS0FBSyxFQUNMLFNBQVMsRUFDVCxLQUFLLEVBQ0wsS0FBSyxFQUNMLE9BQU8sRUFDUCxPQUFPLEVBQ1AsSUFBSSxFQUNKLFVBQVUsRUFDVixVQUFVLEVBQ1YsT0FBTyxFQUNQLElBQUksRUFDSixPQUFPLEVBQ1AsTUFBTSxFQUNOLE9BQU8sRUFDUCxJQUFJLEVBQ0osT0FBTyxFQUNQLEdBQUcsRUFDSCxJQUFJLEVBQ0osS0FBSyxFQUNMLE9BQU8sRUFDUCxLQUFLLENBQ047QUFFRCxTQUFTQyxTQUFTQSxDQUFDQyxJQUFJLEVBQUU7RUFDdkIsT0FBT0YsSUFBSSxDQUFDRyxRQUFRLENBQUNELElBQUksQ0FBQztBQUM1QjtBQUVBLFNBQVNFLFlBQVlBLENBQUNGLElBQUksRUFBRTtFQUMxQixPQUFPLENBQUMsa0JBQWtCLEVBQUUsaUJBQWlCLENBQUMsQ0FBQ0MsUUFBUSxDQUFDRCxJQUFJLENBQUM7QUFDL0Q7QUFFQSxTQUFTRyxlQUFlQSxDQUFDQyxLQUFLLEVBQUU7RUFDOUIsT0FDRSxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsTUFBTSxFQUFFLE9BQU8sQ0FBQyxDQUFDSCxRQUFRLENBQUNHLEtBQUssQ0FBQyxJQUNoREEsS0FBSyxDQUFDQyxVQUFVLENBQUMsT0FBTyxDQUFDLElBQ3pCRCxLQUFLLENBQUNDLFVBQVUsQ0FBQyxPQUFPLENBQUMsSUFDekJELEtBQUssQ0FBQ0MsVUFBVSxDQUFDLElBQUksQ0FBQztBQUUxQiIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3Jlc291cmNlcy9qcy9hcHAvdmVuZG9ycy92dWVkcmFnZ2FibGUvc3JjL3V0aWwvdGFncy5qcz9jMTczIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHRhZ3MgPSBbXG4gIFwiYVwiLFxuICBcImFiYnJcIixcbiAgXCJhZGRyZXNzXCIsXG4gIFwiYXJlYVwiLFxuICBcImFydGljbGVcIixcbiAgXCJhc2lkZVwiLFxuICBcImF1ZGlvXCIsXG4gIFwiYlwiLFxuICBcImJhc2VcIixcbiAgXCJiZGlcIixcbiAgXCJiZG9cIixcbiAgXCJibG9ja3F1b3RlXCIsXG4gIFwiYm9keVwiLFxuICBcImJyXCIsXG4gIFwiYnV0dG9uXCIsXG4gIFwiY2FudmFzXCIsXG4gIFwiY2FwdGlvblwiLFxuICBcImNpdGVcIixcbiAgXCJjb2RlXCIsXG4gIFwiY29sXCIsXG4gIFwiY29sZ3JvdXBcIixcbiAgXCJkYXRhXCIsXG4gIFwiZGF0YWxpc3RcIixcbiAgXCJkZFwiLFxuICBcImRlbFwiLFxuICBcImRldGFpbHNcIixcbiAgXCJkZm5cIixcbiAgXCJkaWFsb2dcIixcbiAgXCJkaXZcIixcbiAgXCJkbFwiLFxuICBcImR0XCIsXG4gIFwiZW1cIixcbiAgXCJlbWJlZFwiLFxuICBcImZpZWxkc2V0XCIsXG4gIFwiZmlnY2FwdGlvblwiLFxuICBcImZpZ3VyZVwiLFxuICBcImZvb3RlclwiLFxuICBcImZvcm1cIixcbiAgXCJoMVwiLFxuICBcImgyXCIsXG4gIFwiaDNcIixcbiAgXCJoNFwiLFxuICBcImg1XCIsXG4gIFwiaDZcIixcbiAgXCJoZWFkXCIsXG4gIFwiaGVhZGVyXCIsXG4gIFwiaGdyb3VwXCIsXG4gIFwiaHJcIixcbiAgXCJodG1sXCIsXG4gIFwiaVwiLFxuICBcImlmcmFtZVwiLFxuICBcImltZ1wiLFxuICBcImlucHV0XCIsXG4gIFwiaW5zXCIsXG4gIFwia2JkXCIsXG4gIFwibGFiZWxcIixcbiAgXCJsZWdlbmRcIixcbiAgXCJsaVwiLFxuICBcImxpbmtcIixcbiAgXCJtYWluXCIsXG4gIFwibWFwXCIsXG4gIFwibWFya1wiLFxuICBcIm1hdGhcIixcbiAgXCJtZW51XCIsXG4gIFwibWVudWl0ZW1cIixcbiAgXCJtZXRhXCIsXG4gIFwibWV0ZXJcIixcbiAgXCJuYXZcIixcbiAgXCJub3NjcmlwdFwiLFxuICBcIm9iamVjdFwiLFxuICBcIm9sXCIsXG4gIFwib3B0Z3JvdXBcIixcbiAgXCJvcHRpb25cIixcbiAgXCJvdXRwdXRcIixcbiAgXCJwXCIsXG4gIFwicGFyYW1cIixcbiAgXCJwaWN0dXJlXCIsXG4gIFwicHJlXCIsXG4gIFwicHJvZ3Jlc3NcIixcbiAgXCJxXCIsXG4gIFwicmJcIixcbiAgXCJycFwiLFxuICBcInJ0XCIsXG4gIFwicnRjXCIsXG4gIFwicnVieVwiLFxuICBcInNcIixcbiAgXCJzYW1wXCIsXG4gIFwic2NyaXB0XCIsXG4gIFwic2VjdGlvblwiLFxuICBcInNlbGVjdFwiLFxuICBcInNsb3RcIixcbiAgXCJzbWFsbFwiLFxuICBcInNvdXJjZVwiLFxuICBcInNwYW5cIixcbiAgXCJzdHJvbmdcIixcbiAgXCJzdHlsZVwiLFxuICBcInN1YlwiLFxuICBcInN1bW1hcnlcIixcbiAgXCJzdXBcIixcbiAgXCJzdmdcIixcbiAgXCJ0YWJsZVwiLFxuICBcInRib2R5XCIsXG4gIFwidGRcIixcbiAgXCJ0ZW1wbGF0ZVwiLFxuICBcInRleHRhcmVhXCIsXG4gIFwidGZvb3RcIixcbiAgXCJ0aFwiLFxuICBcInRoZWFkXCIsXG4gIFwidGltZVwiLFxuICBcInRpdGxlXCIsXG4gIFwidHJcIixcbiAgXCJ0cmFja1wiLFxuICBcInVcIixcbiAgXCJ1bFwiLFxuICBcInZhclwiLFxuICBcInZpZGVvXCIsXG4gIFwid2JyXCJcbl07XG5cbmZ1bmN0aW9uIGlzSHRtbFRhZyhuYW1lKSB7XG4gIHJldHVybiB0YWdzLmluY2x1ZGVzKG5hbWUpO1xufVxuXG5mdW5jdGlvbiBpc1RyYW5zaXRpb24obmFtZSkge1xuICByZXR1cm4gW1widHJhbnNpdGlvbi1ncm91cFwiLCBcIlRyYW5zaXRpb25Hcm91cFwiXS5pbmNsdWRlcyhuYW1lKTtcbn1cblxuZnVuY3Rpb24gaXNIdG1sQXR0cmlidXRlKHZhbHVlKSB7XG4gIHJldHVybiAoXG4gICAgW1wiaWRcIiwgXCJjbGFzc1wiLCBcInJvbGVcIiwgXCJzdHlsZVwiXS5pbmNsdWRlcyh2YWx1ZSkgfHxcbiAgICB2YWx1ZS5zdGFydHNXaXRoKFwiZGF0YS1cIikgfHxcbiAgICB2YWx1ZS5zdGFydHNXaXRoKFwiYXJpYS1cIikgfHxcbiAgICB2YWx1ZS5zdGFydHNXaXRoKFwib25cIilcbiAgKTtcbn1cblxuZXhwb3J0IHsgaXNIdG1sVGFnLCBpc0h0bWxBdHRyaWJ1dGUsIGlzVHJhbnNpdGlvbiB9O1xuIl0sIm5hbWVzIjpbInRhZ3MiLCJpc0h0bWxUYWciLCJuYW1lIiwiaW5jbHVkZXMiLCJpc1RyYW5zaXRpb24iLCJpc0h0bWxBdHRyaWJ1dGUiLCJ2YWx1ZSIsInN0YXJ0c1dpdGgiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/app/vendors/vuedraggable/src/util/tags.js\n");

/***/ }),

/***/ "./resources/js/app/vendors/vuedraggable/src/vuedraggable.js":
/*!*******************************************************************!*\
  !*** ./resources/js/app/vendors/vuedraggable/src/vuedraggable.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var sortablejs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! sortablejs */ \"./node_modules/sortablejs/modular/sortable.esm.js\");\n/* harmony import */ var _util_htmlHelper__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./util/htmlHelper */ \"./resources/js/app/vendors/vuedraggable/src/util/htmlHelper.js\");\n/* harmony import */ var _util_console__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./util/console */ \"./resources/js/app/vendors/vuedraggable/src/util/console.js\");\n/* harmony import */ var _core_componentBuilderHelper__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./core/componentBuilderHelper */ \"./resources/js/app/vendors/vuedraggable/src/core/componentBuilderHelper.js\");\n/* harmony import */ var _core_renderHelper__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./core/renderHelper */ \"./resources/js/app/vendors/vuedraggable/src/core/renderHelper.js\");\n/* harmony import */ var _core_sortableEvents__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./core/sortableEvents */ \"./resources/js/app/vendors/vuedraggable/src/core/sortableEvents.js\");\n/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! vue */ \"./node_modules/vue/dist/vue.esm-bundler.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(e, r, t) { return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, { value: t, enumerable: !0, configurable: !0, writable: !0 }) : e[r] = t, e; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _slicedToArray(r, e) { return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(r) { if (Array.isArray(r)) return r; }\nfunction _toConsumableArray(r) { return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(r, a) { if (r) { if (\"string\" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }\nfunction _iterableToArray(r) { if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r); }\nfunction _arrayWithoutHoles(r) { if (Array.isArray(r)) return _arrayLikeToArray(r); }\nfunction _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }\n\n\n\n\n\n\n\nfunction _emit(evtName, evtData) {\n  var _this = this;\n  (0,vue__WEBPACK_IMPORTED_MODULE_6__.nextTick)(function () {\n    return _this.$emit(evtName.toLowerCase(), evtData);\n  });\n}\nfunction _manage(evtName) {\n  var _this2 = this;\n  return function (evtData, originalElement) {\n    if (_this2.realList !== null) {\n      return _this2[\"onDrag\".concat(evtName)](evtData, originalElement);\n    }\n  };\n}\nfunction _manageAndEmit(evtName) {\n  var _this3 = this;\n  var delegateCallBack = _manage.call(this, evtName);\n  return function (evtData, originalElement) {\n    delegateCallBack.call(_this3, evtData, originalElement);\n    _emit.call(_this3, evtName, evtData);\n  };\n}\nvar draggingElement = null;\nvar props = {\n  list: {\n    type: Array,\n    required: false,\n    \"default\": null\n  },\n  modelValue: {\n    type: Array,\n    required: false,\n    \"default\": null\n  },\n  itemKey: {\n    type: [String, Function],\n    required: true\n  },\n  clone: {\n    type: Function,\n    \"default\": function _default(original) {\n      return original;\n    }\n  },\n  tag: {\n    type: String,\n    \"default\": \"div\"\n  },\n  move: {\n    type: Function,\n    \"default\": null\n  },\n  componentData: {\n    type: Object,\n    required: false,\n    \"default\": null\n  }\n};\nvar emits = [\"update:modelValue\", \"change\"].concat(_toConsumableArray([].concat(_toConsumableArray(_core_sortableEvents__WEBPACK_IMPORTED_MODULE_5__.events.manageAndEmit), _toConsumableArray(_core_sortableEvents__WEBPACK_IMPORTED_MODULE_5__.events.emit)).map(function (evt) {\n  return evt.toLowerCase();\n})));\nvar draggableComponent = (0,vue__WEBPACK_IMPORTED_MODULE_6__.defineComponent)({\n  name: \"draggable\",\n  inheritAttrs: false,\n  props: props,\n  emits: emits,\n  data: function data() {\n    return {\n      error: false\n    };\n  },\n  render: function render() {\n    try {\n      this.error = false;\n      var $slots = this.$slots,\n        $attrs = this.$attrs,\n        tag = this.tag,\n        componentData = this.componentData,\n        realList = this.realList,\n        getKey = this.getKey;\n      var componentStructure = (0,_core_renderHelper__WEBPACK_IMPORTED_MODULE_4__.computeComponentStructure)({\n        $slots: $slots,\n        tag: tag,\n        realList: realList,\n        getKey: getKey\n      });\n      this.componentStructure = componentStructure;\n      var attributes = (0,_core_componentBuilderHelper__WEBPACK_IMPORTED_MODULE_3__.getComponentAttributes)({\n        $attrs: $attrs,\n        componentData: componentData\n      });\n      return componentStructure.render(vue__WEBPACK_IMPORTED_MODULE_6__.h, attributes);\n    } catch (err) {\n      this.error = true;\n      return (0,vue__WEBPACK_IMPORTED_MODULE_6__.h)(\"pre\", {\n        style: {\n          color: \"red\"\n        }\n      }, err.stack);\n    }\n  },\n  created: function created() {\n    if (this.list !== null && this.modelValue !== null) {\n      _util_console__WEBPACK_IMPORTED_MODULE_2__.console.error(\"modelValue and list props are mutually exclusive! Please set one or another.\");\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n    if (this.error) {\n      return;\n    }\n    var $attrs = this.$attrs,\n      $el = this.$el,\n      componentStructure = this.componentStructure;\n    componentStructure.updated();\n    var sortableOptions = (0,_core_componentBuilderHelper__WEBPACK_IMPORTED_MODULE_3__.createSortableOption)({\n      $attrs: $attrs,\n      callBackBuilder: {\n        manageAndEmit: function manageAndEmit(event) {\n          return _manageAndEmit.call(_this4, event);\n        },\n        emit: function emit(event) {\n          return _emit.bind(_this4, event);\n        },\n        manage: function manage(event) {\n          return _manage.call(_this4, event);\n        }\n      }\n    });\n    var targetDomElement = $el.nodeType === 1 ? $el : $el.parentElement;\n    this._sortable = new sortablejs__WEBPACK_IMPORTED_MODULE_0__[\"default\"](targetDomElement, sortableOptions);\n    this.targetDomElement = targetDomElement;\n    targetDomElement.__draggable_component__ = this;\n  },\n  updated: function updated() {\n    this.componentStructure.updated();\n  },\n  beforeUnmount: function beforeUnmount() {\n    if (this._sortable !== undefined) this._sortable.destroy();\n  },\n  computed: {\n    realList: function realList() {\n      var list = this.list;\n      return list ? list : this.modelValue;\n    },\n    getKey: function getKey() {\n      var itemKey = this.itemKey;\n      if (typeof itemKey === \"function\") {\n        return itemKey;\n      }\n      return function (element) {\n        return element[itemKey];\n      };\n    }\n  },\n  watch: {\n    $attrs: {\n      handler: function handler(newOptionValue) {\n        var _sortable = this._sortable;\n        if (!_sortable) return;\n        (0,_core_componentBuilderHelper__WEBPACK_IMPORTED_MODULE_3__.getValidSortableEntries)(newOptionValue).forEach(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n          _sortable.option(key, value);\n        });\n      },\n      deep: true\n    }\n  },\n  methods: {\n    getUnderlyingVm: function getUnderlyingVm(domElement) {\n      return this.componentStructure.getUnderlyingVm(domElement) || null;\n    },\n    getUnderlyingPotencialDraggableComponent: function getUnderlyingPotencialDraggableComponent(htmElement) {\n      //TODO check case where you need to see component children\n      return htmElement.__draggable_component__;\n    },\n    emitChanges: function emitChanges(evt) {\n      var _this5 = this;\n      (0,vue__WEBPACK_IMPORTED_MODULE_6__.nextTick)(function () {\n        return _this5.$emit(\"change\", evt);\n      });\n    },\n    alterList: function alterList(onList) {\n      if (this.list) {\n        onList(this.list);\n        return;\n      }\n      var newList = _toConsumableArray(this.modelValue);\n      onList(newList);\n      this.$emit(\"update:modelValue\", newList);\n    },\n    spliceList: function spliceList() {\n      var _arguments = arguments;\n      var spliceList = function spliceList(list) {\n        return list.splice.apply(list, _toConsumableArray(_arguments));\n      };\n      this.alterList(spliceList);\n    },\n    updatePosition: function updatePosition(oldIndex, newIndex) {\n      var updatePosition = function updatePosition(list) {\n        return list.splice(newIndex, 0, list.splice(oldIndex, 1)[0]);\n      };\n      this.alterList(updatePosition);\n    },\n    getRelatedContextFromMoveEvent: function getRelatedContextFromMoveEvent(_ref3) {\n      var to = _ref3.to,\n        related = _ref3.related;\n      var component = this.getUnderlyingPotencialDraggableComponent(to);\n      if (!component) {\n        return {\n          component: component\n        };\n      }\n      var list = component.realList;\n      var context = {\n        list: list,\n        component: component\n      };\n      if (to !== related && list) {\n        var destination = component.getUnderlyingVm(related) || {};\n        return _objectSpread(_objectSpread({}, destination), context);\n      }\n      return context;\n    },\n    getVmIndexFromDomIndex: function getVmIndexFromDomIndex(domIndex) {\n      return this.componentStructure.getVmIndexFromDomIndex(domIndex, this.targetDomElement);\n    },\n    onDragStart: function onDragStart(evt) {\n      this.context = this.getUnderlyingVm(evt.item);\n      evt.item._underlying_vm_ = this.clone(this.context.element);\n      draggingElement = evt.item;\n    },\n    onDragAdd: function onDragAdd(evt) {\n      var element = evt.item._underlying_vm_;\n      if (element === undefined) {\n        return;\n      }\n      (0,_util_htmlHelper__WEBPACK_IMPORTED_MODULE_1__.removeNode)(evt.item);\n      var newIndex = this.getVmIndexFromDomIndex(evt.newIndex);\n      this.spliceList(newIndex, 0, element);\n      var added = {\n        element: element,\n        newIndex: newIndex\n      };\n      this.emitChanges({\n        added: added\n      });\n    },\n    onDragRemove: function onDragRemove(evt) {\n      (0,_util_htmlHelper__WEBPACK_IMPORTED_MODULE_1__.insertNodeAt)(this.$el, evt.item, evt.oldIndex);\n      if (evt.pullMode === \"clone\") {\n        (0,_util_htmlHelper__WEBPACK_IMPORTED_MODULE_1__.removeNode)(evt.clone);\n        return;\n      }\n      var _this$context = this.context,\n        oldIndex = _this$context.index,\n        element = _this$context.element;\n      this.spliceList(oldIndex, 1);\n      var removed = {\n        element: element,\n        oldIndex: oldIndex\n      };\n      this.emitChanges({\n        removed: removed\n      });\n    },\n    onDragUpdate: function onDragUpdate(evt) {\n      (0,_util_htmlHelper__WEBPACK_IMPORTED_MODULE_1__.removeNode)(evt.item);\n      (0,_util_htmlHelper__WEBPACK_IMPORTED_MODULE_1__.insertNodeAt)(evt.from, evt.item, evt.oldIndex);\n      var oldIndex = this.context.index;\n      var newIndex = this.getVmIndexFromDomIndex(evt.newIndex);\n      this.updatePosition(oldIndex, newIndex);\n      var moved = {\n        element: this.context.element,\n        oldIndex: oldIndex,\n        newIndex: newIndex\n      };\n      this.emitChanges({\n        moved: moved\n      });\n    },\n    computeFutureIndex: function computeFutureIndex(relatedContext, evt) {\n      if (!relatedContext.element) {\n        return 0;\n      }\n      var domChildren = _toConsumableArray(evt.to.children).filter(function (el) {\n        return el.style[\"display\"] !== \"none\";\n      });\n      var currentDomIndex = domChildren.indexOf(evt.related);\n      var currentIndex = relatedContext.component.getVmIndexFromDomIndex(currentDomIndex);\n      var draggedInList = domChildren.indexOf(draggingElement) !== -1;\n      return draggedInList || !evt.willInsertAfter ? currentIndex : currentIndex + 1;\n    },\n    onDragMove: function onDragMove(evt, originalEvent) {\n      var move = this.move,\n        realList = this.realList;\n      if (!move || !realList) {\n        return true;\n      }\n      var relatedContext = this.getRelatedContextFromMoveEvent(evt);\n      var futureIndex = this.computeFutureIndex(relatedContext, evt);\n      var draggedContext = _objectSpread(_objectSpread({}, this.context), {}, {\n        futureIndex: futureIndex\n      });\n      var sendEvent = _objectSpread(_objectSpread({}, evt), {}, {\n        relatedContext: relatedContext,\n        draggedContext: draggedContext\n      });\n      return move(sendEvent, originalEvent);\n    },\n    onDragEnd: function onDragEnd() {\n      draggingElement = null;\n    }\n  }\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (draggableComponent);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/app/vendors/vuedraggable/src/vuedraggable.js\n");

/***/ })

}]);